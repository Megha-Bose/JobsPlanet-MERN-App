{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Fuse from 'fuse.js';\n\nclass JobsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onFilter = e => {\n      let jobTypeVal = this.state.jobTypeFilterVal;\n      let salaryMinVal = this.state.salaryFilterMinVal;\n      let salaryMaxVal = this.state.salaryFilterMaxVal;\n      let durationVal = \"\";\n\n      if (this.state.durationFilterVal !== \"\") {\n        durationVal = parseInt(this.state.durationFilterVal);\n      }\n\n      let filteredJobs = this.state.extraJobs;\n\n      if (jobTypeVal !== \"\" && jobTypeVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.type === jobTypeVal);\n      }\n\n      if (salaryMinVal !== \"\" && salaryMinVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.salary >= salaryMinVal);\n      }\n\n      if (salaryMaxVal !== \"\" && salaryMaxVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.salary < salaryMaxVal);\n      }\n\n      if (durationVal !== \"\" && durationVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.duration < durationVal);\n      }\n\n      this.setState({\n        jobs: filteredJobs\n      });\n    };\n\n    this.onSearch = e => {\n      this.setState({\n        searchval: e.target.value\n      });\n      let sval = this.state.searchval;\n\n      if (sval === \"\" || sval === undefined) {\n        this.setState({\n          jobs: this.state.extraJobs\n        });\n      } else {\n        const options = {\n          keys: [\"title\"]\n        };\n        const fuse = new Fuse(this.state.extraJobs, options);\n        let result = fuse.search(sval);\n        this.setState({\n          jobs: this.state.extraJobs.filter(item => item.title.includes(sval))\n        });\n        let n = result.length;\n        let i = 0;\n        let res = [];\n\n        for (i = 0; i < n; i++) {\n          res.push(result[i].item);\n        } // console.log(res);\n\n\n        this.setState({\n          jobs: res\n        }); // console.log(this.state.jobs);\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      jobs: [],\n      extraJobs: [],\n      applications: [],\n      sortName: true,\n      recruiterName: \"\",\n      showform: false,\n      editing: \"\",\n      enteredsop: \"\",\n      sopError: \"\",\n      sortbysalary: true,\n      sortbyduration: true,\n      sortbyrating: true,\n      searchval: \"\",\n      jobTypeFilterVal: \"\",\n      salaryFilterMinVal: \"\",\n      salaryFilterMaxVal: \"\",\n      durationFilterVal: \"\"\n    };\n    this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\n    this.renderDurationIcon = this.renderDurationIcon.bind(this);\n    this.renderRatingIcon = this.renderRatingIcon.bind(this);\n    this.sortBySalary = this.sortBySalary.bind(this);\n    this.sortByDuration = this.sortByDuration.bind(this);\n    this.sortByRating = this.sortByRating.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.apply = this.apply.bind(this);\n    this.onSOPsubmit = this.onSOPsubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    this.setState({\n      showform: false\n    });\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        extraJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/application/get_applications').then(response => {\n      this.setState({\n        applications: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  sortBySalary() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbysalary;\n    array.sort(function (a, b) {\n      if (a.salary !== undefined && b.salary !== undefined) {\n        return (1 - +flag * 2) * (+a.salary - +b.salary);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbysalary: !this.state.sortbysalary\n    });\n  }\n\n  sortByDuration() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbyduration;\n    array.sort(function (a, b) {\n      if (a.duration !== undefined && b.duration !== undefined) {\n        return (1 - +flag * 2) * (+a.duration - +b.duration);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbyduration: !this.state.sortbyduration\n    });\n  }\n\n  sortByRating() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbyrating;\n    array.sort(function (a, b) {\n      if (a.rating !== undefined && b.rating !== undefined) {\n        return (1 - +flag * 2) * (+a.rating - +b.rating);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbyrating: !this.state.sortbyrating\n    });\n  }\n\n  renderSalaryIcon() {\n    if (this.state.sortbysalary) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderDurationIcon() {\n    if (this.state.sortbyduration) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderRatingIcon() {\n    if (this.state.sortbyrating) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      });\n    }\n  }\n\n  applied(job) {\n    const {\n      user\n    } = this.props.auth;\n    let num = 0;\n    let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status === \"Applied\" || item.status === \"Shortlisted\" || item.status === \"Accepted\"));\n    num = arr.length;\n    if (num > 0) return true;else return false;\n  }\n\n  apply(job) {\n    if (this.state.userdetails.numapp >= 10) {\n      alert(\"Maximum open applications of 10 reached. Take a break!\");\n    } else if (this.state.userdetails.working === true) {\n      alert(\"You are already accepted into one of the jobs you applied for. Check My Applications page.\");\n    } else {\n      let show = !this.state.showform;\n      this.setState({\n        showform: show\n      });\n      let editid = job._id;\n      this.setState({\n        editing: editid\n      });\n      console.log(this.state.showform);\n      this.props.history.push('/jobsList');\n      this.props.history.push('/jobsList');\n      this.props.history.goBack();\n    }\n  }\n\n  onSOPsubmit(job) {\n    const {\n      user\n    } = this.props.auth;\n    const newApplication = {\n      jobId: job._id,\n      applicantId: user.id,\n      recruiterId: job.recruiter,\n      stage: 0,\n      status: \"Applied\",\n      sop: this.state.enteredsop,\n      salary: job.salary,\n      recruiterName: job.recruiterName,\n      rating: -1,\n      title: job.title\n    };\n    let nnumapp = +job.numapp + 1;\n    const editJob = {\n      numapp: nnumapp\n    };\n    let appnumapp = +this.state.userdetails.numapp + 1;\n    const editApplicant = {\n      numapp: appnumapp\n    };\n    let num = this.state.enteredsop.split(' ').length;\n    let soperror = \"\";\n\n    if (num > 250) {\n      soperror = \"Maximum 250 words allowed.\";\n      this.setState({\n        sopError: soperror\n      });\n    }\n\n    if (num <= 250 && this.state.userdetails.numapp <= 10) {\n      axios.post('http://localhost:4000/application/add_application', newApplication).then(response => {\n        console.log(newApplication);\n        alert(\"Application sent successfully!\");\n      }).catch(function (error) {\n        console.log(error);\n        alert(\"Application could not be sent.\");\n      });\n      axios.put('http://localhost:4000/job/edit_job/' + job._id, editJob).then(response => {\n        console.log(editJob);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.put('http://localhost:4000/user/edit_profile/' + user.id, editApplicant).then(response => {\n        console.log(editApplicant);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        editting: \"\"\n      });\n      window.location.reload();\n    } else {\n      alert(\"SOP cannot have more than 250 words.\");\n    }\n  }\n\n  render() {\n    const userRole = this.state.userdetails.role;\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let AllJobs;\n\n    if (userRole === \"applicant\") {\n      AllJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Active Jobs\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"searchval\",\n        onChange: this.onChange,\n        value: this.state.searchval,\n        placeholder: \"Fuzzy Search\",\n        fullWidth: true,\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 389\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            onClick: this.onSearch,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }, React.createElement(SearchIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"Filters:\", React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.state.jobTypeFilterVal,\n        onChange: this.onChange,\n        id: \"jobTypeFilterVal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, \"Select Job Type\"), React.createElement(\"option\", {\n        value: \"fullTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Full-Time\"), React.createElement(\"option\", {\n        value: \"partTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"Part-Time\"), React.createElement(\"option\", {\n        value: \"wfh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Work from home\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"salaryFilterMinVal\",\n        onChange: this.onChange,\n        value: this.state.salaryFilterMinVal,\n        placeholder: \"Min Salary\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"salaryFilterMaxVal\",\n        onChange: this.onChange,\n        value: this.state.salaryFilterMaxVal,\n        placeholder: \"Max Salary\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.state.durationFilterVal,\n        onChange: this.onChange,\n        id: \"durationFilterVal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, \"Select duration\"), React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"Indefinite\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, \"1 month\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, \"2 months\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, \"3 months\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"4 months\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"5 months\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"6 months\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"Filter\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Recruiter\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \"Type\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortBySalary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, this.renderSalaryIcon()), \"Salary (per month)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortByDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, this.renderDurationIcon()), \"Duration(months): 0 for Indefinite\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"Date of posting\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortByRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, this.renderRatingIcon()), \"Rating\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, this.state.jobs.filter(item => new Date().getTime() <= new Date(item.deadline.substring(0, 10)).getTime()).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, job.recruiterName), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, job.type === \"partTime\" ? \"Part-Time\" : \"\", job.type === \"fullTime\" ? \"Full-Time\" : \"\", job.type === \"wfh\" ? \"Work from Home\" : \"\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, job.salary), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, job.duration), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"Day-\", new Date(job.dateOfPost).getDate(), \", Month-\", monthNames[new Date(job.dateOfPost).getMonth()], \", Year-\", new Date(job.dateOfPost).getFullYear()), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, job.deadline.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, job.rating ? job.rating.toFixed(1) : \"\", React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \" star\"))), !this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Apply for this job\",\n        \"aria-label\": \"apply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.apply(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, \"Apply\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }), this.applied(job) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Applied for this job\",\n        \"aria-label\": \"applied\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \"Applied\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }), (job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"No vacancy\",\n        \"aria-label\": \"full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"Full\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }), this.state.showform === true && job._id === this.state.editing ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"enteredsop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, \"Enter SOP:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.enteredsop,\n        id: \"enteredsop\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.onSOPsubmit(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \"Submit\"))) : React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      })))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, AllJobs))))));\n  }\n\n}\n\nJobsList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(JobsList);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","Fuse","JobsList","constructor","props","onLogoutClick","e","preventDefault","logoutUser","onChange","setState","target","id","value","onFilter","jobTypeVal","state","jobTypeFilterVal","salaryMinVal","salaryFilterMinVal","salaryMaxVal","salaryFilterMaxVal","durationVal","durationFilterVal","parseInt","filteredJobs","extraJobs","undefined","filter","item","type","salary","duration","jobs","onSearch","searchval","sval","options","keys","fuse","result","search","title","includes","n","length","i","res","push","userdetails","applications","sortName","recruiterName","showform","editing","enteredsop","sopError","sortbysalary","sortbyduration","sortbyrating","renderSalaryIcon","bind","renderDurationIcon","renderRatingIcon","sortBySalary","sortByDuration","sortByRating","apply","onSOPsubmit","componentDidMount","user","auth","get","then","response","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","array","flag","sort","a","b","rating","applied","job","num","arr","jobId","_id","applicantId","status","numapp","alert","working","show","editid","history","goBack","newApplication","recruiterId","recruiter","stage","sop","nnumapp","editJob","appnumapp","editApplicant","split","soperror","post","put","editting","window","location","reload","render","userRole","role","monthNames","AllJobs","endAdornment","Date","getTime","deadline","substring","map","ind","dateOfPost","getDate","getMonth","getFullYear","toFixed","numpos","posmax","appmax","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Fuse from 'fuse.js';\n\nclass JobsList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            jobs: [],\n            extraJobs: [], \n            applications: [],\n            sortName:true, \n            recruiterName: \"\",\n            showform: false,\n            editing: \"\",\n            enteredsop: \"\",\n            sopError: \"\",\n            sortbysalary:true,\n            sortbyduration:true,\n            sortbyrating:true,\n            searchval: \"\",\n            jobTypeFilterVal: \"\",\n            salaryFilterMinVal: \"\",\n            salaryFilterMaxVal: \"\",\n            durationFilterVal: \"\"\n        };\n        this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\n        this.renderDurationIcon = this.renderDurationIcon.bind(this);\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\n        this.sortBySalary = this.sortBySalary.bind(this);\n        this.sortByDuration = this.sortByDuration.bind(this);\n        this.sortByRating = this.sortByRating.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.apply = this.apply.bind(this);\n        this.onSOPsubmit = this.onSOPsubmit.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onFilter = e => {\n        let jobTypeVal = this.state.jobTypeFilterVal;\n        let salaryMinVal = this.state.salaryFilterMinVal;\n        let salaryMaxVal = this.state.salaryFilterMaxVal;\n        let durationVal = \"\";\n        if(this.state.durationFilterVal !== \"\")\n        {\n            durationVal = parseInt(this.state.durationFilterVal);\n        }\n        let filteredJobs = this.state.extraJobs;\n        if(jobTypeVal !== \"\" && jobTypeVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.type === jobTypeVal);\n        }\n        if(salaryMinVal !== \"\" && salaryMinVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.salary >= salaryMinVal);\n        }\n        if(salaryMaxVal !== \"\" && salaryMaxVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.salary < salaryMaxVal);\n        }\n        if(durationVal !== \"\" && durationVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.duration < durationVal);\n        }\n        this.setState({ jobs: filteredJobs });\n    };\n\n    onSearch = e => {\n        this.setState({ searchval : e.target.value });\n        let sval = this.state.searchval;\n        if(sval === \"\" || sval === undefined)\n        {\n            this.setState({ jobs : this.state.extraJobs });\n        }\n        else\n        {\n            const options = {\n                keys: [\"title\"]\n            };\n            const fuse = new Fuse(this.state.extraJobs, options);\n            let result = fuse.search(sval);\n            \n            this.setState({ jobs : this.state.extraJobs.filter(item => item.title.includes(sval)) });\n            let n = result.length;\n            let i = 0;\n            let res = [];\n            for( i = 0; i < n; i++) {\n                res.push(result[i].item);\n            }\n            // console.log(res);\n            this.setState({ jobs : res });\n            // console.log(this.state.jobs);\n            \n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        this.setState({ showform : false });\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, extraJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    sortBySalary(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbysalary;\n        array.sort(function(a, b) {\n            if(a.salary !== undefined && b.salary !== undefined){\n                return (1 - +flag*2) * (+a.salary - +b.salary);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbysalary:!this.state.sortbysalary,\n        })\n    }\n\n    sortByDuration(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyduration;\n        array.sort(function(a, b) {\n            if(a.duration !== undefined && b.duration !== undefined){\n                return (1 - +flag*2) * (+a.duration - +b.duration);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyduration:!this.state.sortbyduration,\n        })\n    }\n\n    sortByRating(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyrating;\n        array.sort(function(a, b) {\n            if(a.rating !== undefined && b.rating !== undefined){\n                return (1 - +flag*2) * (+a.rating - +b.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyrating:!this.state.sortbyrating,\n        })\n    }\n\n    renderSalaryIcon(){\n        if(this.state.sortbysalary){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderDurationIcon(){\n        if(this.state.sortbyduration){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderRatingIcon(){\n        if(this.state.sortbyrating){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    applied(job) {\n        const { user } = this.props.auth;\n        let num = 0;\n        let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status === \"Applied\" || item.status === \"Shortlisted\" || item.status === \"Accepted\"));\n        num = arr.length;\n        if(num>0) return true;\n        else return false;\n    }\n\n    apply(job)\n    {\n        if(this.state.userdetails.numapp >= 10)\n        {\n            alert(\"Maximum open applications of 10 reached. Take a break!\");\n        }\n        else if(this.state.userdetails.working === true)\n        {\n            alert(\"You are already accepted into one of the jobs you applied for. Check My Applications page.\");\n        }\n        else\n        {\n            let show = !this.state.showform;\n            this.setState({ showform : show });\n            let editid = job._id;\n            this.setState({ editing : editid });\n            console.log(this.state.showform);\n            this.props.history.push('/jobsList');\n            this.props.history.push('/jobsList');\n            this.props.history.goBack();\n        }\n    }\n\n    onSOPsubmit(job)\n    {\n        const { user } = this.props.auth;\n        const newApplication = {\n            jobId: job._id,\n            applicantId: user.id,\n            recruiterId:job.recruiter,\n            stage: 0,\n            status: \"Applied\",\n            sop: this.state.enteredsop,\n            salary: job.salary,\n            recruiterName: job.recruiterName,\n            rating: -1,\n            title: job.title\n        };\n\n        let nnumapp = +job.numapp + 1;\n\n        const editJob = {\n            numapp: nnumapp \n        }\n\n        let appnumapp = +this.state.userdetails.numapp + 1;\n\n        const editApplicant = {\n            numapp:  appnumapp\n        }\n\n        let num = this.state.enteredsop.split(' ').length;\n\n        let soperror = \"\";\n        if(num>250)\n        {\n            soperror = \"Maximum 250 words allowed.\";\n            this.setState({sopError: soperror});\n        }\n\n        if(num <= 250 && this.state.userdetails.numapp <= 10)\n        {\n            axios\n                .post('http://localhost:4000/application/add_application', newApplication)\n                .then(response => {\n                    console.log(newApplication);\n                    alert(\"Application sent successfully!\");\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Application could not be sent.\");\n                })\n            axios\n                .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n                .then(response => {\n                    console.log(editJob);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + user.id, editApplicant)\n                .then(response => {\n                    console.log(editApplicant);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n                this.setState({ editting : \"\" });\n            window.location.reload();\n        }\n        else {\n            alert(\"SOP cannot have more than 250 words.\");\n        }\n    }\n    \n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        let AllJobs;\n        if(userRole === \"applicant\") {\n            AllJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Active Jobs</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"searchval\" \n                        onChange={this.onChange}\n                        value={this.state.searchval}\n                        placeholder=\"Fuzzy Search\"\n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    \n                                    <IconButton onClick={this.onSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                   \n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        Filters:\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <select \n                                value={this.state.jobTypeFilterVal} \n                                onChange={this.onChange}\n                                id=\"jobTypeFilterVal\"\n                            >\n                                <option value=\"\">Select Job Type</option>\n                                <option value = \"fullTime\">Full-Time</option>\n                                <option value=\"partTime\">Part-Time</option>\n                                <option value=\"wfh\">Work from home</option>\n                            </select>\n                            {/* <TextField \n                                id=\"jobTypeFilterVal\" \n                                onChange={this.onChange}\n                                value={this.state.jobTypeFilterVal}\n                                placeholder=\"Job Type\"\n                                fullWidth={true}   \n                            /> */}\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <TextField \n                                id=\"salaryFilterMinVal\" \n                                onChange={this.onChange}\n                                value={this.state.salaryFilterMinVal}\n                                placeholder=\"Min Salary\"\n                                fullWidth={true}   \n                            />\n                            <TextField \n                                id=\"salaryFilterMaxVal\" \n                                onChange={this.onChange}\n                                value={this.state.salaryFilterMaxVal}\n                                placeholder=\"Max Salary\"\n                                fullWidth={true}   \n                            />\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                       \n                            <select \n                                value={this.state.durationFilterVal} \n                                onChange={this.onChange}\n                                id=\"durationFilterVal\"\n                            >\n                                <option value=\"\">Select duration</option>\n                                <option value = \"0\" >Indefinite</option>\n                                <option value=\"1\">1 month</option>\n                                <option value=\"2\">2 months</option>\n                                <option value=\"3\">3 months</option>\n                                <option value=\"4\">4 months</option>\n                                <option value=\"5\">5 months</option>\n                                <option value=\"6\">6 months</option>\n                            </select>\n                \n                            <hr></hr>\n                            <button onClick={this.onFilter}>\n                                Filter\n                            </button>\n                            <hr></hr>\n                        </List>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                            <TableCell>Type</TableCell>\n                                            <TableCell><Button onClick={this.sortBySalary}>{this.renderSalaryIcon()}</Button>Salary (per month)</TableCell>\n                                            <TableCell><Button onClick={this.sortByDuration}>{this.renderDurationIcon()}</Button>Duration(months): 0 for Indefinite</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Deadline</TableCell>\n                                            <TableCell><Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button>Rating</TableCell>\n                                            \n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.recruiterName}</TableCell>\n                                            <TableCell>{job.type === \"partTime\"? \"Part-Time\": \"\"}\n                                            {job.type === \"fullTime\"? \"Full-Time\": \"\"}\n                                            {job.type === \"wfh\"? \"Work from Home\": \"\"}</TableCell>\n                                            <TableCell>{job.salary}</TableCell>\n                                            <TableCell>{job.duration}</TableCell>\n                                            <TableCell>Day-{new Date(job.dateOfPost).getDate()}, Month-{monthNames[new Date(job.dateOfPost).getMonth()]}, Year-{new Date(job.dateOfPost).getFullYear()}</TableCell>\n                                            <TableCell>{job.deadline.substring(0,10)}</TableCell>\n                                            <TableCell>{job.rating? job.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                    \n                                            {!this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Apply for this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.apply(job)}>\n                                                        Apply\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Applied for this job\" aria-label=\"applied\">\n                                                    <button\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Applied\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            : <div></div>\n\n                                            }\n                                            {(job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"No vacancy\" aria-label=\"full\">\n                                                    <button\n                                                        className=\"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Full\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n                                                <div></div>\n\n                                            }\n\n                                            {this.state.showform === true && job._id === this.state.editing?\n                                            <TableCell>\n                                                <div>\n                                                    <div className=\"input-field\">\n                                                        <label htmlFor=\"enteredsop\">Enter SOP:</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.enteredsop}\n                                                            id=\"enteredsop\"\n                                                            type=\"text\"\n                                                        />\n                                                    </div>\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.onSOPsubmit(job)}>\n                                                        Submit\n                                                    </button>\n                                                </div>                                    \n                                            </TableCell>\n                                            : <TableCell></TableCell>\n                                            }\n\n                                            \n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AllJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nJobsList.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(JobsList);"]},"metadata":{},"sourceType":"module"}