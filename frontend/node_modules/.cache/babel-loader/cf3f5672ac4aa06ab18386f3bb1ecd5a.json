{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass JobsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      userdetails: [],\n      jobs: [],\n      sortedJobs: [],\n      applications: [],\n      sortName: true,\n      recruiterName: \"\",\n      showForm: false,\n      editing: \"\",\n      enteredsop: \"\",\n      sopError: \"\"\n    }; // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    this.state.showForm = false;\n    this.state.editing = \"\";\n    this.state.enteredsop = \"\";\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/application/get_applications').then(response => {\n      this.setState({\n        applications: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  applied(job) {\n    const {\n      user\n    } = this.props.auth;\n    let num = 0;\n    let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status !== \"Rejected\" || item.status != \"Accepted\"));\n    num = arr.length;\n    if (num > 0) return true;else return false;\n  }\n\n  apply(job) {\n    this.state.showForm = !this.state.showForm;\n    this.state.editing = job._id; //this.setState({showform: ShowForm});\n\n    console.log(this.state.showForm);\n    this.props.history.push(\"/jobsList\");\n    this.props.history.push(\"/jobsList\");\n    this.props.history.goBack();\n  }\n\n  onSOPsubmit(job) {\n    const {\n      user\n    } = this.props.auth;\n    const newApplication = {\n      jobId: job._id,\n      applicantId: user.id,\n      recruiterId: job.recruiter,\n      stage: 0,\n      status: \"Applied\",\n      sop: this.state.enteredsop,\n      salary: job.salary,\n      recruiterName: job.recruiterName,\n      rating: -1,\n      title: job.title\n    };\n    let nnumapp = job.numapp + 1;\n    const editJob = {\n      numapp: nnumapp\n    };\n    let num = this.state.enteredsop.split(' ').length;\n\n    if (num <= 250) {\n      axios.post('http://localhost:4000/application/add_application', newApplication).then(response => {\n        console.log(newApplication);\n        alert(\"Application sent successfully!\");\n      }).catch(function (error) {\n        console.log(error);\n        alert(\"Applicantion could not be sent.\");\n      });\n      axios.post('http://localhost:4000/job/edit_job/' + job._id, editJob).then(response => {\n        console.log(editJob);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.state.editing = \"\";\n      this.props.history.push(\"/jobsList\");\n      this.props.history.push(\"/jobsList\");\n      this.props.history.goBack();\n    } else {\n      let soperror = \"Maximum 250 words allowed.\";\n      this.setState({\n        sopError: soperror\n      });\n    }\n  } // sortChange(){\n  //     var array = this.state.users;\n  //     var flag = this.state.sortName;\n  //     array.sort(function(a, b) {\n  //         if(a.date != undefined && b.date != undefined){\n  //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n  //         }\n  //         else{\n  //             return 1;\n  //         }\n  //       });\n  //     this.setState({\n  //         users:array,\n  //         sortName:!this.state.sortName,\n  //     })\n  // }\n  // renderIcon(){\n  //     if(this.state.sortName){\n  //         return(\n  //             <ArrowDownwardIcon/>\n  //         )\n  //     }\n  //     else{\n  //         return(\n  //             <ArrowUpwardIcon/>\n  //         )            \n  //     }\n  // }\n\n\n  render() {\n    const userRole = this.state.userdetails.role;\n    let AllJobs;\n\n    if (userRole === \"applicant\") {\n      AllJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Active Jobs\"))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Recruiter\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Salary (per month)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Duration(months)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Rating\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, this.state.jobs.filter(item => new Date().getTime() <= new Date(item.deadline.substring(0, 10)).getTime()).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, job.recruiterName), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, job.salary), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, job.duration), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, job.deadline.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, job.rating, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \" star\"))), !this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Apply for this job\",\n        \"aria-label\": \"apply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.apply(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Apply\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), this.applied(job) && !(job.numpos >= job.posmax || job.numapp >= job.appmax) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Applied for this job\",\n        \"aria-label\": \"applied\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Applied\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), job.numpos >= job.posmax || job.numapp >= job.appmax ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"No vacancy\",\n        \"aria-label\": \"full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Full\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), this.state.showForm === true && job._id === this.state.editing ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"enteredsop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Enter SOP:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.enteredsop,\n        id: \"enteredsop\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.onSOPsubmit(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Submit\"))) : React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      })))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, AllJobs))))));\n  }\n\n}\n\nJobsList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(JobsList);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","logoutUser","ButtonGroup","Dropdown","JobsList","constructor","props","onLogoutClick","e","preventDefault","onChange","setState","target","id","value","state","userdetails","jobs","sortedJobs","applications","sortName","recruiterName","showForm","editing","enteredsop","sopError","componentDidMount","user","auth","get","then","response","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","applied","job","num","arr","filter","item","jobId","_id","applicantId","status","length","apply","history","push","goBack","onSOPsubmit","newApplication","recruiterId","recruiter","stage","sop","salary","rating","title","nnumapp","numapp","editJob","split","post","alert","soperror","render","userRole","role","AllJobs","Date","getTime","deadline","substring","map","ind","duration","numpos","posmax","appmax","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\nclass JobsList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            jobs: [],\n            sortedJobs: [], \n            applications: [],\n            sortName:true, \n            recruiterName: \"\",\n            showForm: false,\n            editing: \"\",\n            enteredsop: \"\",\n            sopError: \"\"\n        };\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        this.state.showForm = false;\n        this.state.editing = \"\";\n        this.state.enteredsop = \"\";\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    applied(job) {\n        const { user } = this.props.auth;\n        let num = 0;\n        let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status !== \"Rejected\" || item.status != \"Accepted\"));\n        num = arr.length;\n        if(num>0) return true;\n        else return false;\n    }\n\n    apply(job)\n    {\n        this.state.showForm = !this.state.showForm;\n        this.state.editing = job._id;\n        //this.setState({showform: ShowForm});\n        console.log(this.state.showForm);\n        this.props.history.push(\"/jobsList\");\n        this.props.history.push(\"/jobsList\");\n        this.props.history.goBack();\n    }\n\n    onSOPsubmit(job)\n    {\n        const { user } = this.props.auth;\n        const newApplication = {\n            jobId: job._id,\n            applicantId: user.id,\n            recruiterId:job.recruiter,\n            stage: 0,\n            status: \"Applied\",\n            sop: this.state.enteredsop,\n            salary: job.salary,\n            recruiterName: job.recruiterName,\n            rating: -1,\n            title: job.title\n        };\n\n        let nnumapp = job.numapp + 1;\n\n        const editJob = {\n            numapp: nnumapp \n        }\n\n        let num = this.state.enteredsop.split(' ').length;\n        if(num <= 250)\n        {\n            axios\n                .post('http://localhost:4000/application/add_application', newApplication)\n                .then(response => {\n                    console.log(newApplication);\n                    alert(\"Application sent successfully!\");\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Applicantion could not be sent.\");\n                })\n            axios\n                .post('http://localhost:4000/job/edit_job/' + job._id, editJob)\n                .then(response => {\n                    console.log(editJob);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            this.state.editing = \"\";\n            this.props.history.push(\"/jobsList\");\n            this.props.history.push(\"/jobsList\");\n            this.props.history.goBack();\n        }\n        else{\n            let soperror = \"Maximum 250 words allowed.\";\n            this.setState({sopError: soperror});\n        }\n    }\n\n    // sortChange(){\n    //     var array = this.state.users;\n    //     var flag = this.state.sortName;\n    //     array.sort(function(a, b) {\n    //         if(a.date != undefined && b.date != undefined){\n    //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n    //         }\n    //         else{\n    //             return 1;\n    //         }\n    //       });\n    //     this.setState({\n    //         users:array,\n    //         sortName:!this.state.sortName,\n    //     })\n    // }\n\n    // renderIcon(){\n    //     if(this.state.sortName){\n    //         return(\n    //             <ArrowDownwardIcon/>\n    //         )\n    //     }\n    //     else{\n    //         return(\n    //             <ArrowUpwardIcon/>\n    //         )            \n    //     }\n    // }\n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        let AllJobs;\n        if(userRole === \"applicant\") {\n            AllJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Active Jobs</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    {/* <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid> */}\n                </Grid>\n                <Grid container>\n                    {/* <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.jobs}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid> */}\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            {/* <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell> */}\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                            <TableCell>Salary (per month)</TableCell>\n                                            <TableCell>Duration(months)</TableCell>\n                                            <TableCell>Deadline</TableCell>\n                                            <TableCell>Rating</TableCell>\n                                            \n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.recruiterName}</TableCell>\n                                            <TableCell>{job.salary}</TableCell>\n                                            <TableCell>{job.duration}</TableCell>\n                                            <TableCell>{job.deadline.substring(0,10)}</TableCell>\n                                            <TableCell>{job.rating}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                    \n                                            {!this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Apply for this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.apply(job)}>\n                                                        Apply\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {this.applied(job) && !(job.numpos >= job.posmax || job.numapp >= job.appmax)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Applied for this job\" aria-label=\"applied\">\n                                                    <button\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Applied\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            : <div></div>\n\n                                            }\n                                            {(job.numpos >= job.posmax || job.numapp >= job.appmax)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"No vacancy\" aria-label=\"full\">\n                                                    <button\n                                                        className=\"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Full\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n                                                <div></div>\n\n                                            }\n\n                                            {this.state.showForm === true && job._id === this.state.editing?\n                                            <TableCell>\n                                                <div>\n                                                    <div className=\"input-field\">\n                                                        <label htmlFor=\"enteredsop\">Enter SOP:</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.enteredsop}\n                                                            id=\"enteredsop\"\n                                                            type=\"text\"\n                                                        />\n                                                    </div>\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.onSOPsubmit(job)}>\n                                                        Submit\n                                                    </button>\n                                                </div>                                    \n                                            </TableCell>\n                                            : <TableCell></TableCell>\n                                            }\n\n                                            \n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AllJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nJobsList.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(JobsList);"]},"metadata":{},"sourceType":"module"}