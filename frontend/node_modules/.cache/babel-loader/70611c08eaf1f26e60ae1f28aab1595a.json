{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Users/UsersList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nclass UsersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      sortedUsers: [],\n      sortName: true\n    };\n    this.renderIcon = this.renderIcon.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/user').then(response => {\n      this.setState({\n        users: response.data,\n        sortedUsers: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  sortChange() {\n    var array = this.state.users;\n    var flag = this.state.sortName;\n    array.sort(function (a, b) {\n      if (a.date !== undefined && b.date !== undefined) {\n        return (1 - flag * 2) * (new Date(a.date) - new Date(b.date));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      users: array,\n      sortName: !this.state.sortName\n    });\n  }\n\n  renderIcon() {\n    if (this.state.sortName) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      onClick: this.sortChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.renderIcon()), \"Date\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.users.map((user, ind) => React.createElement(TableRow, {\n      key: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, user.date.substring(0, 10)), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, user.name), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, user.email)))))))));\n  }\n\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Users/UsersList.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","UsersList","constructor","props","state","users","sortedUsers","sortName","renderIcon","bind","sortChange","componentDidMount","get","then","response","setState","data","catch","error","console","log","array","flag","sort","a","b","date","undefined","Date","render","map","user","ind","substring","name","email"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAGA,MAAMC,SAAN,SAAwBpB,SAAxB,CAAkC;AAE9BqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAWC,MAAAA,WAAW,EAAE,EAAxB;AAA4BC,MAAAA,QAAQ,EAAC;AAArC,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB7B,IAAAA,KAAK,CAAC8B,GAAN,CAAU,4BAAV,EACMC,IADN,CACWC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAES,QAAQ,CAACE,IAAjB;AAAuBV,QAAAA,WAAW,EAACQ,QAAQ,CAACE;AAA5C,OAAd;AACH,KAHN,EAIMC,KAJN,CAIY,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANN;AAOH;;AAEDR,EAAAA,UAAU,GAAE;AACR,QAAIW,KAAK,GAAG,KAAKjB,KAAL,CAAWC,KAAvB;AACA,QAAIiB,IAAI,GAAG,KAAKlB,KAAL,CAAWG,QAAtB;AACAc,IAAAA,KAAK,CAACE,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,UAAGD,CAAC,CAACE,IAAF,KAAWC,SAAX,IAAwBF,CAAC,CAACC,IAAF,KAAWC,SAAtC,EAAgD;AAC5C,eAAO,CAAC,IAAIL,IAAI,GAAC,CAAV,KAAgB,IAAIM,IAAJ,CAASJ,CAAC,CAACE,IAAX,IAAmB,IAAIE,IAAJ,CAASH,CAAC,CAACC,IAAX,CAAnC,CAAP;AACH,OAFD,MAGI;AACA,eAAO,CAAP;AACH;AACF,KAPH;AAQA,SAAKX,QAAL,CAAc;AACVV,MAAAA,KAAK,EAACgB,KADI;AAEVd,MAAAA,QAAQ,EAAC,CAAC,KAAKH,KAAL,CAAWG;AAFX,KAAd;AAIH;;AACDC,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKJ,KAAL,CAAWG,QAAd,EAAuB;AACnB,aACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAKI;AACA,aACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAEDsB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAY,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKnB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKF,UAAL,EAAnC,CAAZ,SADR,EAEQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,EAGQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHR,CADJ,CADJ,EAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWC,KAAX,CAAiByB,GAAjB,CAAqB,CAACC,IAAD,EAAMC,GAAN,KAClB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAI,CAACL,IAAL,CAAUO,SAAV,CAAoB,CAApB,EAAsB,EAAtB,CAAZ,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACG,IAAjB,CAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYH,IAAI,CAACI,KAAjB,CAHJ,CADH,CADL,CARJ,CADJ,CADJ,CADJ,CADJ,CADJ;AA4BH;;AA7E6B;;AAgFlC,eAAelC,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nclass UsersList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {users: [],sortedUsers: [], sortName:true};\n        this.renderIcon = this.renderIcon.bind(this);\n        this.sortChange = this.sortChange.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user')\n             .then(response => {\n                 this.setState({users: response.data, sortedUsers:response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    sortChange(){\n        var array = this.state.users;\n        var flag = this.state.sortName;\n        array.sort(function(a, b) {\n            if(a.date !== undefined && b.date !== undefined){\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            users:array,\n            sortName:!this.state.sortName,\n        })\n    }\n    renderIcon(){\n        if(this.state.sortName){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell>\n                                            <TableCell>Name</TableCell>\n                                            <TableCell>Email</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.users.map((user,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{user.date.substring(0,10)}</TableCell>\n                                            <TableCell>{user.name}</TableCell>\n                                            <TableCell>{user.email}</TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        )\n    }\n}\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}