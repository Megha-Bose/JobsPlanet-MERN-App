{"ast":null,"code":"import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = element.ownerDocument.body;\n  var width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","map":{"version":3,"sources":["/home/megha/mernapp/frontend/node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js"],"names":["getDocumentElement","getComputedStyle","getWindowScrollBarX","getWindowScroll","getDocumentRect","element","html","winScroll","body","ownerDocument","width","Math","max","scrollWidth","clientWidth","height","scrollHeight","clientHeight","x","scrollLeft","y","scrollTop","direction"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,eAAP,MAA4B,sBAA5B,C,CAAoD;AACpD;;AAEA,eAAe,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC/C,MAAIC,IAAI,GAAGN,kBAAkB,CAACK,OAAD,CAA7B;AACA,MAAIE,SAAS,GAAGJ,eAAe,CAACE,OAAD,CAA/B;AACA,MAAIG,IAAI,GAAGH,OAAO,CAACI,aAAR,CAAsBD,IAAjC;AACA,MAAIE,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASN,IAAI,CAACO,WAAd,EAA2BP,IAAI,CAACQ,WAAhC,EAA6CN,IAAI,GAAGA,IAAI,CAACK,WAAR,GAAsB,CAAvE,EAA0EL,IAAI,GAAGA,IAAI,CAACM,WAAR,GAAsB,CAApG,CAAZ;AACA,MAAIC,MAAM,GAAGJ,IAAI,CAACC,GAAL,CAASN,IAAI,CAACU,YAAd,EAA4BV,IAAI,CAACW,YAAjC,EAA+CT,IAAI,GAAGA,IAAI,CAACQ,YAAR,GAAuB,CAA1E,EAA6ER,IAAI,GAAGA,IAAI,CAACS,YAAR,GAAuB,CAAxG,CAAb;AACA,MAAIC,CAAC,GAAG,CAACX,SAAS,CAACY,UAAX,GAAwBjB,mBAAmB,CAACG,OAAD,CAAnD;AACA,MAAIe,CAAC,GAAG,CAACb,SAAS,CAACc,SAAnB;;AAEA,MAAIpB,gBAAgB,CAACO,IAAI,IAAIF,IAAT,CAAhB,CAA+BgB,SAA/B,KAA6C,KAAjD,EAAwD;AACtDJ,IAAAA,CAAC,IAAIP,IAAI,CAACC,GAAL,CAASN,IAAI,CAACQ,WAAd,EAA2BN,IAAI,GAAGA,IAAI,CAACM,WAAR,GAAsB,CAArD,IAA0DJ,KAA/D;AACD;;AAED,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELK,IAAAA,MAAM,EAAEA,MAFH;AAGLG,IAAAA,CAAC,EAAEA,CAHE;AAILE,IAAAA,CAAC,EAAEA;AAJE,GAAP;AAMD","sourcesContent":["import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = element.ownerDocument.body;\n  var width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}"]},"metadata":{},"sourceType":"module"}