{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/Employees.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass Employees extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      userdetails: [],\n      users: [],\n      jobs: [],\n      applications: [],\n      rating: 0\n    }; // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/').then(response => {\n      this.setState({\n        users: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/application/get_applications').then(response => {\n      this.setState({\n        applications: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  getapplicant(applicantId) {\n    let applicant = this.state.users.filter(item => item.id === applicantId)[0];\n    console.log(applicant);\n    return applicant;\n  }\n\n  rate(application) {\n    const {\n      user\n    } = this.props.auth;\n    let job = this.getjob(application.jobId);\n    let nrate = job.numrate;\n    nrate = nrate + 1;\n    let nrating = (job.rating * nrate + this.state.rating) / nrate;\n    const editJob = {\n      rating: nrating,\n      numrate: nrate\n    };\n    const editApplication = {\n      rating: nrating,\n      rated: true\n    };\n    axios.put('http://localhost:4000/job/edit_job/' + job._id, editJob).then(response => {\n      console.log(editJob);\n      alert(\"Job rated successfully!\");\n    }).catch(function (error) {\n      console.log(error);\n      alert(\"Job could not be rated.\");\n    });\n    axios.put('http://localhost:4000/application/edit_application/' + application._id, editApplication).then(response => {\n      console.log(editApplication);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    window.location.reload();\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const userRole = this.state.userdetails.role;\n    let Applications;\n\n    if (userRole === \"recruiter\") {\n      Applications = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Applications\"))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Job Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Appl. Rating\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Appl. Skills\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Education\"))), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"SOP\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Date of Application\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.applications.filter(item => item.status === \"Accepted\" && item.recruiterId == user.id).map((application, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, application.title), this.state.users.filter(item => item._id === application.applicantId).map((applicant, innd) => React.createElement(TableCell, {\n        key: innd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Name: \", applicant.name)), this.state.jobs.filter(item => item._id === application.jobId).map((job, innnd) => React.createElement(TableCell, {\n        key: innnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Job Title: \", job.title)), this.state.jobs.filter(item => item._id === application.jobId).map((job, innnd) => React.createElement(TableCell, {\n        key: innnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Job Type: \", job.type)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, application.doj.substring(0, 10))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, Applications))))));\n  }\n\n}\n\nEmployees.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Employees);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/Employees.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","logoutUser","ButtonGroup","Dropdown","Employees","constructor","props","onLogoutClick","e","preventDefault","onChange","setState","target","id","value","state","userdetails","users","jobs","applications","rating","componentDidMount","user","auth","get","then","response","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","getapplicant","applicantId","applicant","filter","item","rate","application","job","getjob","jobId","nrate","numrate","nrating","editJob","editApplication","rated","put","_id","alert","window","location","reload","render","userRole","role","Applications","status","recruiterId","map","ind","title","innd","name","innnd","type","doj","substring","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\nclass Employees extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            users: [],\n            jobs: [],\n            applications: [],\n            rating: 0\n        };\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n            .then(response => {\n                this.setState({userdetails: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/user/')\n            .then(response => {\n                this.setState({users: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    getapplicant(applicantId)\n    {\n        let applicant = this.state.users.filter(item => item.id === applicantId)[0];\n        console.log(applicant);\n        return applicant;\n    }\n\n    rate(application)\n    {\n        const { user } = this.props.auth;\n        let job = this.getjob(application.jobId);\n        let nrate = job.numrate;\n        nrate = nrate + 1;\n        let nrating = ((job.rating * nrate) + this.state.rating) / (nrate);\n        const editJob = {\n            rating: nrating,\n            numrate: nrate\n        };\n\n        const editApplication = {\n            rating: nrating,\n            rated: true\n        };\n\n        axios\n            .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n            .then(response => {\n                console.log(editJob);\n                alert(\"Job rated successfully!\");\n            })\n            .catch(function(error) {\n                console.log(error);\n                alert(\"Job could not be rated.\");\n            })\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        window.location.reload();\n    \n    }\n\n    render() \n    {\n        const { user } = this.props.auth;\n        const userRole = this.state.userdetails.role;\n        let Applications;\n        if(userRole === \"recruiter\") {\n            Applications =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Applications</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={2} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Name</TableCell>\n                                            <TableCell>Job Title</TableCell>\n                                            <TableCell>Appl. Rating</TableCell>\n                                            <TableCell>Appl. Skills</TableCell>\n                                            <TableCell><ul><li>Education</li></ul></TableCell>\n                                            <TableCell>SOP</TableCell>\n                                            <TableCell>Status</TableCell>\n                                            <TableCell>Date of Application</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.applications.filter(item => item.status === \"Accepted\" && item.recruiterId == user.id).map((application,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{application.title}</TableCell>\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>Name: {applicant.name}</TableCell>\n                                            ))}\n                                            \n                                            {this.state.jobs.filter(item => item._id === application.jobId).map((job,innnd) => (\n                                                <TableCell key={innnd}>\n                                                    Job Title: {job.title}\n                                                </TableCell>\n                                            ))}\n\n                                            {this.state.jobs.filter(item => item._id === application.jobId).map((job,innnd) => (\n                                                <TableCell key={innnd}>\n                                                    Job Type: {job.type}\n                                                </TableCell>\n                                            ))}\n                                            <TableCell>{application.doj.substring(0, 10)}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {Applications}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nEmployees.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(Employees);"]},"metadata":{},"sourceType":"module"}