{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/CreateJob.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let titleError = \"\";\n      let typeError = \"\";\n      let durationError = \"\";\n      let salaryError = \"\";\n      let addressError = \"\";\n\n      if (this.state.title == \"\") {\n        titleError = \"Title cannot be blank\";\n      }\n\n      if (this.state.type == \"\") {\n        typeError = \"Select type of job\";\n      }\n\n      if (this.state.duration == -1) {\n        durationError = \"Select duration of job\";\n      }\n\n      if (this.state.salary == -1) {\n        salaryError = \"Enter Salary\";\n      }\n\n      if (this.state.address == \"\") {\n        addressError = \"Address cannot be blank\";\n      }\n\n      if (titleError || typeError || durationError || salaryError || addressError) {\n        this.setState({\n          titleError,\n          typeError,\n          durationError,\n          salaryError,\n          addressError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let euser = this.state;\n      euser.skills = this.state.skillstr.split(',');\n\n      if (euser.durationstr != \"\") {\n        euser.duration = parseInt(euser.durationstr);\n      }\n\n      const newJob = {\n        recruiter: this.state.userdetails,\n        title: euser.title,\n        description: euser.description,\n        type: euser.type,\n        duration: euser.duration,\n        salary: euser.salary,\n        maxpos: euser.maxpos,\n        maxapp: euser.maxapp,\n        address: euser.address,\n        skills: euser.skills,\n        rating: euser.rating,\n        dateOfPost: euser.dateOfPost,\n        deadline: euser.deadline\n      };\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.post('http://localhost:4000/job/add_job', newJob).then(response => {\n          console.log(newJob);\n          alert(\"Job added successfully!\"); // to refresh\n\n          this.props.history.push(\"/viewJobs\");\n          this.props.history.push(\"/viewJobs\");\n          this.props.history.goBack();\n        }).catch(function (error) {\n          console.log(error);\n          alert(\"Job NOT added successfully!\");\n        });\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      recruiter: [],\n      title: \"\",\n      titleError: \"\",\n      description: \"\",\n      type: \"\",\n      typeError: \"\",\n      duration: -1,\n      durationError: \"\",\n      durationstr: \"\",\n      salary: -1,\n      salaryError: \"\",\n      // default max no of pos and app = 100\n      maxpos: 100,\n      maxapp: 100,\n      address: \"\",\n      addressError: \"\",\n      skills: [],\n      skillstr: \"\",\n      rating: 5,\n      dateOfPost: new Date(),\n      // default 100 days from now\n      deadline: new Date(new Date().getTime() + 100 * 24 * 60 * 60 * 1000)\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const user = this.state;\n    const userRole = this.state.userdetails.role;\n    let AddJob;\n\n    if (userRole == \"recruiter\") {\n      AddJob = React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.title,\n        id: \"title\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.titleError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.description,\n        id: \"description\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.type,\n        onChange: this.onChange,\n        id: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Select type\"), React.createElement(\"option\", {\n        value: \"fullTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Full-time\"), React.createElement(\"option\", {\n        value: \"partTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Part-time\"), React.createElement(\"option\", {\n        value: \"wfh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Work from home\")), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.state.typeError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"salary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Salary\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.salary,\n        id: \"salary\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, this.state.salaryError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"durationstr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Duration\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.durationstr,\n        onChange: this.onChange,\n        id: \"durationstr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Select duration\"), React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Indefinite\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"1 month\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"2 months\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"3 months\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"4 months\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"5 months\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"6 months\")), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, this.state.durationError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"maxpos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Max. no. of positions available\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.maxpos,\n        id: \"maxpos\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"maxapp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Max. total no. applications allowed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.maxapp,\n        id: \"maxapp\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.address,\n        id: \"address\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.state.addressError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"skillstr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.skillstr,\n        id: \"skillstr\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Deadline (default: 100 days from now)\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.deadline,\n        id: \"deadline\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Add Job\")));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, AddJob))))));\n  }\n\n}\n\nCreateJob.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(CreateJob);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/CreateJob.js"],"names":["React","Component","axios","Card","PropTypes","connect","CreateJob","constructor","props","validate","titleError","typeError","durationError","salaryError","addressError","state","title","type","duration","salary","address","setState","onChange","e","target","id","value","onSubmit","preventDefault","euser","skills","skillstr","split","durationstr","parseInt","newJob","recruiter","userdetails","description","maxpos","maxapp","rating","dateOfPost","deadline","isValid","post","then","response","console","log","alert","history","push","goBack","catch","error","Date","getTime","componentDidMount","user","auth","get","data","componentWillReceiveProps","nextProps","errors","render","userRole","role","AddJob","fontSize","color","paddingLeft","width","borderRadius","letterSpacing","marginTop","height","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            recruiter: [],\n            title: \"\",\n            titleError: \"\",\n            description: \"\",\n            type: \"\",\n            typeError: \"\",\n            duration: -1,\n            durationError: \"\",\n            durationstr: \"\",\n            salary: -1,\n            salaryError: \"\",\n            // default max no of pos and app = 100\n            maxpos: 100,\n            maxapp: 100,\n            address: \"\",\n            addressError: \"\",\n            skills: [],\n            skillstr: \"\",\n            rating: 5,\n            dateOfPost: new Date(),\n            // default 100 days from now\n            deadline: new Date(new Date().getTime()+(100*24*60*60*1000))\n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n             .then(response => {\n                 this.setState({userdetails: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    validate = () => {\n        let titleError = \"\";\n        let typeError = \"\";\n        let durationError = \"\";\n        let salaryError = \"\";\n        let addressError = \"\";\n\n    \n        if (this.state.title == \"\") {\n          titleError = \"Title cannot be blank\";\n        }\n\n        if (this.state.type == \"\") {\n            typeError = \"Select type of job\";\n        }\n\n        if (this.state.duration == -1) {\n            durationError = \"Select duration of job\";\n        }\n\n        if (this.state.salary == -1) {\n            salaryError = \"Enter Salary\";\n        }\n    \n        if (this.state.address == \"\") {\n            addressError = \"Address cannot be blank\";\n        }\n    \n        if (titleError || typeError || durationError || salaryError\n            || addressError) {\n            this.setState({ titleError, typeError, durationError, salaryError, addressError });\n            return false;\n        }\n    \n        return true;\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        let euser = this.state;\n        euser.skills = this.state.skillstr.split(',');\n        if(euser.durationstr != \"\")\n        {\n            euser.duration = parseInt(euser.durationstr);\n        }\n        const newJob = {\n            recruiter: this.state.userdetails,\n            title: euser.title,\n            description: euser.description,\n            type: euser.type,\n            duration: euser.duration,\n            salary: euser.salary,\n            maxpos: euser.maxpos,\n            maxapp: euser.maxapp,\n            address: euser.address,\n            skills: euser.skills,\n            rating: euser.rating,\n            dateOfPost: euser.dateOfPost,\n            deadline: euser.deadline\n        };\n        const isValid = this.validate();\n        if (isValid) {\n            axios\n                .post('http://localhost:4000/job/add_job', newJob)\n                .then(response => {\n                    console.log(newJob);\n                    alert(\"Job added successfully!\");\n                    // to refresh\n                    this.props.history.push(\"/viewJobs\");\n                    this.props.history.push(\"/viewJobs\");\n                    this.props.history.goBack();\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Job NOT added successfully!\");\n                })\n        }\n    };\n\n    render() {\n        const user = this.state;\n        const userRole = this.state.userdetails.role;\n        let AddJob;\n        if(userRole == \"recruiter\") {\n            AddJob = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"title\">Title</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.title}\n                        id=\"title\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.titleError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"description\">Description</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.description}\n                        id=\"description\"\n                        type=\"text\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"type\">Type</label><br></br>\n                    <select \n                        value={this.state.type} \n                        onChange={this.onChange}\n                        id=\"type\"\n                    >\n                        <option value=\"\">Select type</option>\n                        <option value=\"fullTime\">Full-time</option>\n                        <option value=\"partTime\">Part-time</option>\n                        <option value=\"wfh\">Work from home</option>\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.typeError}\n                    </div>\n                </div> \n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"salary\">Salary</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.salary}\n                        id=\"salary\"\n                        type=\"number\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.salaryError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"durationstr\">Duration</label><br></br>\n                    <select \n                        value={this.state.durationstr} \n                        onChange={this.onChange}\n                        id=\"durationstr\"\n                    >\n                        <option value=\"\">Select duration</option>\n                        <option value = \"0\" >Indefinite</option>\n                        <option value=\"1\">1 month</option>\n                        <option value=\"2\">2 months</option>\n                        <option value=\"3\">3 months</option>\n                        <option value=\"4\">4 months</option>\n                        <option value=\"5\">5 months</option>\n                        <option value=\"6\">6 months</option>\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.durationError}\n                    </div>\n                </div> \n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"maxpos\">Max. no. of positions available</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.maxpos}\n                        id=\"maxpos\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"maxapp\">Max. total no. applications allowed</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.maxapp}\n                        id=\"maxapp\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"address\">Address</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.address}\n                        id=\"address\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.addressError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"skillstr\">Skills</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.skillstr}\n                        id=\"skillstr\"\n                        type=\"text\"\n                    />\n                </div>\n                \n                {/*<div className=\"input-field col s12\">\n                    <label htmlFor=\"dateOfPost\">Date of Post</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.dateOfPost}\n                        id=\"dateOfPost\"\n                        type=\"date\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div>\n                </div>*/}\n\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"deadline\">Deadline (default: 100 days from now)</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.deadline}\n                        id=\"deadline\"\n                        type=\"date\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Add Job\n                    </button>\n                </div>\n            </form>\n        }\n        \n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AddJob}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateJob.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(CreateJob);"]},"metadata":{},"sourceType":"module"}