{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass JobsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onFilter = e => {\n      let jobTypeVal = this.state.jobTypeFilterVal;\n      let salaryVal = this.state.salaryFilterval;\n      let durationVal = this.state.durationFilterVal;\n      this.setState({\n        jobs: this.state.extraJobs\n      });\n\n      if (jobTypeVal !== \"\" && jobTypeVal !== undefined) {\n        this.setState({\n          jobs: this.state.extraJobs\n        });\n      }\n\n      if (salaryVal == \"\" && salaryVal == undefined) {\n        this.setState({\n          jobs: this.state.extraJobs\n        });\n      }\n\n      if (durationVal == \"\" && durationVal == undefined) {\n        this.setState({\n          jobs: this.state.extraJobs\n        });\n      }\n    };\n\n    this.onSearch = e => {\n      this.setState({\n        searchval: e.target.value\n      });\n      let sval = this.state.searchval;\n\n      if (sval === \"\" || sval === undefined) {\n        this.setState({\n          jobs: this.state.extraJobs\n        });\n      } else {\n        this.setState({\n          jobs: this.state.extraJobs.filter(item => item.title.includes(sval))\n        });\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      jobs: [],\n      extraJobs: [],\n      applications: [],\n      sortName: true,\n      recruiterName: \"\",\n      showForm: false,\n      editing: \"\",\n      enteredsop: \"\",\n      sopError: \"\",\n      sortbysalary: true,\n      sortbyduration: true,\n      sortbyrating: true,\n      searchval: \"\",\n      jobTypeFilterVal: \"\",\n      salaryFilterVal: \"\",\n      durationFilterVal: \"\"\n    };\n    this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\n    this.renderDurationIcon = this.renderDurationIcon.bind(this);\n    this.renderRatingIcon = this.renderRatingIcon.bind(this);\n    this.sortBySalary = this.sortBySalary.bind(this);\n    this.sortByDuration = this.sortByDuration.bind(this);\n    this.sortByRating = this.sortByRating.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    this.state.showForm = false;\n    this.state.editing = \"\";\n    this.state.enteredsop = \"\";\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        extraJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/application/get_applications').then(response => {\n      this.setState({\n        applications: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  sortBySalary() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbysalary;\n    array.sort(function (a, b) {\n      if (a.salary !== undefined && b.salary !== undefined) {\n        return (1 - +flag * 2) * (+a.salary - +b.salary);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbysalary: !this.state.sortbysalary\n    });\n  }\n\n  sortByDuration() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbyduration;\n    array.sort(function (a, b) {\n      if (a.duration !== undefined && b.duration !== undefined) {\n        return (1 - +flag * 2) * (+a.duration - +b.duration);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbyduration: !this.state.sortbyduration\n    });\n  }\n\n  sortByRating() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbyrating;\n    array.sort(function (a, b) {\n      if (a.rating !== undefined && b.rating !== undefined) {\n        return (1 - +flag * 2) * (+a.rating - +b.rating);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbyrating: !this.state.sortbyrating\n    });\n  }\n\n  renderSalaryIcon() {\n    if (this.state.sortbysalary) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderDurationIcon() {\n    if (this.state.sortbyduration) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderRatingIcon() {\n    if (this.state.sortbyrating) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      });\n    }\n  }\n\n  applied(job) {\n    const {\n      user\n    } = this.props.auth;\n    let num = 0;\n    let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status !== \"Rejected\" || item.status != \"Accepted\"));\n    num = arr.length;\n    if (num > 0) return true;else return false;\n  }\n\n  apply(job) {\n    this.state.showForm = !this.state.showForm;\n    this.state.editing = job._id; //this.setState({showform: ShowForm});\n\n    console.log(this.state.showForm);\n    this.props.history.push('/jobsList');\n    this.props.history.push('/jobsList');\n    this.props.history.goBack();\n  }\n\n  onSOPsubmit(job) {\n    const {\n      user\n    } = this.props.auth;\n    const newApplication = {\n      jobId: job._id,\n      applicantId: user.id,\n      recruiterId: job.recruiter,\n      stage: 0,\n      status: \"Applied\",\n      sop: this.state.enteredsop,\n      salary: job.salary,\n      recruiterName: job.recruiterName,\n      rating: -1,\n      title: job.title\n    };\n    let nnumapp = job.numapp + 1;\n    const editJob = {\n      numapp: nnumapp\n    };\n    let num = this.state.enteredsop.split(' ').length;\n\n    if (num <= 250) {\n      axios.post('http://localhost:4000/application/add_application', newApplication).then(response => {\n        console.log(newApplication);\n        alert(\"Application sent successfully!\");\n      }).catch(function (error) {\n        console.log(error);\n        alert(\"Applicantion could not be sent.\");\n      });\n      axios.put('http://localhost:4000/job/edit_job/' + job._id, editJob).then(response => {\n        console.log(editJob);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.state.editing = \"\";\n      window.location.reload();\n    } else {\n      let soperror = \"Maximum 250 words allowed.\";\n      this.setState({\n        sopError: soperror\n      });\n    }\n  }\n\n  render() {\n    const userRole = this.state.userdetails.role;\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let AllJobs;\n\n    if (userRole === \"applicant\") {\n      AllJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Active Jobs\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"searchval\",\n        onChange: this.onChange,\n        value: this.state.searchval,\n        placeholder: \"Search\",\n        fullWidth: true,\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            onClick: this.onSearch,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 337\n            },\n            __self: this\n          }, React.createElement(SearchIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Recruiter\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortBySalary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, this.renderSalaryIcon()), \"Salary (per month)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortByDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, this.renderDurationIcon()), \"Duration(months)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"Date of posting\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortByRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, this.renderRatingIcon()), \"Rating\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, this.state.jobs.filter(item => new Date().getTime() <= new Date(item.deadline.substring(0, 10)).getTime()).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, job.recruiterName), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, job.salary), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, job.duration), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Day-\", new Date(job.dateOfPost).getDate(), \", Month-\", monthNames[new Date(job.dateOfPost).getMonth()], \", Year-\", new Date(job.dateOfPost).getFullYear()), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, job.deadline.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, job.rating ? job.rating.toFixed(1) : \"\", React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \" star\"))), !this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Apply for this job\",\n        \"aria-label\": \"apply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.apply(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Apply\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), this.applied(job) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Applied for this job\",\n        \"aria-label\": \"applied\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \"Applied\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), (job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"No vacancy\",\n        \"aria-label\": \"full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Full\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }), this.state.showForm === true && job._id === this.state.editing ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"enteredsop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Enter SOP:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.enteredsop,\n        id: \"enteredsop\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.onSOPsubmit(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"Submit\"))) : React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, AllJobs))))));\n  }\n\n}\n\nJobsList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(JobsList);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","logoutUser","ButtonGroup","Dropdown","JobsList","constructor","props","onLogoutClick","e","preventDefault","onChange","setState","target","id","value","onFilter","jobTypeVal","state","jobTypeFilterVal","salaryVal","salaryFilterval","durationVal","durationFilterVal","jobs","extraJobs","undefined","onSearch","searchval","sval","filter","item","title","includes","userdetails","applications","sortName","recruiterName","showForm","editing","enteredsop","sopError","sortbysalary","sortbyduration","sortbyrating","salaryFilterVal","renderSalaryIcon","bind","renderDurationIcon","renderRatingIcon","sortBySalary","sortByDuration","sortByRating","componentDidMount","user","auth","get","then","response","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","array","flag","sort","a","b","salary","duration","rating","applied","job","num","arr","jobId","_id","applicantId","status","length","apply","history","push","goBack","onSOPsubmit","newApplication","recruiterId","recruiter","stage","sop","nnumapp","numapp","editJob","split","post","alert","put","window","location","reload","soperror","render","userRole","role","monthNames","AllJobs","endAdornment","Date","getTime","deadline","substring","map","ind","dateOfPost","getDate","getMonth","getFullYear","toFixed","numpos","posmax","appmax","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\nclass JobsList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            jobs: [],\n            extraJobs: [], \n            applications: [],\n            sortName:true, \n            recruiterName: \"\",\n            showForm: false,\n            editing: \"\",\n            enteredsop: \"\",\n            sopError: \"\",\n            sortbysalary:true,\n            sortbyduration:true,\n            sortbyrating:true,\n            searchval: \"\",\n            jobTypeFilterVal: \"\",\n            salaryFilterVal: \"\",\n            durationFilterVal: \"\"\n        };\n        this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\n        this.renderDurationIcon = this.renderDurationIcon.bind(this);\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\n        this.sortBySalary = this.sortBySalary.bind(this);\n        this.sortByDuration = this.sortByDuration.bind(this);\n        this.sortByRating = this.sortByRating.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onFilter = e => {\n        let jobTypeVal = this.state.jobTypeFilterVal;\n        let salaryVal = this.state.salaryFilterval;\n        let durationVal = this.state.durationFilterVal;\n        this.setState({ jobs : this.state.extraJobs });\n        if(jobTypeVal !== \"\" && jobTypeVal !== undefined)\n        {\n            this.setState({ jobs : this.state.extraJobs });\n        }\n        if(salaryVal == \"\" && salaryVal == undefined)\n        {\n            this.setState({ jobs : this.state.extraJobs });\n        }\n        if(durationVal == \"\" && durationVal == undefined)\n        {\n            this.setState({ jobs : this.state.extraJobs });\n        }\n    };\n\n    onSearch = e => {\n        this.setState({ searchval : e.target.value });\n        let sval = this.state.searchval;\n        if(sval === \"\" || sval === undefined)\n        {\n            this.setState({ jobs : this.state.extraJobs });\n        }\n        else\n        {\n            this.setState({ jobs : this.state.extraJobs.filter(item => item.title.includes(sval)) });\n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        this.state.showForm = false;\n        this.state.editing = \"\";\n        this.state.enteredsop = \"\";\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, extraJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    sortBySalary(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbysalary;\n        array.sort(function(a, b) {\n            if(a.salary !== undefined && b.salary !== undefined){\n                return (1 - +flag*2) * (+a.salary - +b.salary);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbysalary:!this.state.sortbysalary,\n        })\n    }\n\n    sortByDuration(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyduration;\n        array.sort(function(a, b) {\n            if(a.duration !== undefined && b.duration !== undefined){\n                return (1 - +flag*2) * (+a.duration - +b.duration);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyduration:!this.state.sortbyduration,\n        })\n    }\n\n    sortByRating(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyrating;\n        array.sort(function(a, b) {\n            if(a.rating !== undefined && b.rating !== undefined){\n                return (1 - +flag*2) * (+a.rating - +b.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyrating:!this.state.sortbyrating,\n        })\n    }\n\n    renderSalaryIcon(){\n        if(this.state.sortbysalary){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderDurationIcon(){\n        if(this.state.sortbyduration){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderRatingIcon(){\n        if(this.state.sortbyrating){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    applied(job) {\n        const { user } = this.props.auth;\n        let num = 0;\n        let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status !== \"Rejected\" || item.status != \"Accepted\"));\n        num = arr.length;\n        if(num>0) return true;\n        else return false;\n    }\n\n    apply(job)\n    {\n        this.state.showForm = !this.state.showForm;\n        this.state.editing = job._id;\n        //this.setState({showform: ShowForm});\n        console.log(this.state.showForm);\n        this.props.history.push('/jobsList');\n        this.props.history.push('/jobsList');\n        this.props.history.goBack();\n    }\n\n    onSOPsubmit(job)\n    {\n        const { user } = this.props.auth;\n        const newApplication = {\n            jobId: job._id,\n            applicantId: user.id,\n            recruiterId:job.recruiter,\n            stage: 0,\n            status: \"Applied\",\n            sop: this.state.enteredsop,\n            salary: job.salary,\n            recruiterName: job.recruiterName,\n            rating: -1,\n            title: job.title\n        };\n\n        let nnumapp = job.numapp + 1;\n\n        const editJob = {\n            numapp: nnumapp \n        }\n\n        let num = this.state.enteredsop.split(' ').length;\n        if(num <= 250)\n        {\n            axios\n                .post('http://localhost:4000/application/add_application', newApplication)\n                .then(response => {\n                    console.log(newApplication);\n                    alert(\"Application sent successfully!\");\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Applicantion could not be sent.\");\n                })\n            axios\n                .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n                .then(response => {\n                    console.log(editJob);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            this.state.editing = \"\";\n            window.location.reload();\n        }\n        else{\n            let soperror = \"Maximum 250 words allowed.\";\n            this.setState({sopError: soperror});\n        }\n    }\n    \n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        let AllJobs;\n        if(userRole === \"applicant\") {\n            AllJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Active Jobs</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"searchval\" \n                        onChange={this.onChange}\n                        value={this.state.searchval}\n                        placeholder=\"Search\"\n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    \n                                    <IconButton onClick={this.onSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                   \n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    {/* <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.jobs}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid> */}\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            {/* <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell> */}\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                            <TableCell><Button onClick={this.sortBySalary}>{this.renderSalaryIcon()}</Button>Salary (per month)</TableCell>\n                                            <TableCell><Button onClick={this.sortByDuration}>{this.renderDurationIcon()}</Button>Duration(months)</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Deadline</TableCell>\n                                            <TableCell><Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button>Rating</TableCell>\n                                            \n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.recruiterName}</TableCell>\n                                            <TableCell>{job.salary}</TableCell>\n                                            <TableCell>{job.duration}</TableCell>\n                                            <TableCell>Day-{new Date(job.dateOfPost).getDate()}, Month-{monthNames[new Date(job.dateOfPost).getMonth()]}, Year-{new Date(job.dateOfPost).getFullYear()}</TableCell>\n                                            <TableCell>{job.deadline.substring(0,10)}</TableCell>\n                                            <TableCell>{job.rating? job.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                    \n                                            {!this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Apply for this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.apply(job)}>\n                                                        Apply\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Applied for this job\" aria-label=\"applied\">\n                                                    <button\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Applied\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            : <div></div>\n\n                                            }\n                                            {(job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"No vacancy\" aria-label=\"full\">\n                                                    <button\n                                                        className=\"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Full\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n                                                <div></div>\n\n                                            }\n\n                                            {this.state.showForm === true && job._id === this.state.editing?\n                                            <TableCell>\n                                                <div>\n                                                    <div className=\"input-field\">\n                                                        <label htmlFor=\"enteredsop\">Enter SOP:</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.enteredsop}\n                                                            id=\"enteredsop\"\n                                                            type=\"text\"\n                                                        />\n                                                    </div>\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.onSOPsubmit(job)}>\n                                                        Submit\n                                                    </button>\n                                                </div>                                    \n                                            </TableCell>\n                                            : <TableCell></TableCell>\n                                            }\n\n                                            \n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AllJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nJobsList.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(JobsList);"]},"metadata":{},"sourceType":"module"}