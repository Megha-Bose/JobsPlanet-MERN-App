{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Users/EditProfile.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.validate = () => {\n      const user = this.state;\n      let nameError = \"\";\n      let emailError = \"\";\n      let bioError = \"\";\n\n      if (!this.state.name) {\n        nameError = \"Name cannot be blank\";\n      }\n\n      if (!this.state.email.includes(\"@\")) {\n        emailError = \"Invalid email\";\n      }\n\n      if (emailError || nameError) {\n        this.setState({\n          emailError,\n          nameError\n        });\n        return false;\n      }\n\n      if (user.role === \"recruiter\") {\n        let num = this.state.bio.split(' ').length;\n\n        if (num > 250) {\n          bioError = \"Bio cannot have more than 250 words.\";\n          this.setState({\n            bioError\n          });\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        user\n      } = this.props.auth;\n      const euser = this.state;\n      euser.skills = this.state.skillsstring.split(',');\n      const editedUser = {\n        name: euser.name,\n        email: euser.email,\n        password: euser.password,\n        password2: euser.password2,\n        role: euser.role,\n        phone_number: euser.phone_number,\n        bio: euser.bio,\n        resume: euser.resume,\n        skills: euser.skills\n      };\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.put('http://localhost:4000/user/edit_profile/' + user.id, editedUser).then(response => {\n          console.log(editedUser);\n          this.props.history.push('/profile');\n        }).catch(function (error) {\n          console.log(error);\n        });\n        this.state.jobs.filter(item => item.recruiter === user.id).map((jobb, ind) => {\n          const editJob = {\n            recruiterName: euser.name,\n            recruiterEmail: euser.email\n          };\n          axios.put('http://localhost:4000/job/edit_job/' + jobb._id, editJob).then(response => {\n            console.log(editJob);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        });\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      jobs: [],\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      bio: \"\",\n      role: \"\",\n      resume: \"\",\n      phone_number: NaN,\n      skills: [],\n      skillsstring: \"\",\n      nameError: \"\",\n      emailError: \"\",\n      bioError: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        name: response.data.name,\n        email: response.data.email,\n        password: response.data.password,\n        role: response.data.role,\n        phone_number: response.data.phone_number,\n        bio: response.data.bio,\n        resume: response.data.resume,\n        skills: response.data.skills\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const user = this.state;\n    const userRole = user.role;\n    user.skillsstring = user.skills.toString();\n    let EditUserDetails;\n\n    if (userRole === 'applicant') {\n      EditUserDetails = React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.name,\n        id: \"name\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.state.nameError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.email,\n        id: \"email\",\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.emailError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"skills\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.skillsstring,\n        id: \"skills\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Save\")));\n    } else if (userRole === 'recruiter') {\n      EditUserDetails = React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.name,\n        id: \"name\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, this.state.nameError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Bio.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.bio,\n        id: \"bio\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.state.bioError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"phone_number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Phone no.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.phone_number,\n        id: \"phone_number\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.email,\n        id: \"email\",\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, this.state.emailError)), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Save\")));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"My Profile\"))), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, EditUserDetails))))));\n  }\n\n}\n\nEditProfile.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(EditProfile);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Users/EditProfile.js"],"names":["React","Component","axios","Card","Button","PropTypes","connect","EditProfile","constructor","props","onLogoutClick","e","preventDefault","logoutUser","validate","user","state","nameError","emailError","bioError","name","email","includes","setState","role","num","bio","split","length","onChange","target","id","value","onSubmit","auth","euser","skills","skillsstring","editedUser","password","password2","phone_number","resume","isValid","put","then","response","console","log","history","push","catch","error","jobs","filter","item","recruiter","map","jobb","ind","editJob","recruiterName","recruiterEmail","_id","userdetails","NaN","componentDidMount","get","data","componentWillReceiveProps","nextProps","errors","render","userRole","toString","EditUserDetails","fontSize","color","paddingLeft","width","borderRadius","letterSpacing","marginTop","height","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAMhCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SALnBC,aAKmB,GALHC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWI,UAAX;AACH,KAEkB;;AAAA,SAgDnBC,QAhDmB,GAgDR,MAAM;AACb,YAAMC,IAAI,GAAG,KAAKC,KAAlB;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAI,CAAC,KAAKH,KAAL,CAAWI,IAAhB,EAAsB;AACpBH,QAAAA,SAAS,GAAG,sBAAZ;AACD;;AAED,UAAI,CAAC,KAAKD,KAAL,CAAWK,KAAX,CAAiBC,QAAjB,CAA0B,GAA1B,CAAL,EAAqC;AACnCJ,QAAAA,UAAU,GAAG,eAAb;AACD;;AAED,UAAIA,UAAU,IAAID,SAAlB,EAA6B;AAC3B,aAAKM,QAAL,CAAc;AAAEL,UAAAA,UAAF;AAAcD,UAAAA;AAAd,SAAd;AACA,eAAO,KAAP;AACD;;AAED,UAAGF,IAAI,CAACS,IAAL,KAAc,WAAjB,EACA;AACI,YAAIC,GAAG,GAAG,KAAKT,KAAL,CAAWU,GAAX,CAAeC,KAAf,CAAqB,GAArB,EAA0BC,MAApC;;AACA,YAAGH,GAAG,GAAG,GAAT,EACA;AACIN,UAAAA,QAAQ,GAAG,sCAAX;AACA,eAAKI,QAAL,CAAc;AAAEJ,YAAAA;AAAF,WAAd;AACA,iBAAO,KAAP;AACH;AACJ;;AAED,aAAO,IAAP;AACH,KA/EkB;;AAAA,SAiFnBU,QAjFmB,GAiFRlB,CAAC,IAAI;AACZ,WAAKY,QAAL,CAAc;AAAE,SAACZ,CAAC,CAACmB,MAAF,CAASC,EAAV,GAAepB,CAAC,CAACmB,MAAF,CAASE;AAA1B,OAAd;AACH,KAnFkB;;AAAA,SA6FnBC,QA7FmB,GA6FRtB,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAW,KAAKN,KAAL,CAAWyB,IAA5B;AACA,YAAMC,KAAK,GAAG,KAAKnB,KAAnB;AACAmB,MAAAA,KAAK,CAACC,MAAN,GAAe,KAAKpB,KAAL,CAAWqB,YAAX,CAAwBV,KAAxB,CAA8B,GAA9B,CAAf;AACA,YAAMW,UAAU,GAAG;AACflB,QAAAA,IAAI,EAAEe,KAAK,CAACf,IADG;AAEfC,QAAAA,KAAK,EAAEc,KAAK,CAACd,KAFE;AAGfkB,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAHD;AAIfC,QAAAA,SAAS,EAAEL,KAAK,CAACK,SAJF;AAKfhB,QAAAA,IAAI,EAAEW,KAAK,CAACX,IALG;AAMfiB,QAAAA,YAAY,EAAEN,KAAK,CAACM,YANL;AAOff,QAAAA,GAAG,EAAES,KAAK,CAACT,GAPI;AAQfgB,QAAAA,MAAM,EAAEP,KAAK,CAACO,MARC;AASfN,QAAAA,MAAM,EAAED,KAAK,CAACC;AATC,OAAnB;AAWA,YAAMO,OAAO,GAAG,KAAK7B,QAAL,EAAhB;;AACA,UAAI6B,OAAJ,EAAa;AACTzC,QAAAA,KAAK,CACA0C,GADL,CACS,6CAA6C7B,IAAI,CAACgB,EAD3D,EAC+DO,UAD/D,EAEKO,IAFL,CAEUC,QAAQ,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AAAwB,eAAK7B,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AAC3B,SAJL,EAKKC,KALL,CAKW,UAASC,KAAT,EAAgB;AACnBL,UAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,SAPL;AAQA,aAAKpC,KAAL,CAAWqC,IAAX,CAAgBC,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBzC,IAAI,CAACgB,EAAvD,EAA2D0B,GAA3D,CAA+D,CAACC,IAAD,EAAMC,GAAN,KAC/D;AACI,gBAAMC,OAAO,GAAG;AACZC,YAAAA,aAAa,EAAE1B,KAAK,CAACf,IADT;AAEZ0C,YAAAA,cAAc,EAAE3B,KAAK,CAACd;AAFV,WAAhB;AAIAnB,UAAAA,KAAK,CACA0C,GADL,CACS,wCAAwCc,IAAI,CAACK,GADtD,EAC2DH,OAD3D,EAEKf,IAFL,CAEUC,QAAQ,IAAI;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AACH,WAJL,EAKKT,KALL,CAKW,UAASC,KAAT,EAAgB;AACnBL,YAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,WAPL;AAQH,SAdD;AAeH;AACJ,KAvIkB;;AAEf,SAAKpC,KAAL,GAAa;AACTgD,MAAAA,WAAW,EAAE,EADJ;AAETX,MAAAA,IAAI,EAAE,EAFG;AAGTjC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTkB,MAAAA,QAAQ,EAAE,EALD;AAMTb,MAAAA,GAAG,EAAE,EANI;AAOTF,MAAAA,IAAI,EAAE,EAPG;AAQTkB,MAAAA,MAAM,EAAE,EARC;AASTD,MAAAA,YAAY,EAAEwB,GATL;AAUT7B,MAAAA,MAAM,EAAE,EAVC;AAWTC,MAAAA,YAAY,EAAE,EAXL;AAYTpB,MAAAA,SAAS,EAAE,EAZF;AAaTC,MAAAA,UAAU,EAAE,EAbH;AAcTC,MAAAA,QAAQ,EAAE;AAdD,KAAb;AAgBH;;AAED+C,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEnD,MAAAA;AAAF,QAAW,KAAKN,KAAL,CAAWyB,IAA5B;AACAhC,IAAAA,KAAK,CAACiE,GAAN,CAAU,gCAA+BpD,IAAI,CAACgB,EAA9C,EACMc,IADN,CACWC,QAAQ,IAAI;AACf,WAAKvB,QAAL,CACA;AACIH,QAAAA,IAAI,EAAE0B,QAAQ,CAACsB,IAAT,CAAchD,IADxB;AAEIC,QAAAA,KAAK,EAAEyB,QAAQ,CAACsB,IAAT,CAAc/C,KAFzB;AAGIkB,QAAAA,QAAQ,EAAEO,QAAQ,CAACsB,IAAT,CAAc7B,QAH5B;AAIIf,QAAAA,IAAI,EAAEsB,QAAQ,CAACsB,IAAT,CAAc5C,IAJxB;AAKIiB,QAAAA,YAAY,EAAEK,QAAQ,CAACsB,IAAT,CAAc3B,YALhC;AAMIf,QAAAA,GAAG,EAAEoB,QAAQ,CAACsB,IAAT,CAAc1C,GANvB;AAOIgB,QAAAA,MAAM,EAAEI,QAAQ,CAACsB,IAAT,CAAc1B,MAP1B;AAQIN,QAAAA,MAAM,EAAEU,QAAQ,CAACsB,IAAT,CAAchC;AAR1B,OADA;AAWF,KAbN,EAcMe,KAdN,CAcY,UAASC,KAAT,EAAgB;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KAhBN;AAiBAlD,IAAAA,KAAK,CAACiE,GAAN,CAAU,oCAAV,EACKtB,IADL,CACUC,QAAQ,IAAI;AACd,WAAKvB,QAAL,CAAc;AAAC8B,QAAAA,IAAI,EAAEP,QAAQ,CAACsB;AAAhB,OAAd;AACH,KAHL,EAIKjB,KAJL,CAIW,UAASC,KAAT,EAAgB;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KANL;AAOH;;AAuCDiB,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAIA,SAAS,CAACC,MAAd,EAAsB;AAClB,WAAKhD,QAAL,CAAc;AACdgD,QAAAA,MAAM,EAAED,SAAS,CAACC;AADJ,OAAd;AAGH;AACJ;;AA8CDC,EAAAA,MAAM,GAAG;AACL,UAAMzD,IAAI,GAAG,KAAKC,KAAlB;AACA,UAAMyD,QAAQ,GAAG1D,IAAI,CAACS,IAAtB;AACAT,IAAAA,IAAI,CAACsB,YAAL,GAAoBtB,IAAI,CAACqB,MAAL,CAAYsC,QAAZ,EAApB;AACA,QAAIC,eAAJ;;AACA,QAAGF,QAAQ,KAAK,WAAhB,EAA6B;AACzBE,MAAAA,eAAe,GACf;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAE,KAAK1C,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtC,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKJ,QADnB;AAEI,QAAA,KAAK,EAAEd,IAAI,CAACK,IAFhB;AAGI,QAAA,EAAE,EAAC,MAHP;AAII,QAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAK,QAAA,KAAK,EAAE;AAAEwD,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK7D,KAAL,CAAWC,SADhB,CARJ,CADJ,EAaI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADxC,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKY,QADnB;AAEI,QAAA,KAAK,EAAEd,IAAI,CAACM,KAFhB;AAGI,QAAA,EAAE,EAAC,OAHP;AAII,QAAA,IAAI,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAK,QAAA,KAAK,EAAE;AAAEuD,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK7D,KAAL,CAAWE,UADhB,CARJ,CAbJ,EAyBI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD1C,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKW,QADnB;AAEI,QAAA,KAAK,EAAEd,IAAI,CAACsB,YAFhB;AAGI,QAAA,EAAE,EAAC,QAHP;AAII,QAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAzBJ,EAkCI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,WAAW,EAAE;AAAf,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,KAAK,EAAE;AACPC,UAAAA,KAAK,EAAE,OADA;AAEPC,UAAAA,YAAY,EAAE,KAFP;AAGPC,UAAAA,aAAa,EAAE,OAHR;AAIPC,UAAAA,SAAS,EAAE;AAJJ,SADX;AAOI,QAAA,IAAI,EAAC,QAPT;AAQI,QAAA,SAAS,EAAC,4EARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAlCJ,CADA;AAkDH,KAnDD,MAoDK,IAAGT,QAAQ,KAAK,WAAhB,EAA6B;AAC9BE,MAAAA,eAAe,GACf;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAE,KAAK1C,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtC,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKJ,QADnB;AAEI,QAAA,KAAK,EAAEd,IAAI,CAACK,IAFhB;AAGI,QAAA,EAAE,EAAC,MAHP;AAII,QAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAK,QAAA,KAAK,EAAE;AAAEwD,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK7D,KAAL,CAAWC,SADhB,CARJ,CADJ,EAaI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrC,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKY,QADnB;AAEI,QAAA,KAAK,EAAEd,IAAI,CAACW,GAFhB;AAGI,QAAA,EAAE,EAAC,KAHP;AAII,QAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAK,QAAA,KAAK,EAAE;AAAEkD,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK7D,KAAL,CAAWG,QADhB,CARJ,CAbJ,EAyBI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EACmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADnD,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKU,QADnB;AAEI,QAAA,KAAK,EAAEd,IAAI,CAAC0B,YAFhB;AAGI,QAAA,EAAE,EAAC,cAHP;AAII,QAAA,IAAI,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAzBJ,EAkCI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADxC,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKZ,QADnB;AAEI,QAAA,KAAK,EAAEd,IAAI,CAACM,KAFhB;AAGI,QAAA,EAAE,EAAC,OAHP;AAII,QAAA,IAAI,EAAC,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAK,QAAA,KAAK,EAAE;AAAEuD,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK7D,KAAL,CAAWE,UADhB,CARJ,CAlCJ,EA8CI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAAE4D,UAAAA,WAAW,EAAE;AAAf,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,KAAK,EAAE;AACPC,UAAAA,KAAK,EAAE,OADA;AAEPC,UAAAA,YAAY,EAAE,KAFP;AAGPC,UAAAA,aAAa,EAAE,OAHR;AAIPC,UAAAA,SAAS,EAAE;AAJJ,SADX;AAOI,QAAA,IAAI,EAAC,QAPT;AAQI,QAAA,SAAS,EAAC,4EARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CA9CJ,CADA;AA8DH;;AACD,WACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAgC,MAAA,SAAS,EAAC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB,CADJ,CADJ,EAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,eADL,CADJ,CAJJ,CADJ,CADJ,CADJ,CADJ;AAkBH;;AA1R+B;;AA6RpCpE,WAAW,CAAC6E,SAAZ,GAAwB;AACpBlD,EAAAA,IAAI,EAAE7B,SAAS,CAACgF,MAAV,CAAiBC,UADH;AAEpBf,EAAAA,MAAM,EAAElE,SAAS,CAACgF,MAAV,CAAiBC;AAFL,CAAxB;;AAKA,MAAMC,eAAe,GAAGvE,KAAK,KAAK;AAC9BkB,EAAAA,IAAI,EAAElB,KAAK,CAACkB,IADkB;AAE9BqC,EAAAA,MAAM,EAAEvD,KAAK,CAACuD;AAFgB,CAAL,CAA7B;;AAIA,eAAejE,OAAO,CAClBiF,eADkB,CAAP,CAEbhF,WAFa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass EditProfile extends Component {\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [], \n            jobs: [],\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            bio: \"\",\n            role: \"\",\n            resume: \"\",\n            phone_number: NaN,\n            skills: [],\n            skillsstring: \"\",\n            nameError: \"\",\n            emailError: \"\",\n            bioError: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n             .then(response => {\n                this.setState(\n                {\n                    name: response.data.name,\n                    email: response.data.email,\n                    password: response.data.password,\n                    role: response.data.role,\n                    phone_number: response.data.phone_number,\n                    bio: response.data.bio,\n                    resume: response.data.resume,\n                    skills: response.data.skills\n                });\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    validate = () => {\n        const user = this.state;\n        let nameError = \"\";\n        let emailError = \"\";\n        let bioError = \"\";\n    \n        if (!this.state.name) {\n          nameError = \"Name cannot be blank\";\n        }\n    \n        if (!this.state.email.includes(\"@\")) {\n          emailError = \"Invalid email\";\n        }\n    \n        if (emailError || nameError) {\n          this.setState({ emailError, nameError });\n          return false;\n        }\n\n        if(user.role === \"recruiter\")\n        {\n            let num = this.state.bio.split(' ').length;\n            if(num > 250)\n            {\n                bioError = \"Bio cannot have more than 250 words.\";\n                this.setState({ bioError });\n                return false;\n            }\n        }\n    \n        return true;\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        const { user } = this.props.auth;\n        const euser = this.state;\n        euser.skills = this.state.skillsstring.split(',');\n        const editedUser = {\n            name: euser.name,\n            email: euser.email,\n            password: euser.password,\n            password2: euser.password2,\n            role: euser.role,\n            phone_number: euser.phone_number,\n            bio: euser.bio,\n            resume: euser.resume,\n            skills: euser.skills\n        };\n        const isValid = this.validate();\n        if (isValid) {\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + user.id, editedUser)\n                .then(response => {\n                    console.log(editedUser);this.props.history.push('/profile');\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            this.state.jobs.filter(item => item.recruiter === user.id).map((jobb,ind) => \n            {\n                const editJob = {\n                    recruiterName: euser.name,\n                    recruiterEmail: euser.email\n                }\n                axios\n                    .put('http://localhost:4000/job/edit_job/' + jobb._id, editJob)\n                    .then(response => {\n                        console.log(editJob);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n            })\n        }\n    };\n\n    render() {\n        const user = this.state;\n        const userRole = user.role;\n        user.skillsstring = user.skills.toString()\n        let EditUserDetails;\n        if(userRole === 'applicant') {\n            EditUserDetails = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"name\">Name</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.name}\n                        id=\"name\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"email\">Email</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.email}\n                        id=\"email\"\n                        type=\"email\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.emailError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"skills\">Skills</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.skillsstring}\n                        id=\"skills\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </form>\n        }\n        else if(userRole === 'recruiter') {\n            EditUserDetails = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"name\">Name</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.name}\n                        id=\"name\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"bio\">Bio.</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.bio}\n                        id=\"bio\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.bioError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"phone_number\">Phone no.</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.phone_number}\n                        id=\"phone_number\"\n                        type=\"number\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"email\">Email</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.email}\n                        id=\"email\"\n                        type=\"email\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.emailError}\n                    </div>\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Save\n                    </button>\n                </div>\n            </form>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Header>\n                                <Button variant=\"light\"><h4>My Profile</h4></Button>\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {EditUserDetails}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(EditProfile);"]},"metadata":{},"sourceType":"module"}