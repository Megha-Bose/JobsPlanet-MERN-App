{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Common/Register.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.addskill = e => {\n      e.preventDefault();\n      this.setState(({\n        skills,\n        skill\n      }) => ({\n        skills: [...skills, ...skill.split(\",\")],\n        skill: \"\"\n      }));\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2,\n        role: this.state.role,\n        phone_number: this.state.phone_number,\n        skills: this.state.skills\n      };\n      this.props.registerUser(newUser, this.props.history);\n      console.log(newUser);\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      role: \"\",\n      phone_number: NaN,\n      skills: [],\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  removeskill(index) {\n    this.setState({\n      skills: this.state.skills.filter((_, i) => i !== index)\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      role: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      skills\n    } = this.state;\n    const userRole = this.state.role;\n    let RoleForm;\n\n    if (userRole == 'applicant') {\n      RoleForm = React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Skills (comma-separated):\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.skill,\n        placeholder: \"Enter skills\",\n        onChange: this.handleskillChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.skills.map((value, index) => {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, value, React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.removeskill.bind(this, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Remove\"));\n      })));\n    } else if (userRole == 'recruiter') {\n      RoleForm = React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.phone_number,\n        id: \"phone_number\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s8 offset-s2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn-flat waves-effect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"keyboard_backspace\"))), React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Register\")), React.createElement(\"p\", {\n      className: \"grey-text text-darken-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Log in\"))), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Role\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.role,\n      onChange: this.handleChange,\n      error: errors.role,\n      id: \"role\",\n      className: classnames(\"\", {\n        invalid: errors.role\n      }),\n      className: classnames(\"\", {\n        invalid: errors.role\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Select role\"), React.createElement(\"option\", {\n      value: \"applicant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Applicant\"), React.createElement(\"option\", {\n      value: \"recruiter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Recruiter\")), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, errors.role)), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.name,\n      error: errors.name,\n      id: \"name\",\n      type: \"text\",\n      className: classnames(\"\", {\n        invalid: errors.name\n      }),\n      className: classnames(\"\", {\n        invalid: errors.name\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, errors.name)), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, errors.email)), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password2,\n      error: errors.password2,\n      id: \"password2\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, errors.password2)), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Phone no.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.phone_number,\n      id: \"phone_number\",\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), RoleForm), React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        width: \"150px\",\n        borderRadius: \"3px\",\n        letterSpacing: \"1.5px\",\n        marginTop: \"1rem\"\n      },\n      type: \"submit\",\n      className: \"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Sign up\"))))));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Common/Register.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","classnames","Register","constructor","addskill","e","preventDefault","setState","skills","skill","split","onChange","target","id","value","onSubmit","newUser","name","state","email","password","password2","role","phone_number","props","history","console","log","NaN","errors","handleChange","bind","removeskill","index","filter","_","i","event","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","userRole","RoleForm","handleskillChange","map","paddingLeft","invalid","width","borderRadius","letterSpacing","marginTop","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            role: \"\",\n            phone_number: NaN,\n            skills: [],\n            errors: {}\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    addskill = e => {\n        e.preventDefault();\n        this.setState(({ skills, skill }) => ({\n          skills: [...skills, ...skill.split(\",\")],\n          skill: \"\"\n        }));\n    };  \n    removeskill(index) {\n        this.setState({\n          skills: this.state.skills.filter((_, i) => i !== index)\n        });\n    }      \n    handleChange(event) {\n        this.setState({role: event.target.value});\n    }\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2,\n            role: this.state.role,\n            phone_number: this.state.phone_number,\n            skills: this.state.skills\n        };\n        this.props.registerUser(newUser, this.props.history); \n        console.log(newUser);\n    };\n    render() {\n        const { errors } = this.state;\n        const { skills } = this.state;\n        const userRole = this.state.role;\n        let RoleForm;\n        if(userRole == 'applicant') {\n            RoleForm = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div>\n                    <label>Skills (comma-separated):</label><br></br>\n                    <input\n                    type=\"text\"\n                    value={this.state.skill}\n                    placeholder=\"Enter skills\"\n                    onChange={this.handleskillChange}\n                    />\n                    <button>\n                    Add\n                    </button>\n                </div>\n                <ul>\n                    {this.state.skills.map((value, index) => {\n                    return (\n                        <li key={index}>\n                        {value}\n                        <button\n                            type=\"button\"\n                            onClick={this.removeskill.bind(this, index)}\n                        >\n                            Remove\n                        </button>\n                        </li>\n                    );\n                    })}\n                </ul>\n            </form> \n        }\n        else if(userRole == 'recruiter') {\n            RoleForm = \n                <input\n                    onChange={this.onChange}\n                    value={this.state.phone_number}\n                    id=\"phone_number\"\n                    type=\"number\"\n                />\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\n                        <i className=\"material-icons left\"><b>keyboard_backspace</b></i>\n                    </Link>\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <h4>\n                        <b>Register</b>\n                        </h4>\n                        <p className=\"grey-text text-darken-1\">\n                        Already have an account? <Link to=\"/login\">Log in</Link>\n                        </p>\n                    </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"name\">Role</label><br></br>\n                                <select \n                                    value={this.state.role} \n                                    onChange={this.handleChange}\n                                    error={errors.role}\n                                    id=\"role\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.role\n                                        })}className={classnames(\"\", {\n                                        invalid: errors.role\n                                    })}\n                                >\n                                    <option value=\"\">Select role</option>\n                                    <option value=\"applicant\">Applicant</option>\n                                    <option value=\"recruiter\">Recruiter</option>\n                                </select>\n                                <span className=\"red-text\">{errors.role}</span>\n                            </div> \n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"name\">Name</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    error={errors.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.name\n                                        })}className={classnames(\"\", {\n                                        invalid: errors.name\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.name}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"email\">Email</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"password\">Password</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"password2\">Confirm Password</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password2}\n                                    error={errors.password2}\n                                    id=\"password2\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password2\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.password2}</span>\n                            </div>\n                            <hr></hr>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"phone_number\">Phone no.</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.phone_number}\n                                    id=\"phone_number\"\n                                    type=\"number\"\n                                />\n                                {RoleForm}\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                    width: \"150px\",\n                                    borderRadius: \"3px\",\n                                    letterSpacing: \"1.5px\",\n                                    marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                                >\n                                    Sign up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));"]},"metadata":{},"sourceType":"module"}