{"ast":null,"code":"//\n//  react-dropdown-input\n//  Displays a ReactBootstrap.Input element\n//  with a ReactBootstrap.DropdownMenu of possible options.\n//\n\"use strict\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar React = require(\"react/addons\");\n\nvar ReactBootstrap = require(\"react-bootstrap\");\n\nvar joinClasses = require(\"react/lib/joinClasses\");\n\nvar cx = require(\"classnames\");\n\nvar BootstrapMixin = ReactBootstrap.BootstrapMixin;\nvar DropdownStateMixin = ReactBootstrap.DropdownStateMixin;\nvar DropdownMenu = ReactBootstrap.DropdownMenu;\nvar Input = ReactBootstrap.Input;\nvar MenuItem = ReactBootstrap.MenuItem;\nvar defaultMaxText = \"+# more not shown\";\n\nvar defaultFilter = function defaultFilter(filterText, optionName) {\n  // also optionIndex as third arg\n  return optionName.toLowerCase().indexOf(filterText.toLowerCase()) >= 0;\n};\n\nvar genLength = function genLength(list) {\n  // deal with both regular arrays and immutablejs objects, which have .count() instead of length\n  return typeof list.count !== \"undefined\" ? list.count() : list.length;\n};\n\nvar genGet = function genGet(list, i) {\n  // deal with both regular arrays and immutablejs objects, which have list.get(i) instead of list[i]\n  return typeof list.get !== \"undefined\" ? list.get(i) : list[i];\n};\n\nvar caseInsensIndexOf = function caseInsensIndexOf(list, str) {\n  var lowerList = list.map(function (item) {\n    return item.toLowerCase();\n  });\n  return lowerList.indexOf(str.toLowerCase());\n};\n\nvar DropdownInput = React.createClass({\n  displayName: \"DropdownInput\",\n  mixins: [BootstrapMixin, DropdownStateMixin],\n  propTypes: {\n    pullRight: React.PropTypes.bool,\n    dropup: React.PropTypes.bool,\n    defaultValue: React.PropTypes.string,\n    menuClassName: React.PropTypes.string,\n    max: React.PropTypes.number,\n    maxText: React.PropTypes.string,\n    onChange: React.PropTypes.func,\n    onSelect: React.PropTypes.func,\n    navItem: React.PropTypes.bool,\n    options: React.PropTypes.oneOfType([React.PropTypes.object, React.PropTypes.array]).isRequired,\n    filter: React.PropTypes.func,\n    // the rest are to make eslint happy\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    bsSize: React.PropTypes.string\n  },\n  getInitialState: function getInitialState() {\n    return {\n      value: this.props.defaultValue || \"\",\n      activeIndex: -1\n    };\n  },\n  filteredOptions: function filteredOptions() {\n    var filter = this.props.filter || defaultFilter;\n    return this.props.options.filter(filter.bind(undefined, this.state.value));\n  },\n  cappedLength: function cappedLength(options) {\n    var total = genLength(options);\n\n    if (total > this.props.max) {\n      // if it exceeded the max, we took an extra one off\n      total = this.props.max - 1;\n    }\n\n    return total;\n  },\n  render: function render() {\n    var classes = {\n      dropdown: true,\n      open: this.state.open,\n      dropup: this.props.dropup\n    }; // you can provide a filter prop, which is a function(filterText, optionName, optionIndex) which should\n    // return true to show option with the given name and index, given the input filterText.\n\n    var filteredOptions = this.filteredOptions();\n    var numFiltered = genLength(filteredOptions);\n    var maxMenuItem = null;\n    var maxText = typeof this.props.maxText === \"undefined\" ? defaultMaxText : this.props.maxText;\n\n    if (this.props.max && numFiltered > this.props.max) {\n      // take an extra one off, to leave space for the maxText\n      filteredOptions = filteredOptions.slice(0, this.props.max - 1);\n      maxText = maxText.replace(\"#\", numFiltered - this.props.max + 1);\n      maxMenuItem = this.renderAsMenuItem(maxText, this.props.max, null, true);\n    }\n\n    var dropdown = null;\n\n    if (numFiltered > 0) {\n      dropdown = React.createElement(DropdownMenu, {\n        className: this.props.menuClassName,\n        ref: \"menu\",\n        \"aria-labelledby\": this.props.id,\n        pullRight: this.props.pullRight,\n        key: 1,\n        onSelect: null\n      }, filteredOptions.map(this.renderAsMenuItem), maxMenuItem);\n    }\n\n    return React.createElement(\"div\", {\n      className: joinClasses(this.props.className, cx(classes))\n    }, React.createElement(Input, _extends({}, this.props, {\n      menuClassName: null,\n      options: null,\n      type: \"text\",\n      bsSize: this.props.bsSize,\n      ref: \"dropdownInput\",\n      onClick: this.handleDropdownClick,\n      key: 0,\n      navDropdown: this.props.navItem,\n      navItem: null,\n      pullRight: null,\n      onSelect: null,\n      onChange: this.handleInputChange,\n      onKeyDown: this.handleKeyDown,\n      dropup: null,\n      value: this.state.value\n    })), dropdown);\n  },\n  renderAsMenuItem: function renderAsMenuItem(item, index, options, disabled) {\n    var start = item.toLowerCase().indexOf(this.state.value.toLowerCase()),\n        end = start + this.state.value.length,\n        part1 = item.slice(0, start),\n        part2 = item.slice(start, end),\n        part3 = item.slice(end);\n    var classes = cx({\n      active: this.state.activeIndex === index,\n      disabled: disabled === true\n    });\n\n    if (disabled) {\n      // don't highlight parts of disabled items, eg. the maxText\n      part1 = item;\n      part2 = null;\n      part3 = null;\n    }\n\n    return React.createElement(MenuItem, {\n      key: index,\n      onSelect: this.handleOptionSelect.bind(this, index, item),\n      className: classes,\n      onMouseEnter: this.handleMouseEnter.bind(this, index)\n    }, part1, React.createElement(\"b\", null, part2), part3);\n  },\n  handleInputChange: function handleInputChange(e) {\n    // the user changed the input text\n    this.setState({\n      value: e.target.value,\n      activeIndex: -1\n    });\n    this.setDropdownState(true); // fire the supplied onChange event.\n\n    this.sendChange({\n      value: e.target.value\n    });\n  },\n  handleKeyDown: function handleKeyDown(e) {\n    // catch arrow keys and the Enter key\n    var filteredOptions = this.filteredOptions();\n    var numOptions = this.cappedLength(filteredOptions);\n    var newName;\n\n    switch (e.keyCode) {\n      case 38:\n        // up arrow\n        if (this.state.activeIndex > 0) {\n          this.setState({\n            activeIndex: this.state.activeIndex - 1\n          });\n        } else {\n          this.setState({\n            activeIndex: numOptions - 1\n          });\n        }\n\n        break;\n\n      case 40:\n        // down arrow\n        this.setState({\n          activeIndex: (this.state.activeIndex + 1) % numOptions\n        });\n        break;\n\n      case 13:\n        // enter\n        var newIndex = caseInsensIndexOf(this.props.options, this.state.value); // may need this\n\n        if (this.state.open) {\n          e.preventDefault();\n        }\n\n        if (this.state.activeIndex >= 0 && this.state.activeIndex < numOptions) {\n          newIndex = this.state.activeIndex;\n          newName = genGet(filteredOptions, this.state.activeIndex);\n          this.setDropdownState(false);\n        } else if (this.state.activeIndex === -1 && newIndex >= 0) {\n          newName = genGet(this.props.options, newIndex);\n          this.setDropdownState(false);\n        } else {\n          newIndex = this.state.activeIndex;\n          newName = this.state.value;\n        }\n\n        this.sendSelect({\n          value: newName,\n          index: newIndex\n        });\n        this.sendChange({\n          value: newName\n        });\n        this.setState({\n          value: newName,\n          activeIndex: -1\n        });\n        break;\n    }\n  },\n  handleMouseEnter: function handleMouseEnter(index) {\n    // when the mouse enters a dropdown menu item, set the active item to the item\n    this.setState({\n      activeIndex: index\n    });\n  },\n  handleDropdownClick: function handleDropdownClick(e) {\n    e.preventDefault();\n    this.setDropdownState(!this.state.open);\n  },\n  handleOptionSelect: function handleOptionSelect(key, name) {\n    // the user clicked on a dropdown menu item\n    this.setDropdownState(false);\n    this.sendSelect({\n      value: name,\n      index: this.state.activeIndex\n    });\n    this.sendChange({\n      value: name\n    });\n    this.setState({\n      value: name,\n      activeIndex: -1\n    });\n  },\n  sendChange: function sendChange(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  },\n  sendSelect: function sendSelect(e) {\n    if (this.props.onSelect) {\n      this.props.onSelect(e);\n    }\n  }\n});\nmodule.exports = DropdownInput;","map":{"version":3,"sources":["/home/megha/mernapp/frontend/node_modules/react-dropdown-input/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","require","ReactBootstrap","joinClasses","cx","BootstrapMixin","DropdownStateMixin","DropdownMenu","Input","MenuItem","defaultMaxText","defaultFilter","filterText","optionName","toLowerCase","indexOf","genLength","list","count","genGet","get","caseInsensIndexOf","str","lowerList","map","item","DropdownInput","createClass","displayName","mixins","propTypes","pullRight","PropTypes","bool","dropup","defaultValue","string","menuClassName","max","number","maxText","onChange","func","onSelect","navItem","options","oneOfType","object","array","isRequired","filter","id","className","bsSize","getInitialState","value","props","activeIndex","filteredOptions","bind","undefined","state","cappedLength","total","render","classes","dropdown","open","numFiltered","maxMenuItem","slice","replace","renderAsMenuItem","createElement","ref","type","onClick","handleDropdownClick","navDropdown","handleInputChange","onKeyDown","handleKeyDown","index","disabled","start","end","part1","part2","part3","active","handleOptionSelect","onMouseEnter","handleMouseEnter","e","setState","setDropdownState","sendChange","numOptions","newName","keyCode","newIndex","preventDefault","sendSelect","name","module","exports"],"mappings":"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","sourcesContent":["//\n//  react-dropdown-input\n//  Displays a ReactBootstrap.Input element\n//  with a ReactBootstrap.DropdownMenu of possible options.\n//\n\n\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar React = require(\"react/addons\");\nvar ReactBootstrap = require(\"react-bootstrap\");\nvar joinClasses = require(\"react/lib/joinClasses\");\nvar cx = require(\"classnames\");\n\nvar BootstrapMixin = ReactBootstrap.BootstrapMixin;\nvar DropdownStateMixin = ReactBootstrap.DropdownStateMixin;\nvar DropdownMenu = ReactBootstrap.DropdownMenu;\nvar Input = ReactBootstrap.Input;\nvar MenuItem = ReactBootstrap.MenuItem;\n\nvar defaultMaxText = \"+# more not shown\";\n\nvar defaultFilter = function defaultFilter(filterText, optionName) {\n  // also optionIndex as third arg\n  return optionName.toLowerCase().indexOf(filterText.toLowerCase()) >= 0;\n};\n\nvar genLength = function genLength(list) {\n  // deal with both regular arrays and immutablejs objects, which have .count() instead of length\n  return typeof list.count !== \"undefined\" ? list.count() : list.length;\n};\n\nvar genGet = function genGet(list, i) {\n  // deal with both regular arrays and immutablejs objects, which have list.get(i) instead of list[i]\n  return typeof list.get !== \"undefined\" ? list.get(i) : list[i];\n};\n\nvar caseInsensIndexOf = function caseInsensIndexOf(list, str) {\n  var lowerList = list.map(function (item) {\n    return item.toLowerCase();\n  });\n  return lowerList.indexOf(str.toLowerCase());\n};\n\nvar DropdownInput = React.createClass({\n  displayName: \"DropdownInput\",\n\n  mixins: [BootstrapMixin, DropdownStateMixin],\n\n  propTypes: {\n    pullRight: React.PropTypes.bool,\n    dropup: React.PropTypes.bool,\n    defaultValue: React.PropTypes.string,\n    menuClassName: React.PropTypes.string,\n    max: React.PropTypes.number,\n    maxText: React.PropTypes.string,\n    onChange: React.PropTypes.func,\n    onSelect: React.PropTypes.func,\n    navItem: React.PropTypes.bool,\n    options: React.PropTypes.oneOfType([React.PropTypes.object, React.PropTypes.array]).isRequired,\n    filter: React.PropTypes.func,\n    // the rest are to make eslint happy\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    bsSize: React.PropTypes.string\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      value: this.props.defaultValue || \"\",\n      activeIndex: -1\n    };\n  },\n\n  filteredOptions: function filteredOptions() {\n    var filter = this.props.filter || defaultFilter;\n    return this.props.options.filter(filter.bind(undefined, this.state.value));\n  },\n\n  cappedLength: function cappedLength(options) {\n    var total = genLength(options);\n    if (total > this.props.max) {\n      // if it exceeded the max, we took an extra one off\n      total = this.props.max - 1;\n    }\n    return total;\n  },\n\n  render: function render() {\n    var classes = {\n      dropdown: true,\n      open: this.state.open,\n      dropup: this.props.dropup\n    };\n    // you can provide a filter prop, which is a function(filterText, optionName, optionIndex) which should\n    // return true to show option with the given name and index, given the input filterText.\n    var filteredOptions = this.filteredOptions();\n    var numFiltered = genLength(filteredOptions);\n    var maxMenuItem = null;\n    var maxText = typeof this.props.maxText === \"undefined\" ? defaultMaxText : this.props.maxText;\n    if (this.props.max && numFiltered > this.props.max) {\n      // take an extra one off, to leave space for the maxText\n      filteredOptions = filteredOptions.slice(0, this.props.max - 1);\n      maxText = maxText.replace(\"#\", numFiltered - this.props.max + 1);\n      maxMenuItem = this.renderAsMenuItem(maxText, this.props.max, null, true);\n    }\n    var dropdown = null;\n    if (numFiltered > 0) {\n      dropdown = React.createElement(\n        DropdownMenu,\n        {\n          className: this.props.menuClassName,\n          ref: \"menu\",\n          \"aria-labelledby\": this.props.id,\n          pullRight: this.props.pullRight,\n          key: 1,\n          onSelect: null },\n        filteredOptions.map(this.renderAsMenuItem),\n        maxMenuItem\n      );\n    }\n    return React.createElement(\n      \"div\",\n      { className: joinClasses(this.props.className, cx(classes)) },\n      React.createElement(Input, _extends({}, this.props, {\n        menuClassName: null,\n        options: null,\n        type: \"text\",\n        bsSize: this.props.bsSize,\n        ref: \"dropdownInput\",\n        onClick: this.handleDropdownClick,\n        key: 0,\n        navDropdown: this.props.navItem,\n        navItem: null,\n        pullRight: null,\n        onSelect: null,\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleKeyDown,\n        dropup: null,\n        value: this.state.value })),\n      dropdown\n    );\n  },\n\n  renderAsMenuItem: function renderAsMenuItem(item, index, options, disabled) {\n    var start = item.toLowerCase().indexOf(this.state.value.toLowerCase()),\n        end = start + this.state.value.length,\n        part1 = item.slice(0, start),\n        part2 = item.slice(start, end),\n        part3 = item.slice(end);\n    var classes = cx({ active: this.state.activeIndex === index, disabled: disabled === true });\n    if (disabled) {\n      // don't highlight parts of disabled items, eg. the maxText\n      part1 = item;\n      part2 = null;\n      part3 = null;\n    }\n    return React.createElement(\n      MenuItem,\n      {\n        key: index,\n        onSelect: this.handleOptionSelect.bind(this, index, item),\n        className: classes,\n        onMouseEnter: this.handleMouseEnter.bind(this, index) },\n      part1,\n      React.createElement(\n        \"b\",\n        null,\n        part2\n      ),\n      part3\n    );\n  },\n\n  handleInputChange: function handleInputChange(e) {\n    // the user changed the input text\n    this.setState({ value: e.target.value, activeIndex: -1 });\n    this.setDropdownState(true);\n    // fire the supplied onChange event.\n    this.sendChange({ value: e.target.value });\n  },\n\n  handleKeyDown: function handleKeyDown(e) {\n    // catch arrow keys and the Enter key\n    var filteredOptions = this.filteredOptions();\n    var numOptions = this.cappedLength(filteredOptions);\n    var newName;\n    switch (e.keyCode) {\n\n      case 38:\n        // up arrow\n        if (this.state.activeIndex > 0) {\n          this.setState({ activeIndex: this.state.activeIndex - 1 });\n        } else {\n          this.setState({ activeIndex: numOptions - 1 });\n        }\n        break;\n\n      case 40:\n        // down arrow\n        this.setState({ activeIndex: (this.state.activeIndex + 1) % numOptions });\n        break;\n\n      case 13:\n        // enter\n        var newIndex = caseInsensIndexOf(this.props.options, this.state.value); // may need this\n        if (this.state.open) {\n          e.preventDefault();\n        }\n        if (this.state.activeIndex >= 0 && this.state.activeIndex < numOptions) {\n          newIndex = this.state.activeIndex;\n          newName = genGet(filteredOptions, this.state.activeIndex);\n          this.setDropdownState(false);\n        } else if (this.state.activeIndex === -1 && newIndex >= 0) {\n          newName = genGet(this.props.options, newIndex);\n          this.setDropdownState(false);\n        } else {\n          newIndex = this.state.activeIndex;\n          newName = this.state.value;\n        }\n        this.sendSelect({ value: newName, index: newIndex });\n        this.sendChange({ value: newName });\n        this.setState({ value: newName, activeIndex: -1 });\n        break;\n\n    }\n  },\n\n  handleMouseEnter: function handleMouseEnter(index) {\n    // when the mouse enters a dropdown menu item, set the active item to the item\n    this.setState({ activeIndex: index });\n  },\n\n  handleDropdownClick: function handleDropdownClick(e) {\n    e.preventDefault();\n\n    this.setDropdownState(!this.state.open);\n  },\n\n  handleOptionSelect: function handleOptionSelect(key, name) {\n    // the user clicked on a dropdown menu item\n    this.setDropdownState(false);\n    this.sendSelect({ value: name, index: this.state.activeIndex });\n    this.sendChange({ value: name });\n    this.setState({ value: name, activeIndex: -1 });\n  },\n\n  sendChange: function sendChange(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  },\n\n  sendSelect: function sendSelect(e) {\n    if (this.props.onSelect) {\n      this.props.onSelect(e);\n    }\n  }\n\n});\n\nmodule.exports = DropdownInput;\n\n"]},"metadata":{},"sourceType":"script"}