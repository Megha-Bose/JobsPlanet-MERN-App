{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/CreateJob.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      // let nameError = \"\";\n      // let emailError = \"\";\n      // if (!this.state.name) {\n      //   nameError = \"Name cannot be blank\";\n      // }\n      // if (!this.state.email.includes(\"@\")) {\n      //   emailError = \"Invalid email\";\n      // }\n      // if (emailError || nameError) {\n      //   this.setState({ emailError, nameError });\n      //   return false;\n      // }\n      return true;\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const euser = this.state;\n      euser.skills = this.state.skillsstring.split(',');\n      const newJob = {\n        recruiter: this.state.userdetails,\n        title: euser.title,\n        description: euser.description,\n        type: euser.type,\n        duration: euser.duration,\n        salary: euser.salary,\n        maxpos: euser.maxpos,\n        maxapp: euser.maxapp,\n        address: euser.address,\n        skills: euser.skills,\n        rating: euser.rating,\n        dateOfPost: euser.dateOfPost,\n        deadline: euser.deadline\n      };\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.post('http://localhost:4000/job/add_job', newJob).then(response => {\n          console.log(newJob);\n        }).catch(function (error) {\n          console.log(error);\n        }); // to refresh\n\n        this.props.history.push(\"/viewJobs\");\n        this.props.history.push(\"/viewJobs\");\n        this.props.history.goBack();\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      recruiter: [],\n      title: \"\",\n      //\n      description: \"\",\n      type: \"\",\n      //\n      duration: -1,\n      //\n      salary: -1,\n      //\n      maxpos: -1,\n      maxapp: -1,\n      address: \"\",\n      //\n      skills: [],\n      //\n      skillsstring: \"\",\n      rating: 5,\n      dateOfPost: new Date(),\n      deadline: new Date() //\n\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const user = this.state;\n    const userRole = this.state.userdetails.role;\n    let AddJob;\n\n    if (userRole == \"recruiter\") {\n      AddJob = React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.title,\n        id: \"title\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.description,\n        id: \"description\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.type,\n        id: \"type\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"salary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Salary\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.salary,\n        id: \"salary\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"maxpos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Max. no. of positions available\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.name,\n        id: \"maxpos\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"maxapp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Max. total no. applications allowed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.maxapp,\n        id: \"maxapp\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.address,\n        id: \"address\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"skills\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.skillsstring,\n        id: \"skills\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"dateOfPost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Date of Post\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.dateOfPost,\n        id: \"dateOfPost\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.deadline,\n        id: \"deadline\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Add Job\")));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, AddJob))))));\n  }\n\n}\n\nCreateJob.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(CreateJob);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/CreateJob.js"],"names":["React","Component","axios","Card","PropTypes","connect","CreateJob","constructor","props","validate","onChange","e","setState","target","id","value","onSubmit","preventDefault","euser","state","skills","skillsstring","split","newJob","recruiter","userdetails","title","description","type","duration","salary","maxpos","maxapp","address","rating","dateOfPost","deadline","isValid","post","then","response","console","log","catch","error","history","push","goBack","Date","componentDidMount","user","auth","get","data","componentWillReceiveProps","nextProps","errors","render","userRole","role","AddJob","name","paddingLeft","width","borderRadius","letterSpacing","marginTop","height","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            recruiter: [],\n            title: \"\", //\n            description: \"\",\n            type: \"\", //\n            duration: -1, //\n            salary: -1, //\n            maxpos: -1,\n            maxapp: -1,\n            address: \"\", //\n            skills: [], //\n            skillsstring: \"\",\n            rating: 5,\n            dateOfPost: new Date(),\n            deadline: new Date() //\n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n             .then(response => {\n                 this.setState({userdetails: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    validate = () => {\n        // let nameError = \"\";\n        // let emailError = \"\";\n    \n        // if (!this.state.name) {\n        //   nameError = \"Name cannot be blank\";\n        // }\n    \n        // if (!this.state.email.includes(\"@\")) {\n        //   emailError = \"Invalid email\";\n        // }\n    \n        // if (emailError || nameError) {\n        //   this.setState({ emailError, nameError });\n        //   return false;\n        // }\n    \n        return true;\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        const euser = this.state;\n        euser.skills = this.state.skillsstring.split(',');\n        const newJob = {\n            recruiter: this.state.userdetails,\n            title: euser.title,\n            description: euser.description,\n            type: euser.type,\n            duration: euser.duration,\n            salary: euser.salary,\n            maxpos: euser.maxpos,\n            maxapp: euser.maxapp,\n            address: euser.address,\n            skills: euser.skills,\n            rating: euser.rating,\n            dateOfPost: euser.dateOfPost,\n            deadline: euser.deadline\n        };\n        const isValid = this.validate();\n        if (isValid) {\n            axios\n                .post('http://localhost:4000/job/add_job', newJob)\n                .then(response => {\n                    console.log(newJob);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            // to refresh\n            this.props.history.push(\"/viewJobs\");\n            this.props.history.push(\"/viewJobs\");\n            this.props.history.goBack();\n        }\n    };\n\n    render() {\n        const user = this.state;\n        const userRole = this.state.userdetails.role;\n        let AddJob;\n        if(userRole == \"recruiter\") {\n            AddJob = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"title\">Title</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.title}\n                        id=\"title\"\n                        type=\"text\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"description\">Description</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.description}\n                        id=\"description\"\n                        type=\"text\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"type\">Type</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.type}\n                        id=\"type\"\n                        type=\"text\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"salary\">Salary</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.salary}\n                        id=\"salary\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"maxpos\">Max. no. of positions available</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.name}\n                        id=\"maxpos\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"maxapp\">Max. total no. applications allowed</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.maxapp}\n                        id=\"maxapp\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"address\">Address</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.address}\n                        id=\"address\"\n                        type=\"text\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"skills\">Skills</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.skillsstring}\n                        id=\"skills\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"dateOfPost\">Date of Post</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.dateOfPost}\n                        id=\"dateOfPost\"\n                        type=\"date\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"deadline\">Deadline</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.deadline}\n                        id=\"deadline\"\n                        type=\"date\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Add Job\n                    </button>\n                </div>\n            </form>\n        }\n        \n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AddJob}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateJob.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(CreateJob);"]},"metadata":{},"sourceType":"module"}