{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n\n  var _usePopper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  })),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"attributes\"]);\n\n  var menu;\n  var menuProps = {\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, childArgs, {\n      props: _extends({}, menuProps, attributes.popper, {\n        style: styles.popper\n      }),\n      arrowProps: _extends({\n        ref: attachArrowRef\n      }, attributes.arrow, {\n        style: styles.arrow\n      })\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\n\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null, args.hasShown ? children(args) : null)\n  );\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","map":{"version":3,"sources":["/home/megha/mernapp/frontend/node_modules/react-overlays/esm/DropdownMenu.js"],"names":["_extends","_objectWithoutPropertiesLoose","PropTypes","React","useContext","useRef","useCallbackRef","DropdownContext","usePopper","useRootClose","mergeOptionsWithPopperConfig","noop","useDropdownMenu","options","context","_useCallbackRef","arrowElement","attachArrowRef","hasShownRef","_options","flip","offset","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","shouldUsePopper","show","alignEnd","current","handleClose","e","toggle","_ref","drop","setMenu","menuElement","toggleElement","placement","_usePopper","enabled","enableEvents","styles","attributes","popper","menu","menuProps","ref","id","childArgs","hasShown","close","props","style","arrowProps","arrow","clickTrigger","disabled","propTypes","children","func","isRequired","bool","oneOf","object","string","defaultProps","DropdownMenu","_ref2","args","createElement","Fragment","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n\n  var _usePopper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  })),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"attributes\"]);\n\n  var menu;\n  var menuProps = {\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, childArgs, {\n      props: _extends({}, menuProps, attributes.popper, {\n        style: styles.popper\n      }),\n      arrowProps: _extends({\n        ref: attachArrowRef\n      }, attributes.arrow, {\n        style: styles.arrow\n      })\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, args.hasShown ? children(args) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}