{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass MyActiveJobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.state = {\n      userdetails: [],\n      jobs: [],\n      sortedJobs: [],\n      sortName: true,\n      showForm: false\n    }; // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  deljob(id) {\n    axios.delete('http://localhost:4000/job/del_job/' + id).then(response => {\n      console.log(\"Job deleted successfully.\");\n    }).catch(function (error) {\n      console.log(error);\n    }); // to refresh\n\n    this.props.history.push(\"/viewMyActiveJobs\");\n    this.props.history.push(\"/\");\n    this.props.history.goBack();\n  }\n\n  editJob(ed) {\n    const {\n      user\n    } = this.props.auth;\n    this.state.showform = !this.state.showform;\n    this.state.editing = ed._id;\n    console.log(this.state.showform);\n    this.state.school = ed.school;\n    this.state.degree = ed.degree;\n\n    if (ed.startdate) {\n      ed.startdate = ed.startdate.toString();\n      ed.startdate = ed.startdate.substring(0, 10);\n      this.state.startdate = ed.startdate;\n    }\n\n    if (ed.enddate) {\n      ed.enddate = ed.enddate.toString();\n      ed.enddate = ed.enddate.substring(0, 10);\n      this.state.enddate = ed.enddate;\n    } // to refresh\n\n\n    this.props.history.push(\"/viewMyActiveJobs\");\n    this.props.history.push(\"/\");\n    this.props.history.goBack();\n  }\n\n  onBack() {\n    const {\n      user\n    } = this.props.auth;\n    this.state.showform = !this.state.showform;\n    this.state.editing = \"\"; // to refresh\n\n    this.props.history.push(\"/viewMyActiveJobs\");\n    this.props.history.push(\"/\");\n    this.props.history.goBack();\n  }\n\n  editJobSubmit(job) {\n    const {\n      user\n    } = this.props.auth;\n    const idToChange = job._id;\n    this.state.editing = \"\";\n    const ind = this.state.jobs.findIndex(x => x._id === idToChange);\n    if (!this.state.appmax) this.state.jobs[ind].appmax = this.state.appmax;\n    if (!this.state.posmax) this.state.jobs[ind].posmax = this.state.posmax;\n    this.state.jobs[ind].deadline = this.state.deadline;\n    axios.put('http://localhost:4000/job/edit_job/' + idToChange, this.state.jobs[ind]).then(response => {\n      console.log(this.state.userdetails);\n    }).catch(function (error) {\n      console.log(error);\n    }); // to refresh\n\n    this.state.showform = !this.state.showform;\n    this.props.history.push(\"/viewMyActiveJobs\");\n    this.props.history.push(\"/\");\n    this.props.history.goBack();\n  } // sortChange(){\n  //     var array = this.state.users;\n  //     var flag = this.state.sortName;\n  //     array.sort(function(a, b) {\n  //         if(a.date != undefined && b.date != undefined){\n  //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n  //         }\n  //         else{\n  //             return 1;\n  //         }\n  //       });\n  //     this.setState({\n  //         users:array,\n  //         sortName:!this.state.sortName,\n  //     })\n  // }\n  // renderIcon(){\n  //     if(this.state.sortName){\n  //         return(\n  //             <ArrowDownwardIcon/>\n  //         )\n  //     }\n  //     else{\n  //         return(\n  //             <ArrowUpwardIcon/>\n  //         )            \n  //     }\n  // }\n\n\n  render() {\n    const user = this.state;\n    const userRole = this.state.userdetails.role;\n    const userid = this.state.userdetails._id;\n    let MyActiveJobs;\n\n    if (userRole == \"recruiter\") {\n      MyActiveJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Filters\"))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Date of posting\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Number of Applicants\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Maximum Number of Positions\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, this.state.jobs.filter(item => item.recruiter == userid && new Date().getTime() <= new Date(item.deadline.substring(0, 10)).getTime()).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, job.dateOfPost.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, job.app), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, job.posmax), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Delete Job\",\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.deljob(job._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          color: \"#FF0000\"\n        },\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"delete\"), \" Delete\"))), React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Edit max. no. of applicants, max. no. of positions and application deadline\",\n        \"aria-label\": \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.editjob(job._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          color: \"#0000FF\"\n        },\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"edit\"), \"Edit\")))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, !this.state.showform || job._id != this.state.editing ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"appmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Maximum number of applications allowed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.appmax,\n        id: \"appmax\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"posmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Maximum number of positions available\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.posmax,\n        id: \"posmax\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Deadline for application\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.startdate,\n        id: \"deadline\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          color: \"#0000FF\"\n        },\n        className: \"btn btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.onBack(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Back\")), React.createElement(\"button\", {\n        style: {\n          color: \"#009900\"\n        },\n        className: \"btn btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.editJobSubmit(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Save\"))))))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, MyActiveJobs))))));\n  }\n\n}\n\nMyActiveJobs.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(MyActiveJobs);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","logoutUser","ButtonGroup","Dropdown","MyActiveJobs","constructor","props","onLogoutClick","e","preventDefault","state","userdetails","jobs","sortedJobs","sortName","showForm","componentDidMount","user","auth","get","id","then","response","setState","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","deljob","delete","history","push","goBack","editJob","ed","showform","editing","_id","school","degree","startdate","toString","substring","enddate","onBack","editJobSubmit","job","idToChange","ind","findIndex","x","appmax","posmax","deadline","put","render","userRole","role","userid","filter","item","recruiter","Date","getTime","map","title","dateOfPost","app","color","editjob","onSubmit","onChange","paddingLeft","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\nclass MyActiveJobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {userdetails: [],jobs: [],sortedJobs: [], sortName:true, showForm: false};\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    deljob(id) {\n        axios\n            .delete('http://localhost:4000/job/del_job/' + id)\n            .then(response => {\n                console.log(\"Job deleted successfully.\");\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        // to refresh\n        this.props.history.push(\"/viewMyActiveJobs\");\n        this.props.history.push(\"/\");\n        this.props.history.goBack();\n    }\n\n    editJob(ed) {\n        const { user } = this.props.auth;\n        this.state.showform = !this.state.showform;\n        this.state.editing = ed._id;\n        console.log(this.state.showform);\n        this.state.school = ed.school;\n        this.state.degree = ed.degree;\n        if(ed.startdate)\n        {\n            ed.startdate = ed.startdate.toString();\n            ed.startdate = ed.startdate.substring(0,10);\n            this.state.startdate = ed.startdate;\n        }\n        if(ed.enddate)\n        {\n            ed.enddate = ed.enddate.toString();\n            ed.enddate = ed.enddate.substring(0,10);\n            this.state.enddate = ed.enddate;\n        }\n        \n        // to refresh\n        this.props.history.push(\"/viewMyActiveJobs\");\n        this.props.history.push(\"/\");\n        this.props.history.goBack();\n    }\n\n    onBack() {\n        const { user } = this.props.auth;\n        this.state.showform = !this.state.showform;\n        this.state.editing = \"\";\n        \n        // to refresh\n        this.props.history.push(\"/viewMyActiveJobs\");\n        this.props.history.push(\"/\");\n        this.props.history.goBack();\n    }\n\n    editJobSubmit(job) {\n        const { user } = this.props.auth;\n        const idToChange = job._id;\n        this.state.editing = \"\";\n        const ind = this.state.jobs.findIndex(x => x._id === idToChange)\n        if(!this.state.appmax)\n            this.state.jobs[ind].appmax = this.state.appmax;\n        if(!this.state.posmax)\n            this.state.jobs[ind].posmax = this.state.posmax;\n        this.state.jobs[ind].deadline = this.state.deadline;\n        axios\n            .put('http://localhost:4000/job/edit_job/' + idToChange, this.state.jobs[ind])\n            .then(response => {\n                console.log(this.state.userdetails);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        // to refresh\n        this.state.showform = !this.state.showform;\n        this.props.history.push(\"/viewMyActiveJobs\");\n        this.props.history.push(\"/\");\n        this.props.history.goBack();\n    }\n\n    // sortChange(){\n    //     var array = this.state.users;\n    //     var flag = this.state.sortName;\n    //     array.sort(function(a, b) {\n    //         if(a.date != undefined && b.date != undefined){\n    //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n    //         }\n    //         else{\n    //             return 1;\n    //         }\n    //       });\n    //     this.setState({\n    //         users:array,\n    //         sortName:!this.state.sortName,\n    //     })\n    // }\n\n    // renderIcon(){\n    //     if(this.state.sortName){\n    //         return(\n    //             <ArrowDownwardIcon/>\n    //         )\n    //     }\n    //     else{\n    //         return(\n    //             <ArrowUpwardIcon/>\n    //         )            \n    //     }\n    // }\n\n    render() \n    {\n        const user = this.state;\n        const userRole = this.state.userdetails.role;\n        const userid = this.state.userdetails._id;\n        let MyActiveJobs;\n        if(userRole == \"recruiter\") {\n            MyActiveJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                                        <h3>Filters</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    {/* <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid> */}\n                </Grid>\n                <Grid container>\n                    {/* <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.jobs}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid> */}\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            {/* <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell> */}\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Number of Applicants</TableCell>\n                                            <TableCell>Maximum Number of Positions</TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => item.recruiter == userid && (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.dateOfPost.substring(0,10)}</TableCell>\n                                            <TableCell>{job.app}</TableCell>\n                                            <TableCell>{job.posmax}</TableCell>\n                                            <TableCell>\n                                                <Dropdown>\n                                                    <Dropdown.Toggle variant=\"secondary\"/>\n                                                    <Dropdown.Menu>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Delete Job\" aria-label=\"delete\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.deljob(job._id)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#FF0000\",\n                                                                        }}\n                                                                        className=\"material-icons\">delete</i> Delete\n                                                                </button> \n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Edit max. no. of applicants, max. no. of positions and application deadline\" aria-label=\"edit\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.editjob(job._id)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#0000FF\",\n                                                                        }}\n                                                                        className=\"material-icons\">edit</i>Edit\n                                                                </button>\n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                            </TableCell>\n                                            \n                                    <div>\n                                        { !this.state.showform || job._id != this.state.editing? \n                                            <div></div>\n                                        : \n                                            <div>\n                                                <br></br>\n                                                <form noValidate onSubmit={this.onSubmit}>\n                                                    <div className=\"input-field col s12\">\n                                                        <label htmlFor=\"appmax\">Maximum number of applications allowed</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.appmax}\n                                                            id=\"appmax\"\n                                                            type=\"number\"\n                                                        />\n                                                    </div>\n                                                    <div className=\"input-field col s12\">\n                                                        <label htmlFor=\"posmax\">Maximum number of positions available</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.posmax}\n                                                            id=\"posmax\"\n                                                            type=\"number\"\n                                                        />\n                                                    </div>\n                                                    <div className=\"input-field col s12\">\n                                                        <label htmlFor=\"deadline\">Deadline for application</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.startdate}\n                                                            id=\"deadline\"\n                                                            type=\"date\"\n                                                        />\n                                                    </div>\n                                                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                                    <button\n                                                    style={{\n                                                        color: \"#0000FF\",\n                                                        }}\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.onBack()}>\n                                                        <b>Back</b>\n                                                    </button>\n                                                    <button\n                                                    style={{\n                                                        color: \"#009900\",\n                                                        }}\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.editJobSubmit(job)}>\n                                                        <b>Save</b>\n                                                    </button>\n                                                    </div>\n                                                </form>\n                                            </div> \n                                            \n                                            }\n                                        </div>\n                                        </TableRow>\n                                        \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {MyActiveJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyActiveJobs.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(MyActiveJobs);"]},"metadata":{},"sourceType":"module"}