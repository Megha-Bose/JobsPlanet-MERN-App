{"ast":null,"code":"import format from \"./format.js\";\nimport { modifierPhases } from \"../enums.js\";\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\nexport default function validateModifiers(modifiers) {\n  modifiers.forEach(function (modifier) {\n    Object.keys(modifier).forEach(function (key) {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', \"\\\"\" + String(modifier.name) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', \"\\\"\" + String(modifier.enabled) + \"\\\"\"));\n          }\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(', '), \"\\\"\" + String(modifier.phase) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', \"\\\"\" + String(modifier.requires) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', \"\\\"\" + String(modifier.requiresIfExists) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'options':\n        case 'data':\n          break;\n\n        default:\n          console.error(\"PopperJS: an invalid property has been provided to the \\\"\" + modifier.name + \"\\\" modifier, valid properties are \" + VALID_PROPERTIES.map(function (s) {\n            return \"\\\"\" + s + \"\\\"\";\n          }).join(', ') + \"; but \\\"\" + key + \"\\\" was provided.\");\n      }\n\n      modifier.requires && modifier.requires.forEach(function (requirement) {\n        if (modifiers.find(function (mod) {\n          return mod.name === requirement;\n        }) == null) {\n          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n        }\n      });\n    });\n  });\n}","map":{"version":3,"sources":["/home/megha/mernapp/frontend/node_modules/@popperjs/core/lib/utils/validateModifiers.js"],"names":["format","modifierPhases","INVALID_MODIFIER_ERROR","MISSING_DEPENDENCY_ERROR","VALID_PROPERTIES","validateModifiers","modifiers","forEach","modifier","Object","keys","key","name","console","error","String","enabled","indexOf","phase","join","fn","effect","Array","isArray","requires","requiresIfExists","map","s","requirement","find","mod"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,IAAIC,sBAAsB,GAAG,+EAA7B;AACA,IAAIC,wBAAwB,GAAG,yEAA/B;AACA,IAAIC,gBAAgB,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,IAA7B,EAAmC,QAAnC,EAA6C,UAA7C,EAAyD,SAAzD,CAAvB;AACA,eAAe,SAASC,iBAAT,CAA2BC,SAA3B,EAAsC;AACnDA,EAAAA,SAAS,CAACC,OAAV,CAAkB,UAAUC,QAAV,EAAoB;AACpCC,IAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBD,OAAtB,CAA8B,UAAUI,GAAV,EAAe;AAC3C,cAAQA,GAAR;AACE,aAAK,MAAL;AACE,cAAI,OAAOH,QAAQ,CAACI,IAAhB,KAAyB,QAA7B,EAAuC;AACrCC,YAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACE,sBAAD,EAAyBa,MAAM,CAACP,QAAQ,CAACI,IAAV,CAA/B,EAAgD,QAAhD,EAA0D,UAA1D,EAAsE,OAAOG,MAAM,CAACP,QAAQ,CAACI,IAAV,CAAb,GAA+B,IAArG,CAApB;AACD;;AAED;;AAEF,aAAK,SAAL;AACE,cAAI,OAAOJ,QAAQ,CAACQ,OAAhB,KAA4B,SAAhC,EAA2C;AACzCH,YAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACE,sBAAD,EAAyBM,QAAQ,CAACI,IAAlC,EAAwC,WAAxC,EAAqD,WAArD,EAAkE,OAAOG,MAAM,CAACP,QAAQ,CAACQ,OAAV,CAAb,GAAkC,IAApG,CAApB;AACD;;AAEH,aAAK,OAAL;AACE,cAAIf,cAAc,CAACgB,OAAf,CAAuBT,QAAQ,CAACU,KAAhC,IAAyC,CAA7C,EAAgD;AAC9CL,YAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACE,sBAAD,EAAyBM,QAAQ,CAACI,IAAlC,EAAwC,SAAxC,EAAmD,YAAYX,cAAc,CAACkB,IAAf,CAAoB,IAApB,CAA/D,EAA0F,OAAOJ,MAAM,CAACP,QAAQ,CAACU,KAAV,CAAb,GAAgC,IAA1H,CAApB;AACD;;AAED;;AAEF,aAAK,IAAL;AACE,cAAI,OAAOV,QAAQ,CAACY,EAAhB,KAAuB,UAA3B,EAAuC;AACrCP,YAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACE,sBAAD,EAAyBM,QAAQ,CAACI,IAAlC,EAAwC,MAAxC,EAAgD,YAAhD,EAA8D,OAAOG,MAAM,CAACP,QAAQ,CAACY,EAAV,CAAb,GAA6B,IAA3F,CAApB;AACD;;AAED;;AAEF,aAAK,QAAL;AACE,cAAI,OAAOZ,QAAQ,CAACa,MAAhB,KAA2B,UAA/B,EAA2C;AACzCR,YAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACE,sBAAD,EAAyBM,QAAQ,CAACI,IAAlC,EAAwC,UAAxC,EAAoD,YAApD,EAAkE,OAAOG,MAAM,CAACP,QAAQ,CAACY,EAAV,CAAb,GAA6B,IAA/F,CAApB;AACD;;AAED;;AAEF,aAAK,UAAL;AACE,cAAI,CAACE,KAAK,CAACC,OAAN,CAAcf,QAAQ,CAACgB,QAAvB,CAAL,EAAuC;AACrCX,YAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACE,sBAAD,EAAyBM,QAAQ,CAACI,IAAlC,EAAwC,YAAxC,EAAsD,SAAtD,EAAiE,OAAOG,MAAM,CAACP,QAAQ,CAACgB,QAAV,CAAb,GAAmC,IAApG,CAApB;AACD;;AAED;;AAEF,aAAK,kBAAL;AACE,cAAI,CAACF,KAAK,CAACC,OAAN,CAAcf,QAAQ,CAACiB,gBAAvB,CAAL,EAA+C;AAC7CZ,YAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACE,sBAAD,EAAyBM,QAAQ,CAACI,IAAlC,EAAwC,oBAAxC,EAA8D,SAA9D,EAAyE,OAAOG,MAAM,CAACP,QAAQ,CAACiB,gBAAV,CAAb,GAA2C,IAApH,CAApB;AACD;;AAED;;AAEF,aAAK,SAAL;AACA,aAAK,MAAL;AACE;;AAEF;AACEZ,UAAAA,OAAO,CAACC,KAAR,CAAc,8DAA8DN,QAAQ,CAACI,IAAvE,GAA8E,oCAA9E,GAAqHR,gBAAgB,CAACsB,GAAjB,CAAqB,UAAUC,CAAV,EAAa;AACnK,mBAAO,OAAOA,CAAP,GAAW,IAAlB;AACD,WAFkI,EAEhIR,IAFgI,CAE3H,IAF2H,CAArH,GAEE,UAFF,GAEeR,GAFf,GAEqB,kBAFnC;AArDJ;;AA0DAH,MAAAA,QAAQ,CAACgB,QAAT,IAAqBhB,QAAQ,CAACgB,QAAT,CAAkBjB,OAAlB,CAA0B,UAAUqB,WAAV,EAAuB;AACpE,YAAItB,SAAS,CAACuB,IAAV,CAAe,UAAUC,GAAV,EAAe;AAChC,iBAAOA,GAAG,CAAClB,IAAJ,KAAagB,WAApB;AACD,SAFG,KAEE,IAFN,EAEY;AACVf,UAAAA,OAAO,CAACC,KAAR,CAAcd,MAAM,CAACG,wBAAD,EAA2BY,MAAM,CAACP,QAAQ,CAACI,IAAV,CAAjC,EAAkDgB,WAAlD,EAA+DA,WAA/D,CAApB;AACD;AACF,OANoB,CAArB;AAOD,KAlED;AAmED,GApED;AAqED","sourcesContent":["import format from \"./format.js\";\nimport { modifierPhases } from \"../enums.js\";\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\nexport default function validateModifiers(modifiers) {\n  modifiers.forEach(function (modifier) {\n    Object.keys(modifier).forEach(function (key) {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', \"\\\"\" + String(modifier.name) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', \"\\\"\" + String(modifier.enabled) + \"\\\"\"));\n          }\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(', '), \"\\\"\" + String(modifier.phase) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', \"\\\"\" + String(modifier.requires) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', \"\\\"\" + String(modifier.requiresIfExists) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'options':\n        case 'data':\n          break;\n\n        default:\n          console.error(\"PopperJS: an invalid property has been provided to the \\\"\" + modifier.name + \"\\\" modifier, valid properties are \" + VALID_PROPERTIES.map(function (s) {\n            return \"\\\"\" + s + \"\\\"\";\n          }).join(', ') + \"; but \\\"\" + key + \"\\\" was provided.\");\n      }\n\n      modifier.requires && modifier.requires.forEach(function (requirement) {\n        if (modifiers.find(function (mod) {\n          return mod.name === requirement;\n        }) == null) {\n          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n        }\n      });\n    });\n  });\n}"]},"metadata":{},"sourceType":"module"}