{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass MyActiveJobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.state = {\n      userdetails: [],\n      jobs: [],\n      sortedJobs: [],\n      sortName: true\n    }; // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  deljob(id) {\n    axios.delete('http://localhost:4000/job/' + id).then(response => {\n      console.log(\"Job deleted successfully.\");\n    }).catch(function (error) {\n      console.log(error);\n    }); // to refresh\n\n    this.props.history.push(\"/profile\");\n    this.props.history.push(\"/profile\");\n    this.props.history.goBack();\n  } // sortChange(){\n  //     var array = this.state.users;\n  //     var flag = this.state.sortName;\n  //     array.sort(function(a, b) {\n  //         if(a.date != undefined && b.date != undefined){\n  //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n  //         }\n  //         else{\n  //             return 1;\n  //         }\n  //       });\n  //     this.setState({\n  //         users:array,\n  //         sortName:!this.state.sortName,\n  //     })\n  // }\n  // renderIcon(){\n  //     if(this.state.sortName){\n  //         return(\n  //             <ArrowDownwardIcon/>\n  //         )\n  //     }\n  //     else{\n  //         return(\n  //             <ArrowUpwardIcon/>\n  //         )            \n  //     }\n  // }\n\n\n  render() {\n    const user = this.state;\n    const userRole = this.state.userdetails.role;\n    const userid = this.state.userdetails._id;\n    let MyActiveJobs;\n\n    if (userRole == \"recruiter\") {\n      MyActiveJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Filters\"))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Date of posting\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Number of Applicants\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Maximum Number of Positions\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, this.state.jobs.filter(item => item.recruiter == userid && new Date().getTime() <= new Date(item.deadline.substring(0, 10)).getTime()).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, job.dateOfPost.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, job.app), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, job.posmax), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Delete Above Education\",\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          color: \"#FF0000\"\n        },\n        className: \"btn waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.deljob(job._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"delete\"))))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, MyActiveJobs))))));\n  }\n\n}\n\nMyActiveJobs.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(MyActiveJobs);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","logoutUser","MyActiveJobs","constructor","props","onLogoutClick","e","preventDefault","state","userdetails","jobs","sortedJobs","sortName","componentDidMount","user","auth","get","id","then","response","setState","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","deljob","delete","history","push","goBack","render","userRole","role","userid","_id","filter","item","recruiter","Date","getTime","deadline","substring","map","job","ind","title","dateOfPost","app","posmax","color","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\n\n\nclass MyActiveJobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {userdetails: [],jobs: [],sortedJobs: [], sortName:true};\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    deljob(id) {\n        axios\n            .delete('http://localhost:4000/job/' + id)\n            .then(response => {\n                console.log(\"Job deleted successfully.\");\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        // to refresh\n        this.props.history.push(\"/profile\");\n        this.props.history.push(\"/profile\");\n        this.props.history.goBack();\n    }\n\n    // sortChange(){\n    //     var array = this.state.users;\n    //     var flag = this.state.sortName;\n    //     array.sort(function(a, b) {\n    //         if(a.date != undefined && b.date != undefined){\n    //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n    //         }\n    //         else{\n    //             return 1;\n    //         }\n    //       });\n    //     this.setState({\n    //         users:array,\n    //         sortName:!this.state.sortName,\n    //     })\n    // }\n\n    // renderIcon(){\n    //     if(this.state.sortName){\n    //         return(\n    //             <ArrowDownwardIcon/>\n    //         )\n    //     }\n    //     else{\n    //         return(\n    //             <ArrowUpwardIcon/>\n    //         )            \n    //     }\n    // }\n\n    render() \n    {\n        const user = this.state;\n        const userRole = this.state.userdetails.role;\n        const userid = this.state.userdetails._id;\n        let MyActiveJobs;\n        if(userRole == \"recruiter\") {\n            MyActiveJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                                        <h3>Filters</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    {/* <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid> */}\n                </Grid>\n                <Grid container>\n                    {/* <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.jobs}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid> */}\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            {/* <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell> */}\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Number of Applicants</TableCell>\n                                            <TableCell>Maximum Number of Positions</TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => item.recruiter == userid && (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.dateOfPost.substring(0,10)}</TableCell>\n                                            <TableCell>{job.app}</TableCell>\n                                            <TableCell>{job.posmax}</TableCell>\n                                            <TableCell>\n                                                <Tooltip title=\"Delete Above Education\" aria-label=\"delete\">\n                                                    <button\n                                                    style={{\n                                                        color: \"#FF0000\",\n                                                        }}\n                                                        className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.deljob(job._id)}>\n                                                        <i className=\"material-icons\">delete</i>\n                                                    </button>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {MyActiveJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyActiveJobs.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(MyActiveJobs);"]},"metadata":{},"sourceType":"module"}