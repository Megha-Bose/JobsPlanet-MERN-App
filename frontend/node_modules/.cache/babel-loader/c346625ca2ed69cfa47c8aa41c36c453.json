{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/CreateJob.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      // let nameError = \"\";\n      // let emailError = \"\";\n      // if (!this.state.name) {\n      //   nameError = \"Name cannot be blank\";\n      // }\n      // if (!this.state.email.includes(\"@\")) {\n      //   emailError = \"Invalid email\";\n      // }\n      // if (emailError || nameError) {\n      //   this.setState({ emailError, nameError });\n      //   return false;\n      // }\n      return true;\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let euser = this.state;\n      euser.skills = this.state.skillstr.split(',');\n\n      if (euser.durationstr != \"\") {\n        euser.duration = parseInt(euser.durationstr);\n      }\n\n      const newJob = {\n        recruiter: this.state.userdetails,\n        title: euser.title,\n        description: euser.description,\n        type: euser.type,\n        duration: euser.duration,\n        salary: euser.salary,\n        maxpos: euser.maxpos,\n        maxapp: euser.maxapp,\n        address: euser.address,\n        skills: euser.skills,\n        rating: euser.rating,\n        dateOfPost: euser.dateOfPost,\n        deadline: euser.deadline\n      };\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.post('http://localhost:4000/job/add_job', newJob).then(response => {\n          console.log(newJob);\n          alert(\"Job added successfully!\");\n        }).catch(function (error) {\n          console.log(error);\n          alert(\"Job NOT added successfully!\");\n        }); // // to refresh\n        // this.props.history.push(\"/viewJobs\");\n        // this.props.history.push(\"/viewJobs\");\n        // this.props.history.goBack();\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      recruiter: [],\n      title: \"\",\n      titleError: \"\",\n      description: \"\",\n      type: \"\",\n      typeError: \"\",\n      duration: -1,\n      durationError: \"\",\n      durationstr: \"\",\n      salary: -1,\n      salaryError: \"\",\n      // default max no of pos and app = 100\n      maxpos: 100,\n      maxapp: 100,\n      address: \"\",\n      addressError: \"\",\n      skills: [],\n      skillstr: \"\",\n      rating: 5,\n      dateOfPost: new Date(),\n      // default 100 days from now\n      myDate: new Date(new Date().getTime() + 100 * 24 * 60 * 60 * 1000)\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const user = this.state;\n    const userRole = this.state.userdetails.role;\n    let AddJob;\n\n    if (userRole == \"recruiter\") {\n      AddJob = React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.title,\n        id: \"title\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.state.titleError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.description,\n        id: \"description\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.type,\n        onChange: this.onChange,\n        id: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Select type\"), React.createElement(\"option\", {\n        value: \"fullTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Full-time\"), React.createElement(\"option\", {\n        value: \"partTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Part-time\"), React.createElement(\"option\", {\n        value: \"wfh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Work from home\")), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.state.typeError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"salary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Salary\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.salary,\n        id: \"salary\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"duration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.durationstr,\n        onChange: this.onChange,\n        id: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Select duration\"), React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Indefinite\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"1 month\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"2 months\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"3 months\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"4 months\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"5 months\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"6 months\")), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, this.state.durationError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"maxpos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Max. no. of positions available\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.maxpos,\n        id: \"maxpos\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"maxapp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Max. total no. applications allowed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.maxapp,\n        id: \"maxapp\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.address,\n        id: \"address\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, this.state.addressError)), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"skillstr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.skillstr,\n        id: \"skillstr\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"dateOfPost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Date of Post\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.dateOfPost,\n        id: \"dateOfPost\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: user.deadline,\n        id: \"deadline\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Add Job\")));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, AddJob))))));\n  }\n\n}\n\nCreateJob.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(CreateJob);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/CreateJob.js"],"names":["React","Component","axios","Card","PropTypes","connect","CreateJob","constructor","props","validate","onChange","e","setState","target","id","value","onSubmit","preventDefault","euser","state","skills","skillstr","split","durationstr","duration","parseInt","newJob","recruiter","userdetails","title","description","type","salary","maxpos","maxapp","address","rating","dateOfPost","deadline","isValid","post","then","response","console","log","alert","catch","error","titleError","typeError","durationError","salaryError","addressError","Date","myDate","getTime","componentDidMount","user","auth","get","data","componentWillReceiveProps","nextProps","errors","render","userRole","role","AddJob","fontSize","color","paddingLeft","width","borderRadius","letterSpacing","marginTop","height","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Card from \"react-bootstrap/Card\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass CreateJob extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            recruiter: [],\n            title: \"\",\n            titleError: \"\",\n            description: \"\",\n            type: \"\",\n            typeError: \"\",\n            duration: -1,\n            durationError: \"\",\n            durationstr: \"\",\n            salary: -1,\n            salaryError: \"\",\n            // default max no of pos and app = 100\n            maxpos: 100,\n            maxapp: 100,\n            address: \"\",\n            addressError: \"\",\n            skills: [],\n            skillstr: \"\",\n            rating: 5,\n            dateOfPost: new Date(),\n            // default 100 days from now\n            myDate: new Date(new Date().getTime()+(100*24*60*60*1000))\n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n             .then(response => {\n                 this.setState({userdetails: response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    validate = () => {\n        // let nameError = \"\";\n        // let emailError = \"\";\n    \n        // if (!this.state.name) {\n        //   nameError = \"Name cannot be blank\";\n        // }\n    \n        // if (!this.state.email.includes(\"@\")) {\n        //   emailError = \"Invalid email\";\n        // }\n    \n        // if (emailError || nameError) {\n        //   this.setState({ emailError, nameError });\n        //   return false;\n        // }\n    \n        return true;\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        let euser = this.state;\n        euser.skills = this.state.skillstr.split(',');\n        if(euser.durationstr != \"\")\n        {\n            euser.duration = parseInt(euser.durationstr);\n        }\n        const newJob = {\n            recruiter: this.state.userdetails,\n            title: euser.title,\n            description: euser.description,\n            type: euser.type,\n            duration: euser.duration,\n            salary: euser.salary,\n            maxpos: euser.maxpos,\n            maxapp: euser.maxapp,\n            address: euser.address,\n            skills: euser.skills,\n            rating: euser.rating,\n            dateOfPost: euser.dateOfPost,\n            deadline: euser.deadline\n        };\n        const isValid = this.validate();\n        if (isValid) {\n            axios\n                .post('http://localhost:4000/job/add_job', newJob)\n                .then(response => {\n                    console.log(newJob);\n                    alert(\"Job added successfully!\");\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Job NOT added successfully!\");\n                })\n            // // to refresh\n            // this.props.history.push(\"/viewJobs\");\n            // this.props.history.push(\"/viewJobs\");\n            // this.props.history.goBack();\n        }\n    };\n\n    render() {\n        const user = this.state;\n        const userRole = this.state.userdetails.role;\n        let AddJob;\n        if(userRole == \"recruiter\") {\n            AddJob = \n            <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"title\">Title</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.title}\n                        id=\"title\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.titleError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"description\">Description</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.description}\n                        id=\"description\"\n                        type=\"text\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"type\">Type</label><br></br>\n                    <select \n                        value={this.state.type} \n                        onChange={this.onChange}\n                        id=\"type\"\n                    >\n                        <option value=\"\">Select type</option>\n                        <option value=\"fullTime\">Full-time</option>\n                        <option value=\"partTime\">Part-time</option>\n                        <option value=\"wfh\">Work from home</option>\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.typeError}\n                    </div>\n                </div> \n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"salary\">Salary</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.salary}\n                        id=\"salary\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"duration\">Type</label><br></br>\n                    <select \n                        value={this.state.durationstr} \n                        onChange={this.onChange}\n                        id=\"type\"\n                    >\n                        <option value=\"\">Select duration</option>\n                        <option value = \"0\" >Indefinite</option>\n                        <option value=\"1\">1 month</option>\n                        <option value=\"2\">2 months</option>\n                        <option value=\"3\">3 months</option>\n                        <option value=\"4\">4 months</option>\n                        <option value=\"5\">5 months</option>\n                        <option value=\"6\">6 months</option>\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.durationError}\n                    </div>\n                </div> \n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"maxpos\">Max. no. of positions available</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.maxpos}\n                        id=\"maxpos\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"maxapp\">Max. total no. applications allowed</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.maxapp}\n                        id=\"maxapp\"\n                        type=\"number\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"address\">Address</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.address}\n                        id=\"address\"\n                        type=\"text\"\n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.addressError}\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"skillstr\">Skills</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.skillstr}\n                        id=\"skillstr\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"dateOfPost\">Date of Post</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.dateOfPost}\n                        id=\"dateOfPost\"\n                        type=\"date\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"input-field col s12\">\n                    <label htmlFor=\"deadline\">Deadline</label><br></br>\n                    <input\n                        onChange={this.onChange}\n                        value={user.deadline}\n                        id=\"deadline\"\n                        type=\"date\"\n                    />\n                    {/* <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.nameError}\n                    </div> */}\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                        style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                        }}\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                        Add Job\n                    </button>\n                </div>\n            </form>\n        }\n        \n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AddJob}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateJob.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(CreateJob);"]},"metadata":{},"sourceType":"module"}