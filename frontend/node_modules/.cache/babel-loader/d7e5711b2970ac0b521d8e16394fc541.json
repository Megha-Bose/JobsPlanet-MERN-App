{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from \"react-router-dom\";\n\nclass MyActiveJobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      userdetails: [],\n      users: [],\n      jobs: [],\n      sortedJobs: [],\n      sortName: true,\n      showform: false,\n      posmax: -1,\n      appmax: -1,\n      deadline: new Date(),\n      editing: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.state.showform = false;\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/').then(response => {\n      this.setState({\n        users: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  deljob(id) {\n    this.state.applications.filter(item => item.jobId === id && item.status === \"Accepted\").map((appli, ind) => {\n      const editEmployee = {\n        working: false\n      };\n      axios.put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editEmployee).then(response => {\n        console.log(editEmployee);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    this.state.applications.filter(item => item.jobId === id).map((appli, ind) => {\n      let applicant = this.state.users.filter(item => item._id === appli.applicantId)[0];\n      let nnumapp = +applicant.numapp - 1;\n      const editApplicant = {\n        numapp: nnumapp\n      };\n      axios.put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editApplicant).then(response => {\n        console.log(editApplicant);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      const editAppli = {\n        status: \"Deleted\"\n      };\n      axios.put('http://localhost:4000/application/edit_application/' + appli._id, editAppli).then(response => {\n        console.log(editAppli);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    axios.delete('http://localhost:4000/job/del_job/' + id).then(response => {\n      console.log(\"Job deleted successfully.\");\n    }).catch(function (error) {\n      console.log(error);\n    }); // to refresh\n\n    window.location.reload();\n  }\n\n  editJob(job) {\n    this.state.showform = !this.state.showform;\n    this.state.editing = job._id;\n    console.log(this.state.showform);\n    this.state.appmax = job.appmax;\n    this.state.posmax = job.posmax;\n\n    if (job.deadline) {\n      job.deadline = job.deadline.toString();\n      job.deadline = job.deadline.substring(0, 10);\n      this.state.deadline = job.deadline;\n    } // to refresh\n\n\n    window.location.reload();\n  }\n\n  onBack() {\n    this.state.showform = !this.state.showform;\n    this.state.editing = \"\"; // to refresh\n\n    window.location.reload();\n  }\n\n  editJobSubmit(job) {\n    const idToChange = job._id; // alert(this.state.posmax);\n\n    const ind = this.state.jobs.findIndex(x => x._id === idToChange);\n    if (this.state.appmax) this.state.jobs[ind].appmax = this.state.appmax;\n    if (this.state.posmax) this.state.jobs[ind].posmax = this.state.posmax;\n    if (this.state.deadline) this.state.jobs[ind].deadline = this.state.deadline; // alert(this.state.jobs[ind].posmax);\n\n    axios.put('http://localhost:4000/job/edit_job/' + idToChange, this.state.jobs[ind]).then(response => {\n      console.log(this.state.jobs[ind]);\n      this.state.editing = \"\";\n    }).catch(function (error) {\n      alert(\"Job couldn't be updated!\");\n      console.log(error);\n    }); // to refresh\n\n    this.state.showform = !this.state.showform;\n    window.location.reload();\n  } // sortChange(){\n  //     var array = this.state.users;\n  //     var flag = this.state.sortName;\n  //     array.sort(function(a, b) {\n  //         if(a.date != undefined && b.date != undefined){\n  //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n  //         }\n  //         else{\n  //             return 1;\n  //         }\n  //       });\n  //     this.setState({\n  //         users:array,\n  //         sortName:!this.state.sortName,\n  //     })\n  // }\n  // renderIcon(){\n  //     if(this.state.sortName){\n  //         return(\n  //             <ArrowDownwardIcon/>\n  //         )\n  //     }\n  //     else{\n  //         return(\n  //             <ArrowUpwardIcon/>\n  //         )            \n  //     }\n  // }\n\n\n  render() {\n    const userRole = this.state.userdetails.role;\n    const userid = this.state.userdetails._id;\n    let MyActiveJobs;\n\n    if (userRole === \"recruiter\") {\n      MyActiveJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"My Jobs Listing\"))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Date of posting\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Number of Applicants\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Maximum Number of Positions\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, this.state.jobs.filter(item => item.recruiter === userid).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, job.dateOfPost.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, job.numapp), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, job.posmax - job.numpos), React.createElement(Link, {\n        to: {\n          pathname: \"/appList\",\n          state: job._id // data array of objects\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"View applications\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Delete Job\",\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.deljob(job._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          color: \"#FF0000\"\n        },\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"delete\"), \" Delete\"))), React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Edit Job\",\n        \"aria-label\": \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.editJob(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          color: \"#0000FF\"\n        },\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"edit\"), \"Edit\")))))), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, !this.state.showform ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"appmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Maximum number of applications allowed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.appmax,\n        id: \"appmax\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"posmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Maximum number of positions available\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.posmax,\n        id: \"posmax\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Deadline for application\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.deadline,\n        id: \"deadline\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          color: \"#0000FF\"\n        },\n        className: \"btn btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.onBack(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Back\")), React.createElement(\"button\", {\n        style: {\n          color: \"#009900\"\n        },\n        className: \"btn btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.editJobSubmit(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Save\")))))))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, MyActiveJobs))))));\n  }\n\n}\n\nMyActiveJobs.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(MyActiveJobs);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","List","Tooltip","ListItem","PropTypes","Card","connect","Dropdown","Link","MyActiveJobs","constructor","props","onLogoutClick","e","preventDefault","logoutUser","onChange","setState","target","id","value","state","userdetails","users","jobs","sortedJobs","sortName","showform","posmax","appmax","deadline","Date","editing","componentDidMount","user","auth","get","then","response","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","deljob","applications","filter","item","jobId","status","map","appli","ind","editEmployee","working","put","applicantId","applicant","_id","nnumapp","numapp","editApplicant","editAppli","delete","window","location","reload","editJob","job","toString","substring","onBack","editJobSubmit","idToChange","findIndex","x","alert","render","userRole","role","userid","recruiter","title","dateOfPost","numpos","pathname","color","onSubmit","paddingLeft","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAIA,MAAMC,YAAN,SAA2BjB,SAA3B,CAAqC;AAEjCkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,aAhBmB,GAgBHC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWI,UAAX;AACH,KAnBkB;;AAAA,SAqBnBC,QArBmB,GAqBRH,CAAC,IAAI;AACZ,WAAKI,QAAL,CAAc;AAAE,SAACJ,CAAC,CAACK,MAAF,CAASC,EAAV,GAAeN,CAAC,CAACK,MAAF,CAASE;AAA1B,OAAd;AACH,KAvBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,QAAQ,EAAC,IALA;AAMTC,MAAAA,QAAQ,EAAE,KAND;AAOTC,MAAAA,MAAM,EAAE,CAAC,CAPA;AAQTC,MAAAA,MAAM,EAAE,CAAC,CARA;AASTC,MAAAA,QAAQ,EAAE,IAAIC,IAAJ,EATD;AAUTC,MAAAA,OAAO,EAAE;AAVA,KAAb;AAYH;;AAWDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,KAAL,CAAWM,QAAX,GAAsB,KAAtB;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAW,KAAKvB,KAAL,CAAWwB,IAA5B;AACA1C,IAAAA,KAAK,CAAC2C,GAAN,CAAU,gCAA+BF,IAAI,CAACf,EAA9C,EACSkB,IADT,CACcC,QAAQ,IAAI;AACd,WAAKrB,QAAL,CAAc;AAACK,QAAAA,WAAW,EAAEgB,QAAQ,CAACC;AAAvB,OAAd;AACH,KAHT,EAISC,KAJT,CAIe,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANT;AAOAhD,IAAAA,KAAK,CAAC2C,GAAN,CAAU,oCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKrB,QAAL,CAAc;AAACO,QAAAA,IAAI,EAAEc,QAAQ,CAACC,IAAhB;AAAsBd,QAAAA,UAAU,EAACa,QAAQ,CAACC;AAA1C,OAAd;AACH,KAHL,EAIKC,KAJL,CAIW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANL;AAOAhD,IAAAA,KAAK,CAAC2C,GAAN,CAAU,6BAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKrB,QAAL,CAAc;AAACM,QAAAA,KAAK,EAAEe,QAAQ,CAACC;AAAjB,OAAd;AACH,KAHL,EAIKC,KAJL,CAIW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANL;AAOH;;AAGDG,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAIA,SAAS,CAACC,MAAd,EAAsB;AAClB,WAAK7B,QAAL,CAAc;AACd6B,QAAAA,MAAM,EAAED,SAAS,CAACC;AADJ,OAAd;AAGH;AACJ;;AAEDC,EAAAA,MAAM,CAAC5B,EAAD,EAAK;AACP,SAAKE,KAAL,CAAW2B,YAAX,CAAwBC,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAehC,EAAf,IAAqB+B,IAAI,CAACE,MAAL,KAAgB,UAA5E,EAAwFC,GAAxF,CAA4F,CAACC,KAAD,EAAOC,GAAP,KAC5F;AACI,YAAMC,YAAY,GAAG;AACjBC,QAAAA,OAAO,EAAE;AADQ,OAArB;AAGAhE,MAAAA,KAAK,CACAiE,GADL,CACS,6CAA6CJ,KAAK,CAACK,WAD5D,EACyEH,YADzE,EAEKnB,IAFL,CAEUC,QAAQ,IAAI;AACdI,QAAAA,OAAO,CAACC,GAAR,CAAYa,YAAZ;AACH,OAJL,EAKKhB,KALL,CAKW,UAASC,KAAT,EAAgB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPL;AAQH,KAbD;AAeA,SAAKpB,KAAL,CAAW2B,YAAX,CAAwBC,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAehC,EAAtD,EAA0DkC,GAA1D,CAA8D,CAACC,KAAD,EAAOC,GAAP,KAC9D;AACI,UAAIK,SAAS,GAAG,KAAKvC,KAAL,CAAWE,KAAX,CAAiB0B,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACW,GAAL,KAAaP,KAAK,CAACK,WAAnD,EAAgE,CAAhE,CAAhB;AACA,UAAIG,OAAO,GAAG,CAACF,SAAS,CAACG,MAAX,GAAoB,CAAlC;AAEA,YAAMC,aAAa,GAAG;AAClBD,QAAAA,MAAM,EAAED;AADU,OAAtB;AAIArE,MAAAA,KAAK,CACAiE,GADL,CACS,6CAA6CJ,KAAK,CAACK,WAD5D,EACyEK,aADzE,EAEK3B,IAFL,CAEUC,QAAQ,IAAI;AACdI,QAAAA,OAAO,CAACC,GAAR,CAAYqB,aAAZ;AACH,OAJL,EAKKxB,KALL,CAKW,UAASC,KAAT,EAAgB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPL;AASA,YAAMwB,SAAS,GAAG;AACdb,QAAAA,MAAM,EAAE;AADM,OAAlB;AAGA3D,MAAAA,KAAK,CACAiE,GADL,CACS,wDAAwDJ,KAAK,CAACO,GADvE,EAC4EI,SAD5E,EAEK5B,IAFL,CAEUC,QAAQ,IAAI;AACdI,QAAAA,OAAO,CAACC,GAAR,CAAYsB,SAAZ;AACH,OAJL,EAKKzB,KALL,CAKW,UAASC,KAAT,EAAgB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPL;AAQH,KA7BD;AA+BAhD,IAAAA,KAAK,CACAyE,MADL,CACY,uCAAuC/C,EADnD,EAEKkB,IAFL,CAEUC,QAAQ,IAAI;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,KAJL,EAKKH,KALL,CAKW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL,EA/CO,CAwDP;;AACA0B,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAEDC,EAAAA,OAAO,CAACC,GAAD,EAAM;AACT,SAAKlD,KAAL,CAAWM,QAAX,GAAsB,CAAC,KAAKN,KAAL,CAAWM,QAAlC;AACA,SAAKN,KAAL,CAAWW,OAAX,GAAqBuC,GAAG,CAACV,GAAzB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWM,QAAvB;AACA,SAAKN,KAAL,CAAWQ,MAAX,GAAoB0C,GAAG,CAAC1C,MAAxB;AACA,SAAKR,KAAL,CAAWO,MAAX,GAAoB2C,GAAG,CAAC3C,MAAxB;;AACA,QAAG2C,GAAG,CAACzC,QAAP,EACA;AACIyC,MAAAA,GAAG,CAACzC,QAAJ,GAAeyC,GAAG,CAACzC,QAAJ,CAAa0C,QAAb,EAAf;AACAD,MAAAA,GAAG,CAACzC,QAAJ,GAAeyC,GAAG,CAACzC,QAAJ,CAAa2C,SAAb,CAAuB,CAAvB,EAAyB,EAAzB,CAAf;AACA,WAAKpD,KAAL,CAAWS,QAAX,GAAsByC,GAAG,CAACzC,QAA1B;AACH,KAXQ,CAYT;;;AACAqC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,SAAKrD,KAAL,CAAWM,QAAX,GAAsB,CAAC,KAAKN,KAAL,CAAWM,QAAlC;AACA,SAAKN,KAAL,CAAWW,OAAX,GAAqB,EAArB,CAFK,CAIL;;AACAmC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAEDM,EAAAA,aAAa,CAACJ,GAAD,EAAM;AACf,UAAMK,UAAU,GAAGL,GAAG,CAACV,GAAvB,CADe,CAEf;;AACA,UAAMN,GAAG,GAAG,KAAKlC,KAAL,CAAWG,IAAX,CAAgBqD,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAACjB,GAAF,KAAUe,UAAzC,CAAZ;AACA,QAAG,KAAKvD,KAAL,CAAWQ,MAAd,EACI,KAAKR,KAAL,CAAWG,IAAX,CAAgB+B,GAAhB,EAAqB1B,MAArB,GAA8B,KAAKR,KAAL,CAAWQ,MAAzC;AACJ,QAAG,KAAKR,KAAL,CAAWO,MAAd,EACI,KAAKP,KAAL,CAAWG,IAAX,CAAgB+B,GAAhB,EAAqB3B,MAArB,GAA8B,KAAKP,KAAL,CAAWO,MAAzC;AACJ,QAAG,KAAKP,KAAL,CAAWS,QAAd,EACI,KAAKT,KAAL,CAAWG,IAAX,CAAgB+B,GAAhB,EAAqBzB,QAArB,GAAgC,KAAKT,KAAL,CAAWS,QAA3C,CATW,CAUf;;AACArC,IAAAA,KAAK,CACAiE,GADL,CACS,wCAAwCkB,UADjD,EAC6D,KAAKvD,KAAL,CAAWG,IAAX,CAAgB+B,GAAhB,CAD7D,EAEKlB,IAFL,CAEUC,QAAQ,IAAI;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWG,IAAX,CAAgB+B,GAAhB,CAAZ;AACA,WAAKlC,KAAL,CAAWW,OAAX,GAAqB,EAArB;AACH,KALL,EAMKQ,KANL,CAMW,UAASC,KAAT,EAAgB;AACnBsC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACArC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL,EAXe,CAqBf;;AAEA,SAAKpB,KAAL,CAAWM,QAAX,GAAsB,CAAC,KAAKN,KAAL,CAAWM,QAAlC;AACAwC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GA3KgC,CA6KjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAW,EAAAA,MAAM,GACN;AACI,UAAMC,QAAQ,GAAG,KAAK5D,KAAL,CAAWC,WAAX,CAAuB4D,IAAxC;AACA,UAAMC,MAAM,GAAG,KAAK9D,KAAL,CAAWC,WAAX,CAAuBuC,GAAtC;AACA,QAAIpD,YAAJ;;AACA,QAAGwE,QAAQ,KAAK,WAAhB,EAA6B;AACzBxE,MAAAA,YAAY,GACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAsB,sBAAW,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,CADJ,CADA,CADJ,EA2BI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAuBI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFR,EAGQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHR,EAIQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJR,EAKQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCALR,EAMQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANR,CADJ,CADJ,EAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKY,KAAL,CAAWG,IAAX,CAAgByB,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACkC,SAAL,KAAmBD,MAAlD,EAA0D9B,GAA1D,CAA8D,CAACkB,GAAD,EAAKhB,GAAL,KAC3D,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYgB,GAAG,CAACc,KAAhB,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYd,GAAG,CAACe,UAAJ,CAAeb,SAAf,CAAyB,CAAzB,EAA2B,EAA3B,CAAZ,CAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,GAAG,CAACR,MAAhB,CAHJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYQ,GAAG,CAAC3C,MAAJ,GAAa2C,GAAG,CAACgB,MAA7B,CAJJ,EAMQ,oBAAC,IAAD;AACI,QAAA,EAAE,EAAE;AACAC,UAAAA,QAAQ,EAAE,UADV;AAEAnE,UAAAA,KAAK,EAAEkD,GAAG,CAACV,GAFX,CAEe;;AAFf,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANR,EAaI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,OAAO,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAA4B,sBAAW,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,sDADd;AAEI,QAAA,OAAO,EAAE,MAAM,KAAKd,MAAL,CAAYwB,GAAG,CAACV,GAAhB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AACA,QAAA,KAAK,EAAE;AACH4B,UAAAA,KAAK,EAAE;AADJ,SADP;AAII,QAAA,SAAS,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,YADJ,CADJ,CADJ,EAcI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,UAAf;AAA0B,sBAAW,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,sDADd;AAEI,QAAA,OAAO,EAAE,MAAM,KAAKnB,OAAL,CAAaC,GAAb,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI;AACA,QAAA,KAAK,EAAE;AACHkB,UAAAA,KAAK,EAAE;AADJ,SADP;AAII,QAAA,SAAS,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,SADJ,CADJ,CAdJ,CAFJ,CADJ,CAbJ,EA+CI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,CAAC,KAAKpE,KAAL,CAAWM,QAAZ,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAE,KAAK+D,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,EAC0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD1E,EAEI;AACI,QAAA,QAAQ,EAAE,KAAK1E,QADnB;AAEI,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWQ,MAFtB;AAGI,QAAA,EAAE,EAAC,QAHP;AAII,QAAA,IAAI,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAUI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,EACyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADzE,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKb,QADnB;AAEI,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWO,MAFtB;AAGI,QAAA,EAAE,EAAC,QAHP;AAII,QAAA,IAAI,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAVJ,EAmBI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAC8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD9D,EAEI;AACI,QAAA,QAAQ,EAAE,KAAKZ,QADnB;AAEI,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWS,QAFtB;AAGI,QAAA,EAAE,EAAC,UAHP;AAII,QAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAnBJ,EA4BI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAAE6D,UAAAA,WAAW,EAAE;AAAf,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACA,QAAA,KAAK,EAAE;AACHF,UAAAA,KAAK,EAAE;AADJ,SADP;AAII,QAAA,SAAS,EAAC,6DAJd;AAKI,QAAA,OAAO,EAAE,MAAM,KAAKf,MAAL,EALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CADA,EASA;AACA,QAAA,KAAK,EAAE;AACHe,UAAAA,KAAK,EAAE;AADJ,SADP;AAII,QAAA,SAAS,EAAC,6DAJd;AAKI,QAAA,OAAO,EAAE,MAAM,KAAKd,aAAL,CAAmBJ,GAAnB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CATA,CA5BJ,CAFJ,CAJJ,CADA,CA/CJ,CADH,CADL,CAXJ,CADJ,CADJ,CAvBJ,CA3BJ,CADA;AAmLH;;AACD,WACI;AAAK,MAAA,KAAK,EAAE;AAAEqB,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAgC,MAAA,SAAS,EAAC,0BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKpF,YADL,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAeH;;AApZgC;;AAuZrCA,YAAY,CAACqF,SAAb,GAAyB;AACrB3D,EAAAA,IAAI,EAAE/B,SAAS,CAAC2F,MAAV,CAAiBC,UADF;AAErBlD,EAAAA,MAAM,EAAE1C,SAAS,CAAC2F,MAAV,CAAiBC;AAFJ,CAAzB;;AAKA,MAAMC,eAAe,GAAG5E,KAAK,KAAK;AAC9Bc,EAAAA,IAAI,EAAEd,KAAK,CAACc,IADkB;AAE9BW,EAAAA,MAAM,EAAEzB,KAAK,CAACyB;AAFgB,CAAL,CAA7B;;AAIA,eAAexC,OAAO,CAClB2F,eADkB,CAAP,CAEbxF,YAFa,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from \"react-router-dom\";\n\n\n\nclass MyActiveJobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            users: [],\n            jobs: [],\n            sortedJobs: [], \n            sortName:true, \n            showform: false,\n            posmax: -1,\n            appmax: -1,\n            deadline: new Date(),\n            editing: \"\"\n        };\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        this.state.showform = false;\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/user/')\n            .then(response => {\n                this.setState({users: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    deljob(id) {\n        this.state.applications.filter(item => item.jobId === id && item.status === \"Accepted\").map((appli,ind) => \n        {\n            const editEmployee = {\n                working: false\n            }\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editEmployee)\n                .then(response => {\n                    console.log(editEmployee);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        })\n\n        this.state.applications.filter(item => item.jobId === id).map((appli,ind) => \n        {\n            let applicant = this.state.users.filter(item => item._id === appli.applicantId)[0];\n            let nnumapp = +applicant.numapp - 1;\n\n            const editApplicant = {\n                numapp: nnumapp\n            };\n\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editApplicant)\n                .then(response => {\n                    console.log(editApplicant);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n\n            const editAppli = {\n                status: \"Deleted\"\n            }\n            axios\n                .put('http://localhost:4000/application/edit_application/' + appli._id, editAppli)\n                .then(response => {\n                    console.log(editAppli);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        })\n\n        axios\n            .delete('http://localhost:4000/job/del_job/' + id)\n            .then(response => {\n                console.log(\"Job deleted successfully.\");\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        // to refresh\n        window.location.reload();\n    }\n\n    editJob(job) {\n        this.state.showform = !this.state.showform;\n        this.state.editing = job._id;\n        console.log(this.state.showform);\n        this.state.appmax = job.appmax;\n        this.state.posmax = job.posmax;\n        if(job.deadline)\n        {\n            job.deadline = job.deadline.toString();\n            job.deadline = job.deadline.substring(0,10);\n            this.state.deadline = job.deadline;\n        }\n        // to refresh\n        window.location.reload();\n    }\n\n    onBack() {\n        this.state.showform = !this.state.showform;\n        this.state.editing = \"\";\n        \n        // to refresh\n        window.location.reload();\n    }\n\n    editJobSubmit(job) {\n        const idToChange = job._id;\n        // alert(this.state.posmax);\n        const ind = this.state.jobs.findIndex(x => x._id === idToChange)\n        if(this.state.appmax)\n            this.state.jobs[ind].appmax = this.state.appmax;\n        if(this.state.posmax)\n            this.state.jobs[ind].posmax = this.state.posmax;\n        if(this.state.deadline)\n            this.state.jobs[ind].deadline = this.state.deadline;\n        // alert(this.state.jobs[ind].posmax);\n        axios\n            .put('http://localhost:4000/job/edit_job/' + idToChange, this.state.jobs[ind])\n            .then(response => {\n                console.log(this.state.jobs[ind]);\n                this.state.editing = \"\";\n            })\n            .catch(function(error) {\n                alert(\"Job couldn't be updated!\");\n                console.log(error);\n            })\n        // to refresh\n        \n        this.state.showform = !this.state.showform;\n        window.location.reload();\n    }\n\n    // sortChange(){\n    //     var array = this.state.users;\n    //     var flag = this.state.sortName;\n    //     array.sort(function(a, b) {\n    //         if(a.date != undefined && b.date != undefined){\n    //             return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n    //         }\n    //         else{\n    //             return 1;\n    //         }\n    //       });\n    //     this.setState({\n    //         users:array,\n    //         sortName:!this.state.sortName,\n    //     })\n    // }\n\n    // renderIcon(){\n    //     if(this.state.sortName){\n    //         return(\n    //             <ArrowDownwardIcon/>\n    //         )\n    //     }\n    //     else{\n    //         return(\n    //             <ArrowUpwardIcon/>\n    //         )            \n    //     }\n    // }\n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        const userid = this.state.userdetails._id;\n        let MyActiveJobs;\n        if(userRole === \"recruiter\") {\n            MyActiveJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>My Jobs Listing</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    {/* <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid> */}\n                </Grid>\n                <Grid container>\n                    {/* <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.jobs}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid> */}\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            {/* <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell> */}\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Number of Applicants</TableCell>\n                                            <TableCell>Maximum Number of Positions</TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => item.recruiter === userid).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.dateOfPost.substring(0,10)}</TableCell>\n                                            <TableCell>{job.numapp}</TableCell>\n                                            <TableCell>{job.posmax - job.numpos}</TableCell>\n                                            \n                                                <Link\n                                                    to={{\n                                                        pathname: \"/appList\",\n                                                        state: job._id // data array of objects\n                                                    }}\n                                                    >View applications</Link>\n                                                \n                                            <TableCell>\n                                                <Dropdown>\n                                                    <Dropdown.Toggle variant=\"secondary\"/>\n                                                    <Dropdown.Menu>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Delete Job\" aria-label=\"delete\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.deljob(job._id)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#FF0000\",\n                                                                        }}\n                                                                        className=\"material-icons\">delete</i> Delete\n                                                                </button> \n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Edit Job\" aria-label=\"edit\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.editJob(job)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#0000FF\",\n                                                                        }}\n                                                                        className=\"material-icons\">edit</i>Edit\n                                                                </button>\n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                                 \n                                            </TableCell>\n                                            <TableCell>                   \n                                            <div>\n                                            { !this.state.showform ? \n                                                <div></div>\n                                            : \n                                                <div>\n                                                    <br></br>\n                                                    <form noValidate onSubmit={this.onSubmit}>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"appmax\">Maximum number of applications allowed</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.appmax}\n                                                                id=\"appmax\"\n                                                                type=\"number\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"posmax\">Maximum number of positions available</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.posmax}\n                                                                id=\"posmax\"\n                                                                type=\"number\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"deadline\">Deadline for application</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.deadline}\n                                                                id=\"deadline\"\n                                                                type=\"date\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                                        <button\n                                                        style={{\n                                                            color: \"#0000FF\",\n                                                            }}\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                            onClick={() => this.onBack()}>\n                                                            <b>Back</b>\n                                                        </button>\n                                                        <button\n                                                        style={{\n                                                            color: \"#009900\",\n                                                            }}\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                            onClick={() => this.editJobSubmit(job)}>\n                                                            <b>Save</b>\n                                                        </button>\n                                                        </div>\n                                                    </form>\n                                                </div>  \n                                            }\n                                            </div>\n                                            </TableCell>\n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {MyActiveJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyActiveJobs.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(MyActiveJobs);"]},"metadata":{},"sourceType":"module"}