{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass JobsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onFilter = e => {\n      let jobTypeVal = this.state.jobTypeFilterVal;\n      let salaryMinVal = this.state.salaryFilterMinVal;\n      let salaryMaxVal = this.state.salaryFilterMaxVal;\n      let durationVal = \"\";\n\n      if (this.state.durationFilterVal !== \"\") {\n        durationVal = parseInt(this.state.durationFilterVal);\n      }\n\n      let filteredJobs = this.state.extraJobs;\n\n      if (jobTypeVal !== \"\" && jobTypeVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.type === jobTypeVal);\n      }\n\n      if (salaryMinVal !== \"\" && salaryMinVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.salary >= salaryMinVal);\n      }\n\n      if (salaryMaxVal !== \"\" && salaryMaxVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.salary < salaryMaxVal);\n      }\n\n      if (durationVal !== \"\" && durationVal !== undefined) {\n        filteredJobs = filteredJobs.filter(item => item.duration < durationVal);\n      }\n\n      this.setState({\n        jobs: filteredJobs\n      });\n    };\n\n    this.onSearch = e => {\n      this.setState({\n        searchval: e.target.value\n      });\n      let sval = this.state.searchval;\n\n      if (sval === \"\" || sval === undefined) {\n        this.setState({\n          jobs: this.state.extraJobs\n        });\n      } else {\n        this.setState({\n          jobs: this.state.extraJobs.filter(item => item.title.includes(sval))\n        });\n      }\n    };\n\n    this.state = {\n      userdetails: [],\n      jobs: [],\n      extraJobs: [],\n      applications: [],\n      sortName: true,\n      recruiterName: \"\",\n      showForm: false,\n      editing: \"\",\n      enteredsop: \"\",\n      sopError: \"\",\n      sortbysalary: true,\n      sortbyduration: true,\n      sortbyrating: true,\n      searchval: \"\",\n      jobTypeFilterVal: \"\",\n      salaryFilterMinVal: \"\",\n      salaryFilterMaxVal: \"\",\n      durationFilterVal: \"\"\n    };\n    this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\n    this.renderDurationIcon = this.renderDurationIcon.bind(this);\n    this.renderRatingIcon = this.renderRatingIcon.bind(this);\n    this.sortBySalary = this.sortBySalary.bind(this);\n    this.sortByDuration = this.sortByDuration.bind(this);\n    this.sortByRating = this.sortByRating.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    this.state.showForm = false;\n    this.state.editing = \"\";\n    this.state.enteredsop = \"\";\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        extraJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/application/get_applications').then(response => {\n      this.setState({\n        applications: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  sortBySalary() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbysalary;\n    array.sort(function (a, b) {\n      if (a.salary !== undefined && b.salary !== undefined) {\n        return (1 - +flag * 2) * (+a.salary - +b.salary);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbysalary: !this.state.sortbysalary\n    });\n  }\n\n  sortByDuration() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbyduration;\n    array.sort(function (a, b) {\n      if (a.duration !== undefined && b.duration !== undefined) {\n        return (1 - +flag * 2) * (+a.duration - +b.duration);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbyduration: !this.state.sortbyduration\n    });\n  }\n\n  sortByRating() {\n    var array = this.state.jobs;\n    var flag = this.state.sortbyrating;\n    array.sort(function (a, b) {\n      if (a.rating !== undefined && b.rating !== undefined) {\n        return (1 - +flag * 2) * (+a.rating - +b.rating);\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortbyrating: !this.state.sortbyrating\n    });\n  }\n\n  renderSalaryIcon() {\n    if (this.state.sortbysalary) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderDurationIcon() {\n    if (this.state.sortbyduration) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderRatingIcon() {\n    if (this.state.sortbyrating) {\n      return React.createElement(ArrowDownwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(ArrowUpwardIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      });\n    }\n  }\n\n  applied(job) {\n    const {\n      user\n    } = this.props.auth;\n    let num = 0;\n    let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status !== \"Rejected\" || item.status != \"Accepted\"));\n    num = arr.length;\n    if (num > 0) return true;else return false;\n  }\n\n  apply(job) {\n    this.state.showForm = !this.state.showForm;\n    this.state.editing = job._id; //this.setState({showform: ShowForm});\n\n    console.log(this.state.showForm);\n    this.props.history.push('/jobsList');\n    this.props.history.push('/jobsList');\n    this.props.history.goBack();\n  }\n\n  onSOPsubmit(job) {\n    const {\n      user\n    } = this.props.auth;\n    const newApplication = {\n      jobId: job._id,\n      applicantId: user.id,\n      recruiterId: job.recruiter,\n      stage: 0,\n      status: \"Applied\",\n      sop: this.state.enteredsop,\n      salary: job.salary,\n      recruiterName: job.recruiterName,\n      rating: -1,\n      title: job.title\n    };\n    let nnumapp = +job.numapp + 1;\n    const editJob = {\n      numapp: nnumapp\n    };\n    let appnumapp = +this.state.userdetails.numapp + 1;\n    const editApplicant = {\n      numapp: appnumapp\n    };\n    let num = this.state.enteredsop.split(' ').length;\n    let soperror = \"\";\n\n    if (num > 250) {\n      soperror = \"Maximum 250 words allowed.\";\n      this.setState({\n        sopError: soperror\n      });\n    }\n\n    if (appnumapp >= 10) {\n      alert(\"Maximum 10 open applications allowed.\");\n    }\n\n    if (num <= 250 && this.state.userdetails.numapp <= 10) {\n      axios.post('http://localhost:4000/application/add_application', newApplication).then(response => {\n        console.log(newApplication);\n        alert(\"Application sent successfully!\");\n      }).catch(function (error) {\n        console.log(error);\n        alert(\"Applicantion could not be sent.\");\n      });\n      axios.put('http://localhost:4000/job/edit_job/' + job._id, editJob).then(response => {\n        console.log(editJob);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.put('http://localhost:4000/user/edit_profile/' + user.id, editApplicant).then(response => {\n        console.log(editApplicant);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.state.editing = \"\";\n      window.location.reload();\n    }\n  }\n\n  render() {\n    const userRole = this.state.userdetails.role;\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let AllJobs;\n\n    if (userRole === \"applicant\") {\n      AllJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Active Jobs\")))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"searchval\",\n        onChange: this.onChange,\n        value: this.state.searchval,\n        placeholder: \"Search\",\n        fullWidth: true,\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            onClick: this.onSearch,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 371\n            },\n            __self: this\n          }, React.createElement(SearchIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"Filters:\", React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"jobTypeFilterVal\",\n        onChange: this.onChange,\n        value: this.state.jobTypeFilterVal,\n        placeholder: \"Job Type\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"salaryFilterMinVal\",\n        onChange: this.onChange,\n        value: this.state.salaryFilterMinVal,\n        placeholder: \"Min Salary\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"salaryFilterMaxVal\",\n        onChange: this.onChange,\n        value: this.state.salaryFilterMaxVal,\n        placeholder: \"Max Salary\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.state.durationFilterVal,\n        onChange: this.onChange,\n        id: \"durationFilterVal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Select duration\"), React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Indefinite\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"1 month\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, \"2 months\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"3 months\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"4 months\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"5 months\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"6 months\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"Filter\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, \"Recruiter\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Type\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortBySalary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, this.renderSalaryIcon()), \"Salary (per month)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortByDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, this.renderDurationIcon()), \"Duration(months): 0 for Indefinite\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, \"Date of posting\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.sortByRating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, this.renderRatingIcon()), \"Rating\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, this.state.jobs.filter(item => new Date().getTime() <= new Date(item.deadline.substring(0, 10)).getTime()).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, job.recruiterName), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, job.type), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, job.salary), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, job.duration), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Day-\", new Date(job.dateOfPost).getDate(), \", Month-\", monthNames[new Date(job.dateOfPost).getMonth()], \", Year-\", new Date(job.dateOfPost).getFullYear()), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, job.deadline.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, job.rating ? job.rating.toFixed(1) : \"\", React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \" star\"))), !this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Apply for this job\",\n        \"aria-label\": \"apply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.apply(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Apply\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }), this.applied(job) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Applied for this job\",\n        \"aria-label\": \"applied\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"Applied\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }), (job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job) ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"No vacancy\",\n        \"aria-label\": \"full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, \"Full\"))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }), this.state.showForm === true && job._id === this.state.editing ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"enteredsop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"Enter SOP:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.enteredsop,\n        id: \"enteredsop\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.onSOPsubmit(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, \"Submit\"))) : React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      })))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, AllJobs))))));\n  }\n\n}\n\nJobsList.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(JobsList);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Applicant/JobsList.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","logoutUser","ButtonGroup","Dropdown","JobsList","constructor","props","onLogoutClick","e","preventDefault","onChange","setState","target","id","value","onFilter","jobTypeVal","state","jobTypeFilterVal","salaryMinVal","salaryFilterMinVal","salaryMaxVal","salaryFilterMaxVal","durationVal","durationFilterVal","parseInt","filteredJobs","extraJobs","undefined","filter","item","type","salary","duration","jobs","onSearch","searchval","sval","title","includes","userdetails","applications","sortName","recruiterName","showForm","editing","enteredsop","sopError","sortbysalary","sortbyduration","sortbyrating","renderSalaryIcon","bind","renderDurationIcon","renderRatingIcon","sortBySalary","sortByDuration","sortByRating","componentDidMount","user","auth","get","then","response","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","array","flag","sort","a","b","rating","applied","job","num","arr","jobId","_id","applicantId","status","length","apply","history","push","goBack","onSOPsubmit","newApplication","recruiterId","recruiter","stage","sop","nnumapp","numapp","editJob","appnumapp","editApplicant","split","soperror","alert","post","put","window","location","reload","render","userRole","role","monthNames","AllJobs","endAdornment","Date","getTime","deadline","substring","map","ind","dateOfPost","getDate","getMonth","getFullYear","toFixed","numpos","posmax","appmax","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\nclass JobsList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            jobs: [],\n            extraJobs: [], \n            applications: [],\n            sortName:true, \n            recruiterName: \"\",\n            showForm: false,\n            editing: \"\",\n            enteredsop: \"\",\n            sopError: \"\",\n            sortbysalary:true,\n            sortbyduration:true,\n            sortbyrating:true,\n            searchval: \"\",\n            jobTypeFilterVal: \"\",\n            salaryFilterMinVal: \"\",\n            salaryFilterMaxVal: \"\",\n            durationFilterVal: \"\"\n        };\n        this.renderSalaryIcon = this.renderSalaryIcon.bind(this);\n        this.renderDurationIcon = this.renderDurationIcon.bind(this);\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\n        this.sortBySalary = this.sortBySalary.bind(this);\n        this.sortByDuration = this.sortByDuration.bind(this);\n        this.sortByRating = this.sortByRating.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onFilter = e => {\n        let jobTypeVal = this.state.jobTypeFilterVal;\n        let salaryMinVal = this.state.salaryFilterMinVal;\n        let salaryMaxVal = this.state.salaryFilterMaxVal;\n        let durationVal = \"\";\n        if(this.state.durationFilterVal !== \"\")\n        {\n            durationVal = parseInt(this.state.durationFilterVal);\n        }\n        let filteredJobs = this.state.extraJobs;\n        if(jobTypeVal !== \"\" && jobTypeVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.type === jobTypeVal);\n        }\n        if(salaryMinVal !== \"\" && salaryMinVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.salary >= salaryMinVal);\n        }\n        if(salaryMaxVal !== \"\" && salaryMaxVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.salary < salaryMaxVal);\n        }\n        if(durationVal !== \"\" && durationVal !== undefined)\n        {\n            filteredJobs = filteredJobs.filter(item => item.duration < durationVal);\n        }\n        this.setState({ jobs: filteredJobs });\n    };\n\n    onSearch = e => {\n        this.setState({ searchval : e.target.value });\n        let sval = this.state.searchval;\n        if(sval === \"\" || sval === undefined)\n        {\n            this.setState({ jobs : this.state.extraJobs });\n        }\n        else\n        {\n            this.setState({ jobs : this.state.extraJobs.filter(item => item.title.includes(sval)) });\n        }\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        this.state.showForm = false;\n        this.state.editing = \"\";\n        this.state.enteredsop = \"\";\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, extraJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    sortBySalary(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbysalary;\n        array.sort(function(a, b) {\n            if(a.salary !== undefined && b.salary !== undefined){\n                return (1 - +flag*2) * (+a.salary - +b.salary);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbysalary:!this.state.sortbysalary,\n        })\n    }\n\n    sortByDuration(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyduration;\n        array.sort(function(a, b) {\n            if(a.duration !== undefined && b.duration !== undefined){\n                return (1 - +flag*2) * (+a.duration - +b.duration);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyduration:!this.state.sortbyduration,\n        })\n    }\n\n    sortByRating(){\n        var array = this.state.jobs;\n        var flag = this.state.sortbyrating;\n        array.sort(function(a, b) {\n            if(a.rating !== undefined && b.rating !== undefined){\n                return (1 - +flag*2) * (+a.rating - +b.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            jobs:array,\n            sortbyrating:!this.state.sortbyrating,\n        })\n    }\n\n    renderSalaryIcon(){\n        if(this.state.sortbysalary){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderDurationIcon(){\n        if(this.state.sortbyduration){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderRatingIcon(){\n        if(this.state.sortbyrating){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    applied(job) {\n        const { user } = this.props.auth;\n        let num = 0;\n        let arr = this.state.applications.filter(item => item.jobId === job._id && item.applicantId === user.id && (item.status !== \"Rejected\" || item.status != \"Accepted\"));\n        num = arr.length;\n        if(num>0) return true;\n        else return false;\n    }\n\n    apply(job)\n    {\n        this.state.showForm = !this.state.showForm;\n        this.state.editing = job._id;\n        //this.setState({showform: ShowForm});\n        console.log(this.state.showForm);\n        this.props.history.push('/jobsList');\n        this.props.history.push('/jobsList');\n        this.props.history.goBack();\n    }\n\n    onSOPsubmit(job)\n    {\n        const { user } = this.props.auth;\n        const newApplication = {\n            jobId: job._id,\n            applicantId: user.id,\n            recruiterId:job.recruiter,\n            stage: 0,\n            status: \"Applied\",\n            sop: this.state.enteredsop,\n            salary: job.salary,\n            recruiterName: job.recruiterName,\n            rating: -1,\n            title: job.title\n        };\n\n        let nnumapp = +job.numapp + 1;\n\n        const editJob = {\n            numapp: nnumapp \n        }\n\n        let appnumapp = +this.state.userdetails.numapp + 1;\n\n        const editApplicant = {\n            numapp:  appnumapp\n        }\n\n        let num = this.state.enteredsop.split(' ').length;\n\n        let soperror = \"\";\n        if(num>250)\n        {\n            soperror = \"Maximum 250 words allowed.\";\n            this.setState({sopError: soperror});\n        }\n\n        if(appnumapp >= 10)\n        {\n            alert(\"Maximum 10 open applications allowed.\");\n        }\n        \n        if(num <= 250 && this.state.userdetails.numapp <= 10)\n        {\n            axios\n                .post('http://localhost:4000/application/add_application', newApplication)\n                .then(response => {\n                    console.log(newApplication);\n                    alert(\"Application sent successfully!\");\n                })\n                .catch(function(error) {\n                    console.log(error);\n                    alert(\"Applicantion could not be sent.\");\n                })\n            axios\n                .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n                .then(response => {\n                    console.log(editJob);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + user.id, editApplicant)\n                .then(response => {\n                    console.log(editApplicant);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            this.state.editing = \"\";\n            window.location.reload();\n        }\n    }\n    \n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        let AllJobs;\n        if(userRole === \"applicant\") {\n            AllJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Active Jobs</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"searchval\" \n                        onChange={this.onChange}\n                        value={this.state.searchval}\n                        placeholder=\"Search\"\n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    \n                                    <IconButton onClick={this.onSearch}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                   \n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        Filters:\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <TextField \n                                id=\"jobTypeFilterVal\" \n                                onChange={this.onChange}\n                                value={this.state.jobTypeFilterVal}\n                                placeholder=\"Job Type\"\n                                fullWidth={true}   \n                            />\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                            <TextField \n                                id=\"salaryFilterMinVal\" \n                                onChange={this.onChange}\n                                value={this.state.salaryFilterMinVal}\n                                placeholder=\"Min Salary\"\n                                fullWidth={true}   \n                            />\n                            <TextField \n                                id=\"salaryFilterMaxVal\" \n                                onChange={this.onChange}\n                                value={this.state.salaryFilterMaxVal}\n                                placeholder=\"Max Salary\"\n                                fullWidth={true}   \n                            />\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n                       \n                            <select \n                                value={this.state.durationFilterVal} \n                                onChange={this.onChange}\n                                id=\"durationFilterVal\"\n                            >\n                                <option value=\"\">Select duration</option>\n                                <option value = \"0\" >Indefinite</option>\n                                <option value=\"1\">1 month</option>\n                                <option value=\"2\">2 months</option>\n                                <option value=\"3\">3 months</option>\n                                <option value=\"4\">4 months</option>\n                                <option value=\"5\">5 months</option>\n                                <option value=\"6\">6 months</option>\n                            </select>\n                \n                            <hr></hr>\n                            <button onClick={this.onFilter}>\n                                Filter\n                            </button>\n                            <hr></hr>\n                        </List>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            {/* <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell> */}\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                            <TableCell>Type</TableCell>\n                                            <TableCell><Button onClick={this.sortBySalary}>{this.renderSalaryIcon()}</Button>Salary (per month)</TableCell>\n                                            <TableCell><Button onClick={this.sortByDuration}>{this.renderDurationIcon()}</Button>Duration(months): 0 for Indefinite</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Deadline</TableCell>\n                                            <TableCell><Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button>Rating</TableCell>\n                                            \n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => (new Date()).getTime() <= (new Date(item.deadline.substring(0,10))).getTime()).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.recruiterName}</TableCell>\n                                            <TableCell>{job.type}</TableCell>\n                                            <TableCell>{job.salary}</TableCell>\n                                            <TableCell>{job.duration}</TableCell>\n                                            <TableCell>Day-{new Date(job.dateOfPost).getDate()}, Month-{monthNames[new Date(job.dateOfPost).getMonth()]}, Year-{new Date(job.dateOfPost).getFullYear()}</TableCell>\n                                            <TableCell>{job.deadline.substring(0,10)}</TableCell>\n                                            <TableCell>{job.rating? job.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                    \n                                            {!this.applied(job) && job._id !== this.state.editing && !(job.numpos >= job.posmax || job.numapp >= job.appmax)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Apply for this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.apply(job)}>\n                                                        Apply\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Applied for this job\" aria-label=\"applied\">\n                                                    <button\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Applied\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            : <div></div>\n\n                                            }\n                                            {(job.numpos >= job.posmax || job.numapp >= job.appmax) && !this.applied(job)?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"No vacancy\" aria-label=\"full\">\n                                                    <button\n                                                        className=\"btn btn-danger disabled btn-sm waves-effect waves-light hoverable blue accent-3\">\n                                                        Full\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n                                                <div></div>\n\n                                            }\n\n                                            {this.state.showForm === true && job._id === this.state.editing?\n                                            <TableCell>\n                                                <div>\n                                                    <div className=\"input-field\">\n                                                        <label htmlFor=\"enteredsop\">Enter SOP:</label><br></br>\n                                                        <input\n                                                            onChange={this.onChange}\n                                                            value={this.state.enteredsop}\n                                                            id=\"enteredsop\"\n                                                            type=\"text\"\n                                                        />\n                                                    </div>\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.onSOPsubmit(job)}>\n                                                        Submit\n                                                    </button>\n                                                </div>                                    \n                                            </TableCell>\n                                            : <TableCell></TableCell>\n                                            }\n\n                                            \n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AllJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nJobsList.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(JobsList);"]},"metadata":{},"sourceType":"module"}