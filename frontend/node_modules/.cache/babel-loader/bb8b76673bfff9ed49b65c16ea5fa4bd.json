{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Applicant/MyApplications.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass MyApplications extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      userdetails: [],\n      applications: [],\n      rating: 5\n    }; // this.renderIcon = this.renderIcon.bind(this);\n    // this.sortChange = this.sortChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    this.state.showForm = false;\n    this.state.editing = \"\";\n    this.state.enteredsop = \"\";\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/application/get_applications').then(response => {\n      this.setState({\n        applications: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  rated(job) {\n    return false;\n  }\n\n  rate(job) {\n    this.state.showForm = !this.state.showForm;\n    this.state.editing = job._id; //this.setState({showform: ShowForm});\n\n    console.log(this.state.showForm);\n    this.props.history.push(\"/myApplications\");\n    this.props.history.push(\"/myApplications\");\n    this.props.history.goBack();\n  }\n\n  onSOPsubmit(job) {\n    const {\n      user\n    } = this.props.auth;\n    const newApplication = {\n      rating: this.state.rating\n    };\n    let num = this.state.enteredsop.split(' ').length;\n    axios.post('http://localhost:4000/application/add_application', newApplication).then(response => {\n      console.log(newApplication);\n      alert(\"Application rated successfully!\"); // to refresh\n\n      this.props.history.push(\"/myApplications\");\n      this.props.history.push(\"/myApplications\");\n      this.props.history.goBack();\n    }).catch(function (error) {\n      console.log(error);\n      alert(\"Applicantion could not be rated.\");\n    });\n    this.state.editing = \"\";\n    this.props.history.push(\"/myApplications\");\n    this.props.history.push(\"/myApplications\");\n    this.props.history.goBack();\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const userRole = this.state.userdetails.role;\n    let AppliedJobs;\n\n    if (userRole === \"applicant\") {\n      AppliedJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"My Applications\"))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 2,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Date of Joining\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Salary (per month)\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Recruiter\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.applications.filter(item => item.applicantId === user.id).map((application, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, application.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, application.doj), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, application.salary), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, application.recruiterName), !this.rated(application) && application.status === \"Accepted\" ? React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Rate this job\",\n        \"aria-label\": \"apply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.rate(application),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Rate\"))) : React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"container valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, AppliedJobs))))));\n  }\n\n}\n\nMyApplications.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(MyApplications);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Applicant/MyApplications.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","TextField","List","Tooltip","ListItem","Divider","Autocomplete","IconButton","InputAdornment","SearchIcon","ArrowUpwardIcon","ArrowDownwardIcon","PropTypes","Card","connect","logoutUser","ButtonGroup","Dropdown","MyApplications","constructor","props","onLogoutClick","e","preventDefault","onChange","setState","target","id","value","state","userdetails","applications","rating","componentDidMount","user","auth","showForm","editing","enteredsop","get","then","response","data","catch","error","console","log","jobs","sortedJobs","componentWillReceiveProps","nextProps","errors","rated","job","rate","_id","history","push","goBack","onSOPsubmit","newApplication","num","split","length","post","alert","render","userRole","role","AppliedJobs","filter","item","applicantId","map","application","ind","title","doj","salary","recruiterName","status","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\nclass MyApplications extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            applications: [],\n            rating: 5\n        };\n        // this.renderIcon = this.renderIcon.bind(this);\n        // this.sortChange = this.sortChange.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        this.state.showForm = false;\n        this.state.editing = \"\";\n        this.state.enteredsop = \"\";\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    rated(job) {\n        return false;\n    }\n\n    rate(job)\n    {\n        this.state.showForm = !this.state.showForm;\n        this.state.editing = job._id;\n        //this.setState({showform: ShowForm});\n        console.log(this.state.showForm);\n        this.props.history.push(\"/myApplications\");\n        this.props.history.push(\"/myApplications\");\n        this.props.history.goBack();\n    }\n\n    onSOPsubmit(job)\n    {\n        const { user } = this.props.auth;\n        const newApplication = {\n            rating: this.state.rating\n        };\n\n        let num = this.state.enteredsop.split(' ').length;\n        \n        axios\n            .post('http://localhost:4000/application/add_application', newApplication)\n            .then(response => {\n                console.log(newApplication);\n                alert(\"Application rated successfully!\");\n                // to refresh\n                this.props.history.push(\"/myApplications\");\n                this.props.history.push(\"/myApplications\");\n                this.props.history.goBack();\n            })\n            .catch(function(error) {\n                console.log(error);\n                alert(\"Applicantion could not be rated.\");\n            })\n        this.state.editing = \"\";\n        this.props.history.push(\"/myApplications\");\n        this.props.history.push(\"/myApplications\");\n        this.props.history.goBack();\n    \n    }\n\n    render() \n    {\n        const { user } = this.props.auth;\n        const userRole = this.state.userdetails.role;\n        let AppliedJobs;\n        if(userRole === \"applicant\") {\n            AppliedJobs =\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>My Applications</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={2} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of Joining</TableCell>\n                                            <TableCell>Salary (per month)</TableCell>\n                                            <TableCell>Recruiter</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.applications.filter(item => item.applicantId === user.id).map((application,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{application.title}</TableCell>\n                                            <TableCell>{application.doj}</TableCell>\n                                            <TableCell>{application.salary}</TableCell>\n                                            <TableCell>{application.recruiterName}</TableCell>\n                                           \n                                            {!this.rated(application) && application.status === \"Accepted\"?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Rate this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.rate(application)}>\n                                                        Rate\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <TableCell>\n                                                <div></div>                                           \n                                            </TableCell>\n\n                                            }\n                                            \n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {AppliedJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyApplications.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(MyApplications);"]},"metadata":{},"sourceType":"module"}