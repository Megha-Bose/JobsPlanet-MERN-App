{"ast":null,"code":"var _jsxFileName = \"/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from \"react-router-dom\";\n\nclass MyActiveJobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      userdetails: [],\n      users: [],\n      applications: [],\n      jobs: [],\n      sortedJobs: [],\n      sortName: true,\n      showform: false,\n      posmax: -1,\n      appmax: -1,\n      deadline: new Date(),\n      editing: \"\"\n    };\n    this.deljob = this.deljob.bind(this);\n    this.editJob = this.editJob.bind(this);\n    this.editJobSubmit = this.editJobSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props.auth;\n    axios.get('http://localhost:4000/user/' + user.id).then(response => {\n      this.setState({\n        userdetails: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/job/get_jobs').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/').then(response => {\n      this.setState({\n        users: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/application/get_applications').then(response => {\n      this.setState({\n        applications: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  deljob(id) {\n    console.log(id);\n    this.state.applications.filter(item => item.jobId === id).forEach(function (appli) {\n      let applicant = this.state.users.filter(item => item._id === appli.applicantId)[0];\n      let nnumapp = +applicant.numapp;\n\n      if (applicant.working === false) {\n        nnumapp = +nnumapp - 1;\n      }\n\n      const editApplicant = {\n        numapp: nnumapp\n      };\n      axios.put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editApplicant).then(response => {\n        console.log(editApplicant);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      const editAppli = {\n        status: \"Deleted\"\n      };\n      axios.put('http://localhost:4000/application/edit_application/' + appli._id, editAppli).then(response => {\n        console.log(editAppli);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    this.state.applications.filter(item => item.jobId === id && item.status === \"Accepted\").forEach(function (appli) {\n      const editEmployee = {\n        working: false\n      };\n      axios.put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editEmployee).then(response => {\n        console.log(editEmployee);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    axios.delete('http://localhost:4000/job/del_job/' + id).then(response => {\n      alert(\"Job deleted successfully.\");\n    }).catch(function (error) {\n      console.log(error);\n    }); // to refresh\n\n    window.location.reload();\n  }\n\n  editJob(job) {\n    let show = !this.state.showform;\n    this.setState({\n      showform: show\n    });\n    this.setState({\n      editing: job._id\n    });\n    console.log(this.state.showform);\n    this.setState({\n      appmax: job.appmax\n    });\n    this.setState({\n      posmax: job.posmax\n    });\n\n    if (job.deadline) {\n      job.deadline = job.deadline.toString();\n      job.deadline = job.deadline.substring(0, 10);\n      this.setState({\n        deadline: job.deadline\n      });\n    } // to refresh\n\n\n    this.props.history.push('/viewMyActiveJobs');\n  }\n\n  onBack() {\n    let show = !this.state.showform;\n    this.setState({\n      showform: show\n    });\n    this.setState({\n      editing: \"\"\n    }); // to refresh\n\n    this.props.history.push('/viewMyActiveJobs');\n  }\n\n  editJobSubmit(job) {\n    const idToChange = job._id;\n    const ind = this.state.jobs.findIndex(x => x._id === idToChange);\n    if (this.state.appmax) this.state.jobs[ind].appmax = this.state.appmax;\n    if (this.state.posmax) this.state.jobs[ind].posmax = this.state.posmax;\n    if (this.state.deadline) this.state.jobs[ind].deadline = this.state.deadline;\n    axios.put('http://localhost:4000/job/edit_job/' + idToChange, this.state.jobs[ind]).then(response => {\n      console.log(this.state.jobs[ind]);\n      this.setState({\n        editing: \"\"\n      });\n    }).catch(function (error) {\n      alert(\"Job couldn't be updated!\");\n      console.log(error);\n    }); // to refresh\n\n    let show = !this.state.showform;\n    this.setState({\n      showform: show\n    });\n    window.location.reload();\n  }\n\n  render() {\n    const userRole = this.state.userdetails.role;\n    const userid = this.state.userdetails._id;\n    let MyActiveJobs;\n\n    if (userRole === \"recruiter\") {\n      MyActiveJobs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(List, {\n        component: \"nav\",\n        \"aria-label\": \"mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"My Jobs Listing \"), React.createElement(Tooltip, {\n        title: \"Add Job\",\n        \"aria-label\": \"added\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          color: '#009900',\n          weight: 'bold'\n        },\n        to: \"/addJob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \" add\")))))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Date of posting\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Number of Applicants\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Remaining Number of Positions\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, this.state.jobs.filter(item => item.recruiter === userid).map((job, ind) => React.createElement(TableRow, {\n        key: ind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, job.title), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, job.dateOfPost.substring(0, 10)), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, job.numapp), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, job.posmax - job.numpos), React.createElement(Link, {\n        to: {\n          pathname: \"/appList\",\n          state: job._id // data array of objects\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"View applications\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Delete Job\",\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.deljob(job._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          color: \"#FF0000\"\n        },\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"delete\"), \" Delete\"))), React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Edit Job\",\n        \"aria-label\": \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.editJob(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          color: \"#0000FF\"\n        },\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"edit\"), \"Edit\")))))), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, !this.state.showform || this.state.editing !== job._id ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"appmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Maximum number of applications allowed\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.appmax,\n        id: \"appmax\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"posmax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Maximum number of positions available\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.posmax,\n        id: \"posmax\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"Deadline for application\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.deadline,\n        id: \"deadline\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          color: \"#0000FF\"\n        },\n        className: \"btn btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.onBack(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Back\")), React.createElement(\"button\", {\n        style: {\n          color: \"#009900\"\n        },\n        className: \"btn btn-sm waves-effect waves-light hoverable blue accent-3\",\n        onClick: () => this.editJobSubmit(job),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Save\")))))))))))))));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      className: \"valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, MyActiveJobs))))));\n  }\n\n}\n\nMyActiveJobs.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(MyActiveJobs);","map":{"version":3,"sources":["/home/megha/mernapp/frontend/src/components/Recruiter/MyActiveJobs.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","List","Tooltip","ListItem","PropTypes","Card","connect","Dropdown","Link","MyActiveJobs","constructor","props","onLogoutClick","e","preventDefault","logoutUser","onChange","setState","target","id","value","state","userdetails","users","applications","jobs","sortedJobs","sortName","showform","posmax","appmax","deadline","Date","editing","deljob","bind","editJob","editJobSubmit","componentDidMount","user","auth","get","then","response","data","catch","error","console","log","componentWillReceiveProps","nextProps","errors","filter","item","jobId","forEach","appli","applicant","_id","applicantId","nnumapp","numapp","working","editApplicant","put","editAppli","status","editEmployee","delete","alert","window","location","reload","job","show","toString","substring","history","push","onBack","idToChange","ind","findIndex","x","render","userRole","role","userid","color","weight","recruiter","map","title","dateOfPost","numpos","pathname","onSubmit","paddingLeft","height","width","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from \"react-router-dom\";\n\n\n\nclass MyActiveJobs extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            users: [],\n            applications: [],\n            jobs: [],\n            sortedJobs: [], \n            sortName:true, \n            showform: false,\n            posmax: -1,\n            appmax: -1,\n            deadline: new Date(),\n            editing: \"\"\n        };\n        this.deljob = this.deljob.bind(this);\n        this.editJob = this.editJob.bind(this);\n        this.editJobSubmit = this.editJobSubmit.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data, sortedJobs:response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/user/')\n            .then(response => {\n                this.setState({users: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    deljob(id) {\n        console.log(id);\n        this.state.applications.filter(item => item.jobId === id).forEach(\n            function(appli) \n            {\n                let applicant = this.state.users.filter(item => item._id === appli.applicantId)[0];\n                let nnumapp = +applicant.numapp;\n\n                if(applicant.working === false)\n                {\n                    nnumapp = +nnumapp - 1;\n                }\n\n                const editApplicant = {\n                    numapp: nnumapp\n                };\n\n                axios\n                    .put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editApplicant)\n                    .then(response => {\n                        console.log(editApplicant);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n\n                const editAppli = {\n                    status: \"Deleted\"\n                }\n\n                axios\n                    .put('http://localhost:4000/application/edit_application/' + appli._id, editAppli)\n                    .then(response => {\n                        console.log(editAppli);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n            })\n\n        this.state.applications.filter(item => item.jobId === id && item.status === \"Accepted\").forEach(function(appli) \n        {\n            const editEmployee = {\n                working: false\n            }\n            axios\n                .put('http://localhost:4000/user/edit_profile/' + appli.applicantId, editEmployee)\n                .then(response => {\n                    console.log(editEmployee);\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        })\n\n        axios\n            .delete('http://localhost:4000/job/del_job/' + id)\n            .then(response => {\n                alert(\"Job deleted successfully.\");\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        // to refresh\n        window.location.reload();\n    }\n\n    editJob(job) {\n        let show = !this.state.showform;\n        this.setState({ showform: show});\n        this.setState({ editing: job._id });\n        console.log(this.state.showform);\n        this.setState({ appmax: job.appmax });\n        this.setState({ posmax: job.posmax });\n        if(job.deadline)\n        {\n            job.deadline = job.deadline.toString();\n            job.deadline = job.deadline.substring(0,10);\n            this.setState({ deadline: job.deadline });\n        }\n        // to refresh\n        this.props.history.push('/viewMyActiveJobs');\n    }\n\n    onBack() {\n        let show = !this.state.showform;\n        this.setState({ showform: show});\n        this.setState({ editing: \"\" });\n        \n        // to refresh\n        this.props.history.push('/viewMyActiveJobs');\n    }\n\n    editJobSubmit(job) {\n        const idToChange = job._id;\n        const ind = this.state.jobs.findIndex(x => x._id === idToChange)\n        if(this.state.appmax)\n            this.state.jobs[ind].appmax = this.state.appmax;\n        if(this.state.posmax)\n            this.state.jobs[ind].posmax = this.state.posmax;\n        if(this.state.deadline)\n            this.state.jobs[ind].deadline = this.state.deadline;\n        axios\n            .put('http://localhost:4000/job/edit_job/' + idToChange, this.state.jobs[ind])\n            .then(response => {\n                console.log(this.state.jobs[ind]);\n                this.setState({ editing: \"\" });\n            })\n            .catch(function(error) {\n                alert(\"Job couldn't be updated!\");\n                console.log(error);\n            })\n        // to refresh\n        \n        let show = !this.state.showform;\n        this.setState({ showform: show});\n        window.location.reload();\n    }\n\n\n    render() \n    {\n        const userRole = this.state.userdetails.role;\n        const userid = this.state.userdetails._id;\n        let MyActiveJobs;\n        if(userRole === \"recruiter\") {\n            MyActiveJobs =\n            <div>\n                <Grid>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>My Jobs Listing </h3>\n                            <Tooltip title=\"Add Job\" aria-label=\"added\">\n                            <Link style={{ color: '#009900', weight: 'bold' }} to=\"/addJob\"><i className=\"material-icons\"><h2> add</h2></i></Link>\n                            </Tooltip>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Date of posting</TableCell>\n                                            <TableCell>Number of Applicants</TableCell>\n                                            <TableCell>Remaining Number of Positions</TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.jobs.filter(item => item.recruiter === userid).map((job,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{job.title}</TableCell>\n                                            <TableCell>{job.dateOfPost.substring(0,10)}</TableCell>\n                                            <TableCell>{job.numapp}</TableCell>\n                                            <TableCell>{job.posmax - job.numpos}</TableCell>\n                                            \n                                                <Link\n                                                    to={{\n                                                        pathname: \"/appList\",\n                                                        state: job._id // data array of objects\n                                                    }}\n                                                    >View applications</Link>\n                                                \n                                            <TableCell>\n                                                <Dropdown>\n                                                    <Dropdown.Toggle variant=\"secondary\"/>\n                                                    <Dropdown.Menu>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Delete Job\" aria-label=\"delete\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.deljob(job._id)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#FF0000\",\n                                                                        }}\n                                                                        className=\"material-icons\">delete</i> Delete\n                                                                </button> \n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item>\n                                                            <Tooltip title=\"Edit Job\" aria-label=\"edit\">\n                                                                <button\n                                                                    className=\"btn waves-effect waves-light hoverable blue accent-3\" \n                                                                    onClick={() => this.editJob(job)}>\n                                                                    <i \n                                                                    style={{\n                                                                        color: \"#0000FF\",\n                                                                        }}\n                                                                        className=\"material-icons\">edit</i>Edit\n                                                                </button>\n                                                            </Tooltip>\n                                                        </Dropdown.Item>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                                 \n                                            </TableCell>\n                                            <TableCell>                   \n                                            <div>\n                                            { !this.state.showform || this.state.editing !== job._id? \n                                                <div></div>\n                                            : \n                                                <div>\n                                                    <br></br>\n                                                    <form noValidate onSubmit={this.onSubmit}>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"appmax\">Maximum number of applications allowed</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.appmax}\n                                                                id=\"appmax\"\n                                                                type=\"number\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"posmax\">Maximum number of positions available</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.posmax}\n                                                                id=\"posmax\"\n                                                                type=\"number\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"input-field col s12\">\n                                                            <label htmlFor=\"deadline\">Deadline for application</label><br></br>\n                                                            <input\n                                                                onChange={this.onChange}\n                                                                value={this.state.deadline}\n                                                                id=\"deadline\"\n                                                                type=\"date\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                                        <button\n                                                        style={{\n                                                            color: \"#0000FF\",\n                                                            }}\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                            onClick={() => this.onBack()}>\n                                                            <b>Back</b>\n                                                        </button>\n                                                        <button\n                                                        style={{\n                                                            color: \"#009900\",\n                                                            }}\n                                                            className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                            onClick={() => this.editJobSubmit(job)}>\n                                                            <b>Save</b>\n                                                        </button>\n                                                        </div>\n                                                    </form>\n                                                </div>  \n                                            }\n                                            </div>\n                                            </TableCell>\n                                        </TableRow> \n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    {MyActiveJobs}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyActiveJobs.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(MyActiveJobs);"]},"metadata":{},"sourceType":"module"}